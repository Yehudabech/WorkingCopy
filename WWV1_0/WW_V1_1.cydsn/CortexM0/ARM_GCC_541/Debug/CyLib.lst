ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	cydelayFreqHz
  20              		.data
  21              		.align	2
  22              		.type	cydelayFreqHz, %object
  23              		.size	cydelayFreqHz, 4
  24              	cydelayFreqHz:
  25 0000 006CDC02 		.word	48000000
  26              		.global	cydelayFreqKhz
  27              		.align	2
  28              		.type	cydelayFreqKhz, %object
  29              		.size	cydelayFreqKhz, 4
  30              	cydelayFreqKhz:
  31 0004 80BB0000 		.word	48000
  32              		.global	cydelayFreqMhz
  33              		.type	cydelayFreqMhz, %object
  34              		.size	cydelayFreqMhz, 1
  35              	cydelayFreqMhz:
  36 0008 30       		.byte	48
  37              		.global	cydelay32kMs
  38 0009 000000   		.align	2
  39              		.type	cydelay32kMs, %object
  40              		.size	cydelay32kMs, 4
  41              	cydelay32kMs:
  42 000c 0000C05D 		.word	1572864000
  43              		.bss
  44              		.align	2
  45              	CySysTickCallbacks:
  46 0000 00000000 		.space	20
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	CySysTickInitVar
  48              		.align	2
  49              		.type	CySysTickInitVar, %object
  50              		.size	CySysTickInitVar, 4
  51              	CySysTickInitVar:
  52 0014 00000000 		.space	4
  53              		.global	cyImoFreqMhz2Reg
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 2


  54              		.section	.rodata
  55              		.align	2
  56              		.type	cyImoFreqMhz2Reg, %object
  57              		.size	cyImoFreqMhz2Reg, 46
  58              	cyImoFreqMhz2Reg:
  59 0000 03       		.byte	3
  60 0001 04       		.byte	4
  61 0002 05       		.byte	5
  62 0003 06       		.byte	6
  63 0004 07       		.byte	7
  64 0005 08       		.byte	8
  65 0006 09       		.byte	9
  66 0007 0A       		.byte	10
  67 0008 0B       		.byte	11
  68 0009 0C       		.byte	12
  69 000a 0E       		.byte	14
  70 000b 0F       		.byte	15
  71 000c 10       		.byte	16
  72 000d 11       		.byte	17
  73 000e 12       		.byte	18
  74 000f 13       		.byte	19
  75 0010 14       		.byte	20
  76 0011 15       		.byte	21
  77 0012 16       		.byte	22
  78 0013 17       		.byte	23
  79 0014 18       		.byte	24
  80 0015 19       		.byte	25
  81 0016 1B       		.byte	27
  82 0017 1C       		.byte	28
  83 0018 1D       		.byte	29
  84 0019 1E       		.byte	30
  85 001a 1F       		.byte	31
  86 001b 20       		.byte	32
  87 001c 21       		.byte	33
  88 001d 22       		.byte	34
  89 001e 23       		.byte	35
  90 001f 25       		.byte	37
  91 0020 26       		.byte	38
  92 0021 27       		.byte	39
  93 0022 28       		.byte	40
  94 0023 29       		.byte	41
  95 0024 2A       		.byte	42
  96 0025 2B       		.byte	43
  97 0026 2E       		.byte	46
  98 0027 2F       		.byte	47
  99 0028 30       		.byte	48
 100 0029 31       		.byte	49
 101 002a 32       		.byte	50
 102 002b 33       		.byte	51
 103 002c 34       		.byte	52
 104 002d 35       		.byte	53
 105              		.global	CySysClkPumpConfig
 106              		.data
 107              		.align	2
 108              		.type	CySysClkPumpConfig, %object
 109              		.size	CySysClkPumpConfig, 4
 110              	CySysClkPumpConfig:
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 3


 111 0010 01000000 		.word	1
 112              		.section	.text.CySysClkImoStart,"ax",%progbits
 113              		.align	2
 114              		.global	CySysClkImoStart
 115              		.code	16
 116              		.thumb_func
 117              		.type	CySysClkImoStart, %function
 118              	CySysClkImoStart:
 119              	.LFB2:
 120              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.70
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 4


  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  89:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  92:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  93:Generated_Source\PSoC4/CyLib.c **** 
  94:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  95:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  96:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  97:Generated_Source\PSoC4/CyLib.c **** *
  98:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  99:Generated_Source\PSoC4/CyLib.c **** *
 100:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
 101:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
 102:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 5


 105:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 106:Generated_Source\PSoC4/CyLib.c **** *
 107:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 109:Generated_Source\PSoC4/CyLib.c **** {
 121              		.loc 1 109 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 00AF     		add	r7, sp, #0
 130              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 131              		.loc 1 110 0
 132 0004 044B     		ldr	r3, .L2
 133 0006 044A     		ldr	r2, .L2
 134 0008 1268     		ldr	r2, [r2]
 135 000a 8021     		movs	r1, #128
 136 000c 0906     		lsls	r1, r1, #24
 137 000e 0A43     		orrs	r2, r1
 138 0010 1A60     		str	r2, [r3]
 111:Generated_Source\PSoC4/CyLib.c **** 
 112:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 113:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 114:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 115:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 116:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** 
 119:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 120:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 121:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 122:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 123:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** }
 139              		.loc 1 125 0
 140 0012 C046     		nop
 141 0014 BD46     		mov	sp, r7
 142              		@ sp needed
 143 0016 80BD     		pop	{r7, pc}
 144              	.L3:
 145              		.align	2
 146              	.L2:
 147 0018 08010B40 		.word	1074462984
 148              		.cfi_endproc
 149              	.LFE2:
 150              		.size	CySysClkImoStart, .-CySysClkImoStart
 151              		.section	.text.CySysClkImoStop,"ax",%progbits
 152              		.align	2
 153              		.global	CySysClkImoStop
 154              		.code	16
 155              		.thumb_func
 156              		.type	CySysClkImoStop, %function
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 6


 157              	CySysClkImoStop:
 158              	.LFB3:
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** 
 128:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 129:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 130:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 131:Generated_Source\PSoC4/CyLib.c **** *
 132:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 133:Generated_Source\PSoC4/CyLib.c **** *
 134:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 135:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 138:Generated_Source\PSoC4/CyLib.c **** *
 139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 140:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 141:Generated_Source\PSoC4/CyLib.c **** {
 159              		.loc 1 141 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 00AF     		add	r7, sp, #0
 168              		.cfi_def_cfa_register 7
 142:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 143:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 144:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 147:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 148:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 149:Generated_Source\PSoC4/CyLib.c **** 
 150:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 169              		.loc 1 150 0
 170 0004 044B     		ldr	r3, .L5
 171 0006 044A     		ldr	r2, .L5
 172 0008 1268     		ldr	r2, [r2]
 173 000a 5200     		lsls	r2, r2, #1
 174 000c 5208     		lsrs	r2, r2, #1
 175 000e 1A60     		str	r2, [r3]
 151:Generated_Source\PSoC4/CyLib.c **** }
 176              		.loc 1 151 0
 177 0010 C046     		nop
 178 0012 BD46     		mov	sp, r7
 179              		@ sp needed
 180 0014 80BD     		pop	{r7, pc}
 181              	.L6:
 182 0016 C046     		.align	2
 183              	.L5:
 184 0018 08010B40 		.word	1074462984
 185              		.cfi_endproc
 186              	.LFE3:
 187              		.size	CySysClkImoStop, .-CySysClkImoStop
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 7


 188              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 189              		.align	2
 190              		.global	CySysClkWriteHfclkDirect
 191              		.code	16
 192              		.thumb_func
 193              		.type	CySysClkWriteHfclkDirect, %function
 194              	CySysClkWriteHfclkDirect:
 195              	.LFB4:
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 154:Generated_Source\PSoC4/CyLib.c **** 
 155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 160:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 161:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 162:Generated_Source\PSoC4/CyLib.c ****     *
 163:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 164:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 165:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 166:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 167:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 168:Generated_Source\PSoC4/CyLib.c ****     *
 169:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 170:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 171:Generated_Source\PSoC4/CyLib.c ****     *
 172:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 173:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 174:Generated_Source\PSoC4/CyLib.c ****     *
 175:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 176:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 177:Generated_Source\PSoC4/CyLib.c ****     {
 178:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 179:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 180:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 183:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 185:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 186:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 187:Generated_Source\PSoC4/CyLib.c **** 
 188:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 189:Generated_Source\PSoC4/CyLib.c ****         {
 190:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 191:Generated_Source\PSoC4/CyLib.c **** 
 192:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 193:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 194:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 195:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 196:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 197:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 198:Generated_Source\PSoC4/CyLib.c **** 
 199:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 200:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 8


 201:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 202:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 203:Generated_Source\PSoC4/CyLib.c ****                 {
 204:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 205:Generated_Source\PSoC4/CyLib.c ****                     {
 206:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 207:Generated_Source\PSoC4/CyLib.c ****                         break;
 208:Generated_Source\PSoC4/CyLib.c ****                     }
 209:Generated_Source\PSoC4/CyLib.c ****                 }
 210:Generated_Source\PSoC4/CyLib.c ****             #else
 211:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 212:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 213:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 214:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 215:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 216:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 217:Generated_Source\PSoC4/CyLib.c ****                 #else
 218:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 219:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 220:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 229:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 245:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 248:Generated_Source\PSoC4/CyLib.c ****             }
 249:Generated_Source\PSoC4/CyLib.c ****             else
 250:Generated_Source\PSoC4/CyLib.c ****             {
 251:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 252:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 253:Generated_Source\PSoC4/CyLib.c **** 
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 256:Generated_Source\PSoC4/CyLib.c **** 
 257:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 9


 258:Generated_Source\PSoC4/CyLib.c ****             }
 259:Generated_Source\PSoC4/CyLib.c **** 
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 263:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 264:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 265:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 266:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 267:Generated_Source\PSoC4/CyLib.c **** 
 268:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 269:Generated_Source\PSoC4/CyLib.c ****         }
 270:Generated_Source\PSoC4/CyLib.c ****     }
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c **** 
 273:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 274:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 275:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 276:Generated_Source\PSoC4/CyLib.c ****     *
 277:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 280:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 283:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 284:Generated_Source\PSoC4/CyLib.c ****     *
 285:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 286:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 287:Generated_Source\PSoC4/CyLib.c ****     {
 288:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 289:Generated_Source\PSoC4/CyLib.c ****     }
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c **** 
 292:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 293:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 294:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 295:Generated_Source\PSoC4/CyLib.c ****     *
 296:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 297:Generated_Source\PSoC4/CyLib.c ****     *
 298:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 299:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 300:Generated_Source\PSoC4/CyLib.c ****     *
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 302:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 303:Generated_Source\PSoC4/CyLib.c ****     *
 304:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 305:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 306:Generated_Source\PSoC4/CyLib.c ****     {
 307:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 309:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 310:Generated_Source\PSoC4/CyLib.c ****     }
 311:Generated_Source\PSoC4/CyLib.c **** 
 312:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 10


 315:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 318:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 319:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 320:Generated_Source\PSoC4/CyLib.c ****     *
 321:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 322:Generated_Source\PSoC4/CyLib.c ****     *
 323:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 324:Generated_Source\PSoC4/CyLib.c ****     *
 325:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 326:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 327:Generated_Source\PSoC4/CyLib.c ****     *
 328:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 329:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 330:Generated_Source\PSoC4/CyLib.c ****     *
 331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 332:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 333:Generated_Source\PSoC4/CyLib.c ****     {
 334:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 335:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 336:Generated_Source\PSoC4/CyLib.c ****             
 337:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 338:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 339:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 342:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 343:Generated_Source\PSoC4/CyLib.c **** 
 344:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 345:Generated_Source\PSoC4/CyLib.c ****             {
 346:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 347:Generated_Source\PSoC4/CyLib.c ****                 {
 348:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 349:Generated_Source\PSoC4/CyLib.c ****                     break;
 350:Generated_Source\PSoC4/CyLib.c ****                 }
 351:Generated_Source\PSoC4/CyLib.c ****             }
 352:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 353:Generated_Source\PSoC4/CyLib.c ****         
 354:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 355:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 356:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 357:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 359:Generated_Source\PSoC4/CyLib.c **** 
 360:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 361:Generated_Source\PSoC4/CyLib.c ****            
 362:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 363:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 364:Generated_Source\PSoC4/CyLib.c ****             
 365:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 366:Generated_Source\PSoC4/CyLib.c ****             {
 367:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 368:Generated_Source\PSoC4/CyLib.c ****                 
 369:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 370:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 371:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 11


 372:Generated_Source\PSoC4/CyLib.c ****                 
 373:Generated_Source\PSoC4/CyLib.c ****             }
 374:Generated_Source\PSoC4/CyLib.c ****             else
 375:Generated_Source\PSoC4/CyLib.c ****             {
 376:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 377:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 378:Generated_Source\PSoC4/CyLib.c **** 
 379:Generated_Source\PSoC4/CyLib.c ****             }
 380:Generated_Source\PSoC4/CyLib.c **** 
 381:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 382:Generated_Source\PSoC4/CyLib.c ****             {
 383:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 384:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 385:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 386:Generated_Source\PSoC4/CyLib.c ****             }
 387:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 388:Generated_Source\PSoC4/CyLib.c ****             {
 389:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 390:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 391:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 392:Generated_Source\PSoC4/CyLib.c ****             }
 393:Generated_Source\PSoC4/CyLib.c ****             else
 394:Generated_Source\PSoC4/CyLib.c ****             {
 395:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 396:Generated_Source\PSoC4/CyLib.c ****             }
 397:Generated_Source\PSoC4/CyLib.c ****             
 398:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 399:Generated_Source\PSoC4/CyLib.c **** 
 400:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 401:Generated_Source\PSoC4/CyLib.c ****     }
 402:Generated_Source\PSoC4/CyLib.c **** 
 403:Generated_Source\PSoC4/CyLib.c **** 
 404:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 405:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 406:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 407:Generated_Source\PSoC4/CyLib.c ****     *
 408:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 409:Generated_Source\PSoC4/CyLib.c ****     *
 410:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 411:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 412:Generated_Source\PSoC4/CyLib.c ****     *
 413:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 414:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 415:Generated_Source\PSoC4/CyLib.c ****     *
 416:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 417:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 418:Generated_Source\PSoC4/CyLib.c ****     {
 419:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 420:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 421:Generated_Source\PSoC4/CyLib.c ****             
 422:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 423:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 424:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 425:Generated_Source\PSoC4/CyLib.c **** 
 426:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 427:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 428:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 12


 429:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 430:Generated_Source\PSoC4/CyLib.c ****             {
 431:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 432:Generated_Source\PSoC4/CyLib.c ****                 {
 433:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 434:Generated_Source\PSoC4/CyLib.c ****                     break;
 435:Generated_Source\PSoC4/CyLib.c ****                 }
 436:Generated_Source\PSoC4/CyLib.c ****             }           
 437:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 438:Generated_Source\PSoC4/CyLib.c ****         
 439:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 440:Generated_Source\PSoC4/CyLib.c **** 
 441:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 442:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 443:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 444:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 445:Generated_Source\PSoC4/CyLib.c **** 
 446:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 447:Generated_Source\PSoC4/CyLib.c ****             {
 448:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 449:Generated_Source\PSoC4/CyLib.c ****             }
 450:Generated_Source\PSoC4/CyLib.c ****             
 451:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 452:Generated_Source\PSoC4/CyLib.c ****             
 453:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 454:Generated_Source\PSoC4/CyLib.c ****     }
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 459:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c ****     *
 461:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 462:Generated_Source\PSoC4/CyLib.c ****     *
 463:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 464:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 465:Generated_Source\PSoC4/CyLib.c ****     *
 466:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 467:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 468:Generated_Source\PSoC4/CyLib.c ****     *
 469:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 470:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 471:Generated_Source\PSoC4/CyLib.c ****     {
 472:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 473:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 474:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 475:Generated_Source\PSoC4/CyLib.c ****     }
 476:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 477:Generated_Source\PSoC4/CyLib.c **** 
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c **** 
 480:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 481:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 482:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 483:Generated_Source\PSoC4/CyLib.c **** *
 484:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 485:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 13


 486:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 487:Generated_Source\PSoC4/CyLib.c **** *
 488:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 489:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 490:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 491:Generated_Source\PSoC4/CyLib.c **** *
 492:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 493:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 494:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 495:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 496:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 497:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 498:Generated_Source\PSoC4/CyLib.c **** *
 499:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 500:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 501:Generated_Source\PSoC4/CyLib.c **** *
 502:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 503:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 504:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 505:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 506:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 507:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
 508:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 509:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
 510:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 511:Generated_Source\PSoC4/CyLib.c **** *
 512:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 513:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 514:Generated_Source\PSoC4/CyLib.c **** {
 196              		.loc 1 514 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 16
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200 0000 90B5     		push	{r4, r7, lr}
 201              		.cfi_def_cfa_offset 12
 202              		.cfi_offset 4, -12
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 85B0     		sub	sp, sp, #20
 206              		.cfi_def_cfa_offset 32
 207 0004 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 209 0006 7860     		str	r0, [r7, #4]
 515:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 516:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 517:Generated_Source\PSoC4/CyLib.c ****     
 518:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 519:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 520:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 210              		.loc 1 522 0
 211 0008 0F23     		movs	r3, #15
 212 000a FC18     		adds	r4, r7, r3
 213 000c FFF7FEFF 		bl	CyEnterCriticalSection
 214 0010 0300     		movs	r3, r0
 215 0012 2370     		strb	r3, [r4]
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 14


 523:Generated_Source\PSoC4/CyLib.c **** 
 524:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 525:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 526:Generated_Source\PSoC4/CyLib.c ****     {
 527:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 528:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 529:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;        
 530:Generated_Source\PSoC4/CyLib.c ****         
 531:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 532:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 533:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 534:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 535:Generated_Source\PSoC4/CyLib.c ****         
 536:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 537:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 538:Generated_Source\PSoC4/CyLib.c ****         
 539:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 540:Generated_Source\PSoC4/CyLib.c ****         {
 541:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 543:Generated_Source\PSoC4/CyLib.c ****         }
 544:Generated_Source\PSoC4/CyLib.c ****         
 545:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 546:Generated_Source\PSoC4/CyLib.c ****     }
 547:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 548:Generated_Source\PSoC4/CyLib.c **** 
 549:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 216              		.loc 1 549 0
 217 0014 0B4B     		ldr	r3, .L8
 218 0016 1B68     		ldr	r3, [r3]
 219 0018 0722     		movs	r2, #7
 220 001a 9343     		bics	r3, r2
 221 001c BB60     		str	r3, [r7, #8]
 550:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 551:Generated_Source\PSoC4/CyLib.c **** 
 552:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 553:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 554:Generated_Source\PSoC4/CyLib.c ****     {
 555:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 556:Generated_Source\PSoC4/CyLib.c ****     }
 557:Generated_Source\PSoC4/CyLib.c ****     else
 558:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 559:Generated_Source\PSoC4/CyLib.c ****     {
 560:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 222              		.loc 1 560 0
 223 001e 7B68     		ldr	r3, [r7, #4]
 224 0020 0722     		movs	r2, #7
 225 0022 1340     		ands	r3, r2
 226 0024 BA68     		ldr	r2, [r7, #8]
 227 0026 1343     		orrs	r3, r2
 228 0028 BB60     		str	r3, [r7, #8]
 561:Generated_Source\PSoC4/CyLib.c ****     }   
 562:Generated_Source\PSoC4/CyLib.c ****     
 563:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 229              		.loc 1 563 0
 230 002a 064B     		ldr	r3, .L8
 231 002c BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 15


 232 002e 1A60     		str	r2, [r3]
 564:Generated_Source\PSoC4/CyLib.c ****     
 565:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 233              		.loc 1 565 0
 234 0030 0F23     		movs	r3, #15
 235 0032 FB18     		adds	r3, r7, r3
 236 0034 1B78     		ldrb	r3, [r3]
 237 0036 1800     		movs	r0, r3
 238 0038 FFF7FEFF 		bl	CyExitCriticalSection
 566:Generated_Source\PSoC4/CyLib.c **** }
 239              		.loc 1 566 0
 240 003c C046     		nop
 241 003e BD46     		mov	sp, r7
 242 0040 05B0     		add	sp, sp, #20
 243              		@ sp needed
 244 0042 90BD     		pop	{r4, r7, pc}
 245              	.L9:
 246              		.align	2
 247              	.L8:
 248 0044 00010B40 		.word	1074462976
 249              		.cfi_endproc
 250              	.LFE4:
 251              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 252              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 253              		.align	2
 254              		.global	CySysEnablePumpClock
 255              		.code	16
 256              		.thumb_func
 257              		.type	CySysEnablePumpClock, %function
 258              	CySysEnablePumpClock:
 259              	.LFB5:
 567:Generated_Source\PSoC4/CyLib.c **** 
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 570:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 571:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 574:Generated_Source\PSoC4/CyLib.c **** *
 575:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 577:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 578:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 579:Generated_Source\PSoC4/CyLib.c **** *
 580:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 581:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 582:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 586:Generated_Source\PSoC4/CyLib.c **** {
 260              		.loc 1 586 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 8
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 16


 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 82B0     		sub	sp, sp, #8
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 587:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 588:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 273              		.loc 1 588 0
 274 0008 7B68     		ldr	r3, [r7, #4]
 275 000a 0122     		movs	r2, #1
 276 000c 1340     		ands	r3, r2
 277 000e 08D0     		beq	.L11
 589:Generated_Source\PSoC4/CyLib.c ****         {
 590:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 278              		.loc 1 590 0
 279 0010 0C4A     		ldr	r2, .L14
 280 0012 0C4B     		ldr	r3, .L14
 281 0014 1968     		ldr	r1, [r3]
 282 0016 0C4B     		ldr	r3, .L14+4
 283 0018 1B68     		ldr	r3, [r3]
 284 001a 5B06     		lsls	r3, r3, #25
 285 001c 0B43     		orrs	r3, r1
 286 001e 1360     		str	r3, [r2]
 591:Generated_Source\PSoC4/CyLib.c ****         }
 592:Generated_Source\PSoC4/CyLib.c ****         else
 593:Generated_Source\PSoC4/CyLib.c ****         {
 594:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 595:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 596:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 597:Generated_Source\PSoC4/CyLib.c ****         }
 598:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 599:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 600:Generated_Source\PSoC4/CyLib.c ****         {
 601:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 602:Generated_Source\PSoC4/CyLib.c ****         }
 603:Generated_Source\PSoC4/CyLib.c ****         else
 604:Generated_Source\PSoC4/CyLib.c ****         {
 605:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 606:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 607:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 608:Generated_Source\PSoC4/CyLib.c ****         }
 609:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 610:Generated_Source\PSoC4/CyLib.c **** }
 287              		.loc 1 610 0
 288 0020 0CE0     		b	.L13
 289              	.L11:
 594:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 290              		.loc 1 594 0
 291 0022 084B     		ldr	r3, .L14
 292 0024 1B68     		ldr	r3, [r3]
 293 0026 5B0E     		lsrs	r3, r3, #25
 294 0028 0722     		movs	r2, #7
 295 002a 1A40     		ands	r2, r3
 296 002c 064B     		ldr	r3, .L14+4
 297 002e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 17


 596:Generated_Source\PSoC4/CyLib.c ****         }
 298              		.loc 1 596 0
 299 0030 044B     		ldr	r3, .L14
 300 0032 044A     		ldr	r2, .L14
 301 0034 1268     		ldr	r2, [r2]
 302 0036 0549     		ldr	r1, .L14+8
 303 0038 0A40     		ands	r2, r1
 304 003a 1A60     		str	r2, [r3]
 305              	.L13:
 306              		.loc 1 610 0
 307 003c C046     		nop
 308 003e BD46     		mov	sp, r7
 309 0040 02B0     		add	sp, sp, #8
 310              		@ sp needed
 311 0042 80BD     		pop	{r7, pc}
 312              	.L15:
 313              		.align	2
 314              	.L14:
 315 0044 08010B40 		.word	1074462984
 316 0048 00000000 		.word	CySysClkPumpConfig
 317 004c FFFFFFF1 		.word	-234881025
 318              		.cfi_endproc
 319              	.LFE5:
 320              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 321              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 322              		.align	2
 323              		.global	CySysClkGetSysclkSource
 324              		.code	16
 325              		.thumb_func
 326              		.type	CySysClkGetSysclkSource, %function
 327              	CySysClkGetSysclkSource:
 328              	.LFB6:
 611:Generated_Source\PSoC4/CyLib.c **** 
 612:Generated_Source\PSoC4/CyLib.c **** 
 613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 616:Generated_Source\PSoC4/CyLib.c **** *
 617:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 618:Generated_Source\PSoC4/CyLib.c **** *
 619:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 623:Generated_Source\PSoC4/CyLib.c **** {
 329              		.loc 1 623 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 8
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 90B5     		push	{r4, r7, lr}
 334              		.cfi_def_cfa_offset 12
 335              		.cfi_offset 4, -12
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 83B0     		sub	sp, sp, #12
 339              		.cfi_def_cfa_offset 24
 340 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 18


 341              		.cfi_def_cfa_register 7
 624:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 625:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 626:Generated_Source\PSoC4/CyLib.c **** 
 627:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 342              		.loc 1 627 0
 343 0006 FC1D     		adds	r4, r7, #7
 344 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 345 000c 0300     		movs	r3, r0
 346 000e 2370     		strb	r3, [r4]
 628:Generated_Source\PSoC4/CyLib.c **** 
 629:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 630:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 631:Generated_Source\PSoC4/CyLib.c ****     {
 632:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 633:Generated_Source\PSoC4/CyLib.c ****     }
 634:Generated_Source\PSoC4/CyLib.c ****     else
 635:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 636:Generated_Source\PSoC4/CyLib.c ****     {
 637:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 347              		.loc 1 637 0
 348 0010 074B     		ldr	r3, .L18
 349 0012 1B68     		ldr	r3, [r3]
 350 0014 0722     		movs	r2, #7
 351 0016 1340     		ands	r3, r2
 352 0018 3B60     		str	r3, [r7]
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 640:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 641:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 642:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 643:Generated_Source\PSoC4/CyLib.c ****         
 644:Generated_Source\PSoC4/CyLib.c ****     }
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 353              		.loc 1 646 0
 354 001a FB1D     		adds	r3, r7, #7
 355 001c 1B78     		ldrb	r3, [r3]
 356 001e 1800     		movs	r0, r3
 357 0020 FFF7FEFF 		bl	CyExitCriticalSection
 647:Generated_Source\PSoC4/CyLib.c **** 
 648:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 358              		.loc 1 648 0
 359 0024 3B68     		ldr	r3, [r7]
 649:Generated_Source\PSoC4/CyLib.c **** }
 360              		.loc 1 649 0
 361 0026 1800     		movs	r0, r3
 362 0028 BD46     		mov	sp, r7
 363 002a 03B0     		add	sp, sp, #12
 364              		@ sp needed
 365 002c 90BD     		pop	{r4, r7, pc}
 366              	.L19:
 367 002e C046     		.align	2
 368              	.L18:
 369 0030 00010B40 		.word	1074462976
 370              		.cfi_endproc
 371              	.LFE6:
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 19


 372              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 373              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 374              		.align	2
 375              		.global	CySysClkWriteSysclkDiv
 376              		.code	16
 377              		.thumb_func
 378              		.type	CySysClkWriteSysclkDiv, %function
 379              	CySysClkWriteSysclkDiv:
 380              	.LFB7:
 650:Generated_Source\PSoC4/CyLib.c **** 
 651:Generated_Source\PSoC4/CyLib.c **** 
 652:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 653:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 654:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 657:Generated_Source\PSoC4/CyLib.c **** *
 658:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 659:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 660:Generated_Source\PSoC4/CyLib.c **** *
 661:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 662:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 663:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 664:Generated_Source\PSoC4/CyLib.c **** *
 665:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 666:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 667:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 668:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 669:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 670:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 671:Generated_Source\PSoC4/CyLib.c **** *
 672:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 673:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 674:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 675:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 676:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 677:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 678:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 679:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 680:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 681:Generated_Source\PSoC4/CyLib.c **** *
 682:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 683:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 684:Generated_Source\PSoC4/CyLib.c **** {
 381              		.loc 1 684 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 16
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385 0000 90B5     		push	{r4, r7, lr}
 386              		.cfi_def_cfa_offset 12
 387              		.cfi_offset 4, -12
 388              		.cfi_offset 7, -8
 389              		.cfi_offset 14, -4
 390 0002 85B0     		sub	sp, sp, #20
 391              		.cfi_def_cfa_offset 32
 392 0004 00AF     		add	r7, sp, #0
 393              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 20


 394 0006 7860     		str	r0, [r7, #4]
 685:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 686:Generated_Source\PSoC4/CyLib.c **** 
 687:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 395              		.loc 1 687 0
 396 0008 0F23     		movs	r3, #15
 397 000a FC18     		adds	r4, r7, r3
 398 000c FFF7FEFF 		bl	CyEnterCriticalSection
 399 0010 0300     		movs	r3, r0
 400 0012 2370     		strb	r3, [r4]
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 401              		.loc 1 689 0
 402 0014 0A4B     		ldr	r3, .L21
 403 0016 7A68     		ldr	r2, [r7, #4]
 404 0018 D104     		lsls	r1, r2, #19
 405 001a E022     		movs	r2, #224
 406 001c 9203     		lsls	r2, r2, #14
 407 001e 1140     		ands	r1, r2
 690:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 691:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 408              		.loc 1 691 0
 409 0020 074A     		ldr	r2, .L21
 410 0022 1268     		ldr	r2, [r2]
 411 0024 0748     		ldr	r0, .L21+4
 412 0026 0240     		ands	r2, r0
 690:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 413              		.loc 1 690 0
 414 0028 0A43     		orrs	r2, r1
 689:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 415              		.loc 1 689 0
 416 002a 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 693:Generated_Source\PSoC4/CyLib.c **** 
 694:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 417              		.loc 1 694 0
 418 002c 0F23     		movs	r3, #15
 419 002e FB18     		adds	r3, r7, r3
 420 0030 1B78     		ldrb	r3, [r3]
 421 0032 1800     		movs	r0, r3
 422 0034 FFF7FEFF 		bl	CyExitCriticalSection
 695:Generated_Source\PSoC4/CyLib.c **** }
 423              		.loc 1 695 0
 424 0038 C046     		nop
 425 003a BD46     		mov	sp, r7
 426 003c 05B0     		add	sp, sp, #20
 427              		@ sp needed
 428 003e 90BD     		pop	{r4, r7, pc}
 429              	.L22:
 430              		.align	2
 431              	.L21:
 432 0040 00010B40 		.word	1074462976
 433 0044 FFFFC7FF 		.word	-3670017
 434              		.cfi_endproc
 435              	.LFE7:
 436              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 437              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 21


 438              		.align	2
 439              		.global	CySysClkWriteImoFreq
 440              		.code	16
 441              		.thumb_func
 442              		.type	CySysClkWriteImoFreq, %function
 443              	CySysClkWriteImoFreq:
 444              	.LFB8:
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c **** 
 698:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 700:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 701:Generated_Source\PSoC4/CyLib.c **** *
 702:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 703:Generated_Source\PSoC4/CyLib.c **** *
 704:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 705:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 706:Generated_Source\PSoC4/CyLib.c **** *
 707:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 708:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 709:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 710:Generated_Source\PSoC4/CyLib.c **** *
 711:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 712:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 713:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 714:Generated_Source\PSoC4/CyLib.c **** *
 715:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 716:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 717:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 718:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 719:Generated_Source\PSoC4/CyLib.c **** *
 720:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 721:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 722:Generated_Source\PSoC4/CyLib.c **** *
 723:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 724:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 725:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 726:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 727:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 728:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 729:Generated_Source\PSoC4/CyLib.c **** *
 730:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 731:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 732:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 735:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 736:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 737:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 738:Generated_Source\PSoC4/CyLib.c **** *
 739:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 740:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 741:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 742:Generated_Source\PSoC4/CyLib.c ****     {
 445              		.loc 1 742 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 22


 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 90B5     		push	{r4, r7, lr}
 450              		.cfi_def_cfa_offset 12
 451              		.cfi_offset 4, -12
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 85B0     		sub	sp, sp, #20
 455              		.cfi_def_cfa_offset 32
 456 0004 00AF     		add	r7, sp, #0
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
 743:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 744:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 745:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 746:Generated_Source\PSoC4/CyLib.c ****         #else
 747:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 748:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 749:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 750:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 751:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 754:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 755:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 756:Generated_Source\PSoC4/CyLib.c **** 
 757:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 758:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 759:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 760:Generated_Source\PSoC4/CyLib.c **** 
 761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c **** 
 764:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 459              		.loc 1 764 0
 460 0008 0C23     		movs	r3, #12
 461 000a FC18     		adds	r4, r7, r3
 462 000c FFF7FEFF 		bl	CyEnterCriticalSection
 463 0010 0300     		movs	r3, r0
 464 0012 2370     		strb	r3, [r4]
 765:Generated_Source\PSoC4/CyLib.c **** 
 766:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 767:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 768:Generated_Source\PSoC4/CyLib.c ****             {
 769:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 770:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 771:Generated_Source\PSoC4/CyLib.c ****             }
 772:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** 
 775:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 776:Generated_Source\PSoC4/CyLib.c **** 
 777:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 778:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 779:Generated_Source\PSoC4/CyLib.c ****                 {
 780:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 781:Generated_Source\PSoC4/CyLib.c **** 
 782:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 23


 783:Generated_Source\PSoC4/CyLib.c ****                 {
 784:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 785:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 786:Generated_Source\PSoC4/CyLib.c ****                 }
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 789:Generated_Source\PSoC4/CyLib.c ****                 }
 790:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 791:Generated_Source\PSoC4/CyLib.c **** 
 792:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c **** 
 795:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 796:Generated_Source\PSoC4/CyLib.c **** 
 797:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 798:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 799:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 800:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 801:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 802:Generated_Source\PSoC4/CyLib.c **** 
 803:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 804:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 805:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 806:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 809:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 810:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 811:Generated_Source\PSoC4/CyLib.c **** 
 812:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 465              		.loc 1 814 0
 466 0014 7B68     		ldr	r3, [r7, #4]
 467 0016 022B     		cmp	r3, #2
 468 0018 00D8     		bhi	.LCB302
 469 001a AFE0     		b	.L24	@long jump
 470              	.LCB302:
 471              		.loc 1 814 0 is_stmt 0 discriminator 1
 472 001c 7B68     		ldr	r3, [r7, #4]
 473 001e 302B     		cmp	r3, #48
 474 0020 00D9     		bls	.LCB305
 475 0022 ABE0     		b	.L24	@long jump
 476              	.LCB305:
 815:Generated_Source\PSoC4/CyLib.c ****         {
 816:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 477              		.loc 1 816 0 is_stmt 1
 478 0024 5C4B     		ldr	r3, .L35
 479 0026 1B78     		ldrb	r3, [r3]
 480 0028 DBB2     		uxtb	r3, r3
 481 002a 1A00     		movs	r2, r3
 482 002c 7B68     		ldr	r3, [r7, #4]
 483 002e 9A42     		cmp	r2, r3
 484 0030 0AD3     		bcc	.L25
 817:Generated_Source\PSoC4/CyLib.c ****             {
 818:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 485              		.loc 1 818 0
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 24


 486 0032 5A4A     		ldr	r2, .L35+4
 487 0034 0F23     		movs	r3, #15
 488 0036 FB18     		adds	r3, r7, r3
 489 0038 1278     		ldrb	r2, [r2]
 490 003a 1A70     		strb	r2, [r3]
 819:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 491              		.loc 1 819 0
 492 003c 584A     		ldr	r2, .L35+8
 493 003e 0E23     		movs	r3, #14
 494 0040 FB18     		adds	r3, r7, r3
 495 0042 1278     		ldrb	r2, [r2]
 496 0044 1A70     		strb	r2, [r3]
 497 0046 3FE0     		b	.L26
 498              	.L25:
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 499              		.loc 1 821 0
 500 0048 564B     		ldr	r3, .L35+12
 501 004a 1B78     		ldrb	r3, [r3]
 502 004c DBB2     		uxtb	r3, r3
 503 004e 1A00     		movs	r2, r3
 504 0050 7B68     		ldr	r3, [r7, #4]
 505 0052 9A42     		cmp	r2, r3
 506 0054 0AD3     		bcc	.L27
 822:Generated_Source\PSoC4/CyLib.c ****             {
 823:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 507              		.loc 1 823 0
 508 0056 544A     		ldr	r2, .L35+16
 509 0058 0F23     		movs	r3, #15
 510 005a FB18     		adds	r3, r7, r3
 511 005c 1278     		ldrb	r2, [r2]
 512 005e 1A70     		strb	r2, [r3]
 824:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 513              		.loc 1 824 0
 514 0060 524A     		ldr	r2, .L35+20
 515 0062 0E23     		movs	r3, #14
 516 0064 FB18     		adds	r3, r7, r3
 517 0066 1278     		ldrb	r2, [r2]
 518 0068 1A70     		strb	r2, [r3]
 519 006a 2DE0     		b	.L26
 520              	.L27:
 825:Generated_Source\PSoC4/CyLib.c ****             }
 826:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 521              		.loc 1 826 0
 522 006c 504B     		ldr	r3, .L35+24
 523 006e 1B78     		ldrb	r3, [r3]
 524 0070 DBB2     		uxtb	r3, r3
 525 0072 1A00     		movs	r2, r3
 526 0074 7B68     		ldr	r3, [r7, #4]
 527 0076 9A42     		cmp	r2, r3
 528 0078 0AD3     		bcc	.L28
 827:Generated_Source\PSoC4/CyLib.c ****             {
 828:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 529              		.loc 1 828 0
 530 007a 4E4A     		ldr	r2, .L35+28
 531 007c 0F23     		movs	r3, #15
 532 007e FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 25


 533 0080 1278     		ldrb	r2, [r2]
 534 0082 1A70     		strb	r2, [r3]
 829:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 535              		.loc 1 829 0
 536 0084 4C4A     		ldr	r2, .L35+32
 537 0086 0E23     		movs	r3, #14
 538 0088 FB18     		adds	r3, r7, r3
 539 008a 1278     		ldrb	r2, [r2]
 540 008c 1A70     		strb	r2, [r3]
 541 008e 1BE0     		b	.L26
 542              	.L28:
 830:Generated_Source\PSoC4/CyLib.c ****             }
 831:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 543              		.loc 1 831 0
 544 0090 4A4B     		ldr	r3, .L35+36
 545 0092 1B78     		ldrb	r3, [r3]
 546 0094 DBB2     		uxtb	r3, r3
 547 0096 1A00     		movs	r2, r3
 548 0098 7B68     		ldr	r3, [r7, #4]
 549 009a 9A42     		cmp	r2, r3
 550 009c 0AD3     		bcc	.L29
 832:Generated_Source\PSoC4/CyLib.c ****             {
 833:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 551              		.loc 1 833 0
 552 009e 484A     		ldr	r2, .L35+40
 553 00a0 0F23     		movs	r3, #15
 554 00a2 FB18     		adds	r3, r7, r3
 555 00a4 1278     		ldrb	r2, [r2]
 556 00a6 1A70     		strb	r2, [r3]
 834:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 557              		.loc 1 834 0
 558 00a8 464A     		ldr	r2, .L35+44
 559 00aa 0E23     		movs	r3, #14
 560 00ac FB18     		adds	r3, r7, r3
 561 00ae 1278     		ldrb	r2, [r2]
 562 00b0 1A70     		strb	r2, [r3]
 563 00b2 09E0     		b	.L26
 564              	.L29:
 835:Generated_Source\PSoC4/CyLib.c ****             }
 836:Generated_Source\PSoC4/CyLib.c ****             else
 837:Generated_Source\PSoC4/CyLib.c ****             {
 838:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 565              		.loc 1 838 0
 566 00b4 444A     		ldr	r2, .L35+48
 567 00b6 0F23     		movs	r3, #15
 568 00b8 FB18     		adds	r3, r7, r3
 569 00ba 1278     		ldrb	r2, [r2]
 570 00bc 1A70     		strb	r2, [r3]
 839:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 571              		.loc 1 839 0
 572 00be 434A     		ldr	r2, .L35+52
 573 00c0 0E23     		movs	r3, #14
 574 00c2 FB18     		adds	r3, r7, r3
 575 00c4 1278     		ldrb	r2, [r2]
 576 00c6 1A70     		strb	r2, [r3]
 577              	.L26:
 840:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 26


 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 843:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 578              		.loc 1 843 0
 579 00c8 7B68     		ldr	r3, [r7, #4]
 580 00ca DA1E     		subs	r2, r3, #3
 581 00cc 0B23     		movs	r3, #11
 582 00ce FB18     		adds	r3, r7, r3
 583 00d0 3F49     		ldr	r1, .L35+56
 584 00d2 8A5C     		ldrb	r2, [r1, r2]
 585 00d4 1A70     		strb	r2, [r3]
 844:Generated_Source\PSoC4/CyLib.c **** 
 845:Generated_Source\PSoC4/CyLib.c **** 
 846:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 847:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 848:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 849:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 850:Generated_Source\PSoC4/CyLib.c ****             *
 851:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 852:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 853:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 854:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 855:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 586              		.loc 1 855 0
 587 00d6 0B23     		movs	r3, #11
 588 00d8 FB18     		adds	r3, r7, r3
 589 00da 1B78     		ldrb	r3, [r3]
 590 00dc 2F2B     		cmp	r3, #47
 591 00de 0DD9     		bls	.L30
 592              		.loc 1 855 0 is_stmt 0 discriminator 1
 593 00e0 7B68     		ldr	r3, [r7, #4]
 594 00e2 2A2B     		cmp	r3, #42
 595 00e4 0AD9     		bls	.L30
 856:Generated_Source\PSoC4/CyLib.c ****             {
 857:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 858:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 596              		.loc 1 858 0 is_stmt 1
 597 00e6 3B4B     		ldr	r3, .L35+60
 598 00e8 1922     		movs	r2, #25
 599 00ea 1A60     		str	r2, [r3]
 859:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 600              		.loc 1 861 0
 601 00ec 0520     		movs	r0, #5
 602 00ee FFF7FEFF 		bl	CyDelayCycles
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 603              		.loc 1 863 0
 604 00f2 0D23     		movs	r3, #13
 605 00f4 FB18     		adds	r3, r7, r3
 606 00f6 1922     		movs	r2, #25
 607 00f8 1A70     		strb	r2, [r3]
 608 00fa 07E0     		b	.L31
 609              	.L30:
 864:Generated_Source\PSoC4/CyLib.c ****             }
 865:Generated_Source\PSoC4/CyLib.c ****             else
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 27


 866:Generated_Source\PSoC4/CyLib.c ****             {
 867:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 610              		.loc 1 867 0
 611 00fc 354B     		ldr	r3, .L35+60
 612 00fe 1B68     		ldr	r3, [r3]
 613 0100 DAB2     		uxtb	r2, r3
 614 0102 0D23     		movs	r3, #13
 615 0104 FB18     		adds	r3, r7, r3
 616 0106 3F21     		movs	r1, #63
 617 0108 0A40     		ands	r2, r1
 618 010a 1A70     		strb	r2, [r3]
 619              	.L31:
 868:Generated_Source\PSoC4/CyLib.c ****             }
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 872:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 873:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 874:Generated_Source\PSoC4/CyLib.c ****             *
 875:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 876:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 877:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 878:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 879:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 620              		.loc 1 879 0
 621 010c 0B23     		movs	r3, #11
 622 010e FA18     		adds	r2, r7, r3
 623 0110 0D23     		movs	r3, #13
 624 0112 FB18     		adds	r3, r7, r3
 625 0114 1278     		ldrb	r2, [r2]
 626 0116 1B78     		ldrb	r3, [r3]
 627 0118 9A42     		cmp	r2, r3
 628 011a 08D2     		bcs	.L32
 880:Generated_Source\PSoC4/CyLib.c ****             {
 881:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 882:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 629              		.loc 1 882 0
 630 011c 2D4B     		ldr	r3, .L35+60
 631 011e 7A68     		ldr	r2, [r7, #4]
 632 0120 033A     		subs	r2, r2, #3
 633 0122 2B49     		ldr	r1, .L35+56
 634 0124 8A5C     		ldrb	r2, [r1, r2]
 635 0126 1A60     		str	r2, [r3]
 883:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 636              		.loc 1 883 0
 637 0128 0520     		movs	r0, #5
 638 012a FFF7FEFF 		bl	CyDelayCycles
 639              	.L32:
 884:Generated_Source\PSoC4/CyLib.c ****             }
 885:Generated_Source\PSoC4/CyLib.c **** 
 886:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 887:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 640              		.loc 1 887 0
 641 012e 2A4B     		ldr	r3, .L35+64
 642 0130 7A68     		ldr	r2, [r7, #4]
 643 0132 2649     		ldr	r1, .L35+52
 644 0134 8C46     		mov	ip, r1
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 28


 645 0136 6244     		add	r2, r2, ip
 646 0138 1278     		ldrb	r2, [r2]
 647 013a D2B2     		uxtb	r2, r2
 648 013c 1A60     		str	r2, [r3]
 888:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 649              		.loc 1 888 0
 650 013e 274B     		ldr	r3, .L35+68
 651 0140 0F22     		movs	r2, #15
 652 0142 BA18     		adds	r2, r7, r2
 653 0144 1278     		ldrb	r2, [r2]
 654 0146 1A60     		str	r2, [r3]
 889:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 655              		.loc 1 889 0
 656 0148 254B     		ldr	r3, .L35+72
 657 014a 0E22     		movs	r2, #14
 658 014c BA18     		adds	r2, r7, r2
 659 014e 1278     		ldrb	r2, [r2]
 660 0150 1A60     		str	r2, [r3]
 890:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 661              		.loc 1 890 0
 662 0152 0520     		movs	r0, #5
 663 0154 FFF7FEFF 		bl	CyDelayUs
 891:Generated_Source\PSoC4/CyLib.c **** 
 892:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 664              		.loc 1 892 0
 665 0158 0B23     		movs	r3, #11
 666 015a FA18     		adds	r2, r7, r3
 667 015c 0D23     		movs	r3, #13
 668 015e FB18     		adds	r3, r7, r3
 669 0160 1278     		ldrb	r2, [r2]
 670 0162 1B78     		ldrb	r3, [r3]
 671 0164 9A42     		cmp	r2, r3
 672 0166 0CD9     		bls	.L34
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 895:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 673              		.loc 1 895 0
 674 0168 1A4B     		ldr	r3, .L35+60
 675 016a 7A68     		ldr	r2, [r7, #4]
 676 016c 033A     		subs	r2, r2, #3
 677 016e 1849     		ldr	r1, .L35+56
 678 0170 8A5C     		ldrb	r2, [r1, r2]
 679 0172 1A60     		str	r2, [r3]
 896:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 680              		.loc 1 896 0
 681 0174 0520     		movs	r0, #5
 682 0176 FFF7FEFF 		bl	CyDelayCycles
 892:Generated_Source\PSoC4/CyLib.c ****             {
 683              		.loc 1 892 0
 684 017a 02E0     		b	.L34
 685              	.L24:
 897:Generated_Source\PSoC4/CyLib.c ****             }
 898:Generated_Source\PSoC4/CyLib.c ****         }
 899:Generated_Source\PSoC4/CyLib.c ****         else
 900:Generated_Source\PSoC4/CyLib.c ****         {
 901:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 902:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 29


 686              		.loc 1 902 0 discriminator 1
 687 017c 0020     		movs	r0, #0
 688 017e FFF7FEFF 		bl	CyHalt
 689              	.L34:
 903:Generated_Source\PSoC4/CyLib.c ****         }
 904:Generated_Source\PSoC4/CyLib.c **** 
 905:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 908:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 909:Generated_Source\PSoC4/CyLib.c ****             {
 910:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 913:Generated_Source\PSoC4/CyLib.c **** 
 914:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 915:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 916:Generated_Source\PSoC4/CyLib.c ****             {
 917:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 918:Generated_Source\PSoC4/CyLib.c ****             }
 919:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 690              		.loc 1 921 0
 691 0182 0C23     		movs	r3, #12
 692 0184 FB18     		adds	r3, r7, r3
 693 0186 1B78     		ldrb	r3, [r3]
 694 0188 1800     		movs	r0, r3
 695 018a FFF7FEFF 		bl	CyExitCriticalSection
 922:Generated_Source\PSoC4/CyLib.c ****     }
 696              		.loc 1 922 0
 697 018e C046     		nop
 698 0190 BD46     		mov	sp, r7
 699 0192 05B0     		add	sp, sp, #20
 700              		@ sp needed
 701 0194 90BD     		pop	{r4, r7, pc}
 702              	.L36:
 703 0196 C046     		.align	2
 704              	.L35:
 705 0198 40F3FF0F 		.word	268432192
 706 019c 41F3FF0F 		.word	268432193
 707 01a0 42F3FF0F 		.word	268432194
 708 01a4 43F3FF0F 		.word	268432195
 709 01a8 44F3FF0F 		.word	268432196
 710 01ac 45F3FF0F 		.word	268432197
 711 01b0 46F3FF0F 		.word	268432198
 712 01b4 47F3FF0F 		.word	268432199
 713 01b8 48F3FF0F 		.word	268432200
 714 01bc 49F3FF0F 		.word	268432201
 715 01c0 4AF3FF0F 		.word	268432202
 716 01c4 4BF3FF0F 		.word	268432203
 717 01c8 4CF3FF0F 		.word	268432204
 718 01cc 4DF3FF0F 		.word	268432205
 719 01d0 00000000 		.word	cyImoFreqMhz2Reg
 720 01d4 2CFF0B40 		.word	1074528044
 721 01d8 28FF0B40 		.word	1074528040
 722 01dc 1CFF0B40 		.word	1074528028
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 30


 723 01e0 20FF0B40 		.word	1074528032
 724              		.cfi_endproc
 725              	.LFE8:
 726              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 727              		.section	.text.CySysClkEcoStart,"ax",%progbits
 728              		.align	2
 729              		.global	CySysClkEcoStart
 730              		.code	16
 731              		.thumb_func
 732              		.type	CySysClkEcoStart, %function
 733              	CySysClkEcoStart:
 734              	.LFB9:
 923:Generated_Source\PSoC4/CyLib.c **** 
 924:Generated_Source\PSoC4/CyLib.c **** #else
 925:Generated_Source\PSoC4/CyLib.c **** 
 926:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 927:Generated_Source\PSoC4/CyLib.c ****     {
 928:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 929:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 930:Generated_Source\PSoC4/CyLib.c **** 
 931:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 932:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 933:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 937:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 938:Generated_Source\PSoC4/CyLib.c **** 
 939:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 940:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 941:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 942:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 943:Generated_Source\PSoC4/CyLib.c ****         #else
 944:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 945:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 946:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 947:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 948:Generated_Source\PSoC4/CyLib.c ****         {
 949:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 952:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 953:Generated_Source\PSoC4/CyLib.c ****                 {
 954:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 955:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 956:Generated_Source\PSoC4/CyLib.c ****                 }
 957:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 958:Generated_Source\PSoC4/CyLib.c **** 
 959:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 960:Generated_Source\PSoC4/CyLib.c **** 
 961:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 962:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 963:Generated_Source\PSoC4/CyLib.c ****                     {
 964:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 965:Generated_Source\PSoC4/CyLib.c **** 
 966:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 967:Generated_Source\PSoC4/CyLib.c ****                     {
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 31


 968:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 969:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 970:Generated_Source\PSoC4/CyLib.c ****                     }
 971:Generated_Source\PSoC4/CyLib.c **** 
 972:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 973:Generated_Source\PSoC4/CyLib.c ****                     }
 974:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 975:Generated_Source\PSoC4/CyLib.c **** 
 976:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 977:Generated_Source\PSoC4/CyLib.c **** 
 978:Generated_Source\PSoC4/CyLib.c **** 
 979:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 980:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 981:Generated_Source\PSoC4/CyLib.c **** 
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 984:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 985:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 986:Generated_Source\PSoC4/CyLib.c ****                 {
 987:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 988:Generated_Source\PSoC4/CyLib.c ****                 }
 989:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 990:Generated_Source\PSoC4/CyLib.c ****                 {
 991:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 992:Generated_Source\PSoC4/CyLib.c ****                 }
 993:Generated_Source\PSoC4/CyLib.c ****                 else
 994:Generated_Source\PSoC4/CyLib.c ****                 {
 995:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 996:Generated_Source\PSoC4/CyLib.c ****                 }
 997:Generated_Source\PSoC4/CyLib.c ****             #else
 998:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 999:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1000:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1003:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1006:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1007:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1012:Generated_Source\PSoC4/CyLib.c ****             {
1013:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1014:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1015:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1016:Generated_Source\PSoC4/CyLib.c **** 
1017:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1018:Generated_Source\PSoC4/CyLib.c **** 
1019:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1020:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1021:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1022:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1023:Generated_Source\PSoC4/CyLib.c ****             }
1024:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 32


1025:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1026:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1027:Generated_Source\PSoC4/CyLib.c ****                 {
1028:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1029:Generated_Source\PSoC4/CyLib.c ****                 }
1030:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1031:Generated_Source\PSoC4/CyLib.c ****         
1032:Generated_Source\PSoC4/CyLib.c ****         
1033:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1034:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1035:Generated_Source\PSoC4/CyLib.c ****                 {
1036:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1037:Generated_Source\PSoC4/CyLib.c ****                 }
1038:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1039:Generated_Source\PSoC4/CyLib.c **** 
1040:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1041:Generated_Source\PSoC4/CyLib.c ****         }
1042:Generated_Source\PSoC4/CyLib.c ****         else
1043:Generated_Source\PSoC4/CyLib.c ****         {
1044:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1045:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1046:Generated_Source\PSoC4/CyLib.c ****         }
1047:Generated_Source\PSoC4/CyLib.c ****     }
1048:Generated_Source\PSoC4/CyLib.c **** 
1049:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1050:Generated_Source\PSoC4/CyLib.c **** 
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1053:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1054:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1055:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1056:Generated_Source\PSoC4/CyLib.c ****     *
1057:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1058:Generated_Source\PSoC4/CyLib.c ****     *
1059:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1060:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1061:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1062:Generated_Source\PSoC4/CyLib.c ****     *
1063:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1064:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1065:Generated_Source\PSoC4/CyLib.c ****     *
1066:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1067:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1068:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1069:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1070:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1071:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1072:Generated_Source\PSoC4/CyLib.c ****     *
1073:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1074:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1075:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1076:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1077:Generated_Source\PSoC4/CyLib.c ****     *
1078:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1079:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1080:Generated_Source\PSoC4/CyLib.c ****     {
1081:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 33


1082:Generated_Source\PSoC4/CyLib.c **** 
1083:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1086:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1087:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1088:Generated_Source\PSoC4/CyLib.c **** 
1089:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1090:Generated_Source\PSoC4/CyLib.c ****     }
1091:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c **** 
1094:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1095:Generated_Source\PSoC4/CyLib.c **** 
1096:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1097:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1098:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1099:Generated_Source\PSoC4/CyLib.c ****     *
1100:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1101:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1102:Generated_Source\PSoC4/CyLib.c ****     *
1103:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1104:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1105:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1106:Generated_Source\PSoC4/CyLib.c ****     * called.
1107:Generated_Source\PSoC4/CyLib.c ****     *
1108:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1109:Generated_Source\PSoC4/CyLib.c ****     *
1110:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1111:Generated_Source\PSoC4/CyLib.c ****     *
1112:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1113:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1114:Generated_Source\PSoC4/CyLib.c ****     *
1115:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1116:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1117:Generated_Source\PSoC4/CyLib.c ****     *
1118:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1119:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1120:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1121:Generated_Source\PSoC4/CyLib.c ****     *
1122:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1123:Generated_Source\PSoC4/CyLib.c ****     *
1124:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1125:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1126:Generated_Source\PSoC4/CyLib.c ****     {
 735              		.loc 1 1126 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 16
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739 0000 80B5     		push	{r7, lr}
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 7, -8
 742              		.cfi_offset 14, -4
 743 0002 84B0     		sub	sp, sp, #16
 744              		.cfi_def_cfa_offset 24
 745 0004 00AF     		add	r7, sp, #0
 746              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 34


 747 0006 7860     		str	r0, [r7, #4]
1127:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 748              		.loc 1 1127 0
 749 0008 0023     		movs	r3, #0
 750 000a FB60     		str	r3, [r7, #12]
1128:Generated_Source\PSoC4/CyLib.c **** 
1129:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1130:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1131:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 751              		.loc 1 1131 0
 752 000c 154B     		ldr	r3, .L43
 753 000e 154A     		ldr	r2, .L43
 754 0010 1268     		ldr	r2, [r2]
 755 0012 0121     		movs	r1, #1
 756 0014 0A43     		orrs	r2, r1
 757 0016 1A60     		str	r2, [r3]
1132:Generated_Source\PSoC4/CyLib.c **** 
1133:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 758              		.loc 1 1134 0
 759 0018 134B     		ldr	r3, .L43+4
 760 001a 144A     		ldr	r2, .L43+8
 761 001c 1A60     		str	r2, [r3]
1135:Generated_Source\PSoC4/CyLib.c **** 
1136:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1137:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 762              		.loc 1 1137 0
 763 001e 144B     		ldr	r3, .L43+12
 764 0020 134A     		ldr	r2, .L43+12
 765 0022 1268     		ldr	r2, [r2]
 766 0024 8021     		movs	r1, #128
 767 0026 0902     		lsls	r1, r1, #8
 768 0028 0A43     		orrs	r2, r1
 769 002a 1A60     		str	r2, [r3]
1138:Generated_Source\PSoC4/CyLib.c ****         
1139:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1140:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1141:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1142:Generated_Source\PSoC4/CyLib.c ****             
1143:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1144:Generated_Source\PSoC4/CyLib.c ****             {
1145:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1146:Generated_Source\PSoC4/CyLib.c ****             }
1147:Generated_Source\PSoC4/CyLib.c ****             else
1148:Generated_Source\PSoC4/CyLib.c ****             {
1149:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1150:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1151:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1152:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1153:Generated_Source\PSoC4/CyLib.c ****             
1154:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1155:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1156:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1157:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1158:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1159:Generated_Source\PSoC4/CyLib.c ****                 
1160:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 35


1161:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1162:Generated_Source\PSoC4/CyLib.c ****                 {
1163:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1164:Generated_Source\PSoC4/CyLib.c ****                 }
1165:Generated_Source\PSoC4/CyLib.c ****                 
1166:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1167:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1168:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1169:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1170:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1173:Generated_Source\PSoC4/CyLib.c ****                 {
1174:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1175:Generated_Source\PSoC4/CyLib.c ****                 }
1176:Generated_Source\PSoC4/CyLib.c **** 
1177:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1178:Generated_Source\PSoC4/CyLib.c ****                 {
1179:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1180:Generated_Source\PSoC4/CyLib.c ****                 }
1181:Generated_Source\PSoC4/CyLib.c ****                 
1182:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1183:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1185:Generated_Source\PSoC4/CyLib.c ****                 
1186:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1187:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1188:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1189:Generated_Source\PSoC4/CyLib.c ****                 #else
1190:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1191:Generated_Source\PSoC4/CyLib.c ****                 #endif
1192:Generated_Source\PSoC4/CyLib.c ****                 
1193:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1194:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1195:Generated_Source\PSoC4/CyLib.c ****                 {
1196:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1197:Generated_Source\PSoC4/CyLib.c ****                 }
1198:Generated_Source\PSoC4/CyLib.c ****                 
1199:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1200:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1201:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1202:Generated_Source\PSoC4/CyLib.c ****                                             
1203:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1204:Generated_Source\PSoC4/CyLib.c ****                 {
1205:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1206:Generated_Source\PSoC4/CyLib.c ****                 }
1207:Generated_Source\PSoC4/CyLib.c **** 
1208:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1209:Generated_Source\PSoC4/CyLib.c ****                 
1210:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1211:Generated_Source\PSoC4/CyLib.c ****                 
1212:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1213:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1214:Generated_Source\PSoC4/CyLib.c ****                 
1215:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1216:Generated_Source\PSoC4/CyLib.c ****                 {
1217:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 36


1218:Generated_Source\PSoC4/CyLib.c ****                 }
1219:Generated_Source\PSoC4/CyLib.c ****                 
1220:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1222:Generated_Source\PSoC4/CyLib.c ****                 
1223:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1224:Generated_Source\PSoC4/CyLib.c ****                 {
1225:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1226:Generated_Source\PSoC4/CyLib.c ****                 }
1227:Generated_Source\PSoC4/CyLib.c ****                 
1228:Generated_Source\PSoC4/CyLib.c ****             }
1229:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1230:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1231:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1232:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1233:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1234:Generated_Source\PSoC4/CyLib.c **** 
1235:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 770              		.loc 1 1235 0
 771 002c 7B68     		ldr	r3, [r7, #4]
 772 002e 002B     		cmp	r3, #0
 773 0030 12D0     		beq	.L38
1236:Generated_Source\PSoC4/CyLib.c ****         {
1237:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 774              		.loc 1 1237 0
 775 0032 1023     		movs	r3, #16
 776 0034 FB60     		str	r3, [r7, #12]
1238:Generated_Source\PSoC4/CyLib.c **** 
1239:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 777              		.loc 1 1239 0
 778 0036 0CE0     		b	.L39
 779              	.L41:
1240:Generated_Source\PSoC4/CyLib.c ****             {
1241:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 780              		.loc 1 1241 0
 781 0038 0120     		movs	r0, #1
 782 003a FFF7FEFF 		bl	CyDelayUs
1242:Generated_Source\PSoC4/CyLib.c **** 
1243:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 783              		.loc 1 1243 0
 784 003e FFF7FEFF 		bl	CySysClkEcoReadStatus
 785 0042 031E     		subs	r3, r0, #0
 786 0044 02D0     		beq	.L40
1244:Generated_Source\PSoC4/CyLib.c ****                 {
1245:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 787              		.loc 1 1245 0
 788 0046 0023     		movs	r3, #0
 789 0048 FB60     		str	r3, [r7, #12]
1246:Generated_Source\PSoC4/CyLib.c ****                     break;
 790              		.loc 1 1246 0
 791 004a 05E0     		b	.L38
 792              	.L40:
1239:Generated_Source\PSoC4/CyLib.c ****             {
 793              		.loc 1 1239 0
 794 004c 7B68     		ldr	r3, [r7, #4]
 795 004e 013B     		subs	r3, r3, #1
 796 0050 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 37


 797              	.L39:
1239:Generated_Source\PSoC4/CyLib.c ****             {
 798              		.loc 1 1239 0 is_stmt 0 discriminator 1
 799 0052 7B68     		ldr	r3, [r7, #4]
 800 0054 002B     		cmp	r3, #0
 801 0056 EFD1     		bne	.L41
 802              	.L38:
1247:Generated_Source\PSoC4/CyLib.c ****                 }
1248:Generated_Source\PSoC4/CyLib.c ****             }
1249:Generated_Source\PSoC4/CyLib.c **** 
1250:Generated_Source\PSoC4/CyLib.c ****         }
1251:Generated_Source\PSoC4/CyLib.c **** 
1252:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 803              		.loc 1 1252 0 is_stmt 1
 804 0058 FB68     		ldr	r3, [r7, #12]
1253:Generated_Source\PSoC4/CyLib.c ****     }
 805              		.loc 1 1253 0
 806 005a 1800     		movs	r0, r3
 807 005c BD46     		mov	sp, r7
 808 005e 04B0     		add	sp, sp, #16
 809              		@ sp needed
 810 0060 80BD     		pop	{r7, pc}
 811              	.L44:
 812 0062 C046     		.align	2
 813              	.L43:
 814 0064 60F02E40 		.word	1076818016
 815 0068 78002E40 		.word	1076756600
 816 006c 02200000 		.word	8194
 817 0070 10002E40 		.word	1076756496
 818              		.cfi_endproc
 819              	.LFE9:
 820              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 821              		.section	.text.CySysClkEcoStop,"ax",%progbits
 822              		.align	2
 823              		.global	CySysClkEcoStop
 824              		.code	16
 825              		.thumb_func
 826              		.type	CySysClkEcoStop, %function
 827              	CySysClkEcoStop:
 828              	.LFB10:
1254:Generated_Source\PSoC4/CyLib.c **** 
1255:Generated_Source\PSoC4/CyLib.c **** 
1256:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1257:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1258:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1259:Generated_Source\PSoC4/CyLib.c ****     *
1260:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1261:Generated_Source\PSoC4/CyLib.c ****     *
1262:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1263:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1264:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1265:Generated_Source\PSoC4/CyLib.c ****     *
1266:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1267:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1268:Generated_Source\PSoC4/CyLib.c ****     {
 829              		.loc 1 1268 0
 830              		.cfi_startproc
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 38


 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833 0000 80B5     		push	{r7, lr}
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 00AF     		add	r7, sp, #0
 838              		.cfi_def_cfa_register 7
1269:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1270:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1271:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 839              		.loc 1 1271 0
 840 0004 074B     		ldr	r3, .L46
 841 0006 074A     		ldr	r2, .L46
 842 0008 1268     		ldr	r2, [r2]
 843 000a 0121     		movs	r1, #1
 844 000c 8A43     		bics	r2, r1
 845 000e 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/CyLib.c **** 
1273:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1274:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 846              		.loc 1 1274 0
 847 0010 054B     		ldr	r3, .L46+4
 848 0012 054A     		ldr	r2, .L46+4
 849 0014 1268     		ldr	r2, [r2]
 850 0016 0549     		ldr	r1, .L46+8
 851 0018 0A40     		ands	r2, r1
 852 001a 1A60     		str	r2, [r3]
1275:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1276:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1277:Generated_Source\PSoC4/CyLib.c ****         #else
1278:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1279:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1280:Generated_Source\PSoC4/CyLib.c ****     }
 853              		.loc 1 1280 0
 854 001c C046     		nop
 855 001e BD46     		mov	sp, r7
 856              		@ sp needed
 857 0020 80BD     		pop	{r7, pc}
 858              	.L47:
 859 0022 C046     		.align	2
 860              	.L46:
 861 0024 60F02E40 		.word	1076818016
 862 0028 10002E40 		.word	1076756496
 863 002c FF7FFFFF 		.word	-32769
 864              		.cfi_endproc
 865              	.LFE10:
 866              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 867              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 868              		.align	2
 869              		.global	CySysClkEcoReadStatus
 870              		.code	16
 871              		.thumb_func
 872              		.type	CySysClkEcoReadStatus, %function
 873              	CySysClkEcoReadStatus:
 874              	.LFB11:
1281:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 39


1282:Generated_Source\PSoC4/CyLib.c **** 
1283:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1284:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1285:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1286:Generated_Source\PSoC4/CyLib.c ****     *
1287:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1288:Generated_Source\PSoC4/CyLib.c ****     *
1289:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1290:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1293:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1294:Generated_Source\PSoC4/CyLib.c ****     *
1295:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1296:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1297:Generated_Source\PSoC4/CyLib.c ****     *
1298:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1299:Generated_Source\PSoC4/CyLib.c ****     *
1300:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1301:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1302:Generated_Source\PSoC4/CyLib.c ****     {
 875              		.loc 1 1302 0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 8
 878              		@ frame_needed = 1, uses_anonymous_args = 0
 879 0000 80B5     		push	{r7, lr}
 880              		.cfi_def_cfa_offset 8
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
 883 0002 82B0     		sub	sp, sp, #8
 884              		.cfi_def_cfa_offset 16
 885 0004 00AF     		add	r7, sp, #0
 886              		.cfi_def_cfa_register 7
1303:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1304:Generated_Source\PSoC4/CyLib.c **** 
1305:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1306:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 887              		.loc 1 1306 0
 888 0006 054B     		ldr	r3, .L50
 889 0008 1B68     		ldr	r3, [r3]
 890 000a 0122     		movs	r2, #1
 891 000c 1340     		ands	r3, r2
 892 000e 7B60     		str	r3, [r7, #4]
1307:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1308:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1309:Generated_Source\PSoC4/CyLib.c **** 
1310:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1311:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1312:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1313:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1314:Generated_Source\PSoC4/CyLib.c ****         #else
1315:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1316:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 893              		.loc 1 1318 0
 894 0010 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 40


1319:Generated_Source\PSoC4/CyLib.c ****     }
 895              		.loc 1 1319 0
 896 0012 1800     		movs	r0, r3
 897 0014 BD46     		mov	sp, r7
 898 0016 02B0     		add	sp, sp, #8
 899              		@ sp needed
 900 0018 80BD     		pop	{r7, pc}
 901              	.L51:
 902 001a C046     		.align	2
 903              	.L50:
 904 001c 0C002E40 		.word	1076756492
 905              		.cfi_endproc
 906              	.LFE11:
 907              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 908              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 909              		.align	2
 910              		.global	CySysClkWriteEcoDiv
 911              		.code	16
 912              		.thumb_func
 913              		.type	CySysClkWriteEcoDiv, %function
 914              	CySysClkWriteEcoDiv:
 915              	.LFB12:
1320:Generated_Source\PSoC4/CyLib.c **** 
1321:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1322:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1323:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1324:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLib.c ****         *
1326:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1327:Generated_Source\PSoC4/CyLib.c ****         *
1328:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1329:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1330:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1331:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1332:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1333:Generated_Source\PSoC4/CyLib.c ****         *
1334:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1335:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1336:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1337:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1338:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1339:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1340:Generated_Source\PSoC4/CyLib.c ****         *
1341:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1342:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1343:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1344:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1345:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1346:Generated_Source\PSoC4/CyLib.c ****         *
1347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1349:Generated_Source\PSoC4/CyLib.c ****         {
 916              		.loc 1 1349 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 16
 919              		@ frame_needed = 1, uses_anonymous_args = 0
 920 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 41


 921              		.cfi_def_cfa_offset 12
 922              		.cfi_offset 4, -12
 923              		.cfi_offset 7, -8
 924              		.cfi_offset 14, -4
 925 0002 85B0     		sub	sp, sp, #20
 926              		.cfi_def_cfa_offset 32
 927 0004 00AF     		add	r7, sp, #0
 928              		.cfi_def_cfa_register 7
 929 0006 7860     		str	r0, [r7, #4]
1350:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
 930              		.loc 1 1352 0
 931 0008 114B     		ldr	r3, .L56
 932 000a 1B68     		ldr	r3, [r3]
 933 000c 0722     		movs	r2, #7
 934 000e 1340     		ands	r3, r2
 935 0010 022B     		cmp	r3, #2
 936 0012 16D0     		beq	.L53
1353:Generated_Source\PSoC4/CyLib.c ****             {
1354:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
 937              		.loc 1 1354 0
 938 0014 0F23     		movs	r3, #15
 939 0016 FC18     		adds	r4, r7, r3
 940 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 941 001c 0300     		movs	r3, r0
 942 001e 2370     		strb	r3, [r4]
1355:Generated_Source\PSoC4/CyLib.c **** 
1356:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 943              		.loc 1 1356 0
 944 0020 0C4B     		ldr	r3, .L56+4
 945 0022 7A68     		ldr	r2, [r7, #4]
 946 0024 0321     		movs	r1, #3
 947 0026 1140     		ands	r1, r2
1357:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 948              		.loc 1 1357 0
 949 0028 0A4A     		ldr	r2, .L56+4
 950 002a 1268     		ldr	r2, [r2]
 951 002c 0320     		movs	r0, #3
 952 002e 8243     		bics	r2, r0
1356:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 953              		.loc 1 1356 0
 954 0030 0A43     		orrs	r2, r1
 955 0032 1A60     		str	r2, [r3]
1358:Generated_Source\PSoC4/CyLib.c **** 
1359:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
 956              		.loc 1 1359 0
 957 0034 0F23     		movs	r3, #15
 958 0036 FB18     		adds	r3, r7, r3
 959 0038 1B78     		ldrb	r3, [r3]
 960 003a 1800     		movs	r0, r3
 961 003c FFF7FEFF 		bl	CyExitCriticalSection
1360:Generated_Source\PSoC4/CyLib.c ****             }
1361:Generated_Source\PSoC4/CyLib.c ****             else
1362:Generated_Source\PSoC4/CyLib.c ****             {
1363:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1364:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 42


1365:Generated_Source\PSoC4/CyLib.c ****             }
1366:Generated_Source\PSoC4/CyLib.c ****         }
 962              		.loc 1 1366 0
 963 0040 02E0     		b	.L55
 964              	.L53:
1364:Generated_Source\PSoC4/CyLib.c ****             }
 965              		.loc 1 1364 0 discriminator 1
 966 0042 0020     		movs	r0, #0
 967 0044 FFF7FEFF 		bl	CyHalt
 968              	.L55:
 969              		.loc 1 1366 0
 970 0048 C046     		nop
 971 004a BD46     		mov	sp, r7
 972 004c 05B0     		add	sp, sp, #20
 973              		@ sp needed
 974 004e 90BD     		pop	{r4, r7, pc}
 975              	.L57:
 976              		.align	2
 977              	.L56:
 978 0050 00010B40 		.word	1074462976
 979 0054 64F02E40 		.word	1076818020
 980              		.cfi_endproc
 981              	.LFE12:
 982              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 983              		.section	.text.CySysLvdEnable,"ax",%progbits
 984              		.align	2
 985              		.global	CySysLvdEnable
 986              		.code	16
 987              		.thumb_func
 988              		.type	CySysLvdEnable, %function
 989              	CySysLvdEnable:
 990              	.LFB13:
1367:Generated_Source\PSoC4/CyLib.c **** 
1368:Generated_Source\PSoC4/CyLib.c ****     #else
1369:Generated_Source\PSoC4/CyLib.c **** 
1370:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1371:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1372:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1375:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1376:Generated_Source\PSoC4/CyLib.c ****         *
1377:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1378:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1381:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1382:Generated_Source\PSoC4/CyLib.c ****         *
1383:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1384:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1385:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1386:Generated_Source\PSoC4/CyLib.c ****         *
1387:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1388:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1389:Generated_Source\PSoC4/CyLib.c ****         *
1390:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1391:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 43


1392:Generated_Source\PSoC4/CyLib.c ****         *
1393:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1394:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1395:Generated_Source\PSoC4/CyLib.c ****         *
1396:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1397:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1398:Generated_Source\PSoC4/CyLib.c ****         *
1399:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1400:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1401:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1402:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1403:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1404:Generated_Source\PSoC4/CyLib.c ****         *
1405:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1406:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1407:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1408:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1409:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1410:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1411:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1412:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1413:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1414:Generated_Source\PSoC4/CyLib.c ****         *
1415:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1416:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1417:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1418:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1419:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1428:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1429:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1430:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1431:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1435:Generated_Source\PSoC4/CyLib.c ****         *
1436:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1437:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1438:Generated_Source\PSoC4/CyLib.c ****         {
1439:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1440:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1441:Generated_Source\PSoC4/CyLib.c **** 
1442:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1443:Generated_Source\PSoC4/CyLib.c **** 
1444:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1445:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1446:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1447:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1448:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 44


1449:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1450:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1451:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1452:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1453:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1454:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1455:Generated_Source\PSoC4/CyLib.c **** 
1456:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1457:Generated_Source\PSoC4/CyLib.c **** 
1458:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1459:Generated_Source\PSoC4/CyLib.c ****         }
1460:Generated_Source\PSoC4/CyLib.c **** 
1461:Generated_Source\PSoC4/CyLib.c **** 
1462:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1463:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1464:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1465:Generated_Source\PSoC4/CyLib.c ****         *
1466:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1467:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1468:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1471:Generated_Source\PSoC4/CyLib.c ****         *
1472:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1473:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1474:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1475:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1476:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1477:Generated_Source\PSoC4/CyLib.c ****         *
1478:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1479:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1480:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1481:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1482:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1483:Generated_Source\PSoC4/CyLib.c ****         *
1484:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1485:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1486:Generated_Source\PSoC4/CyLib.c ****         *
1487:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1488:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1489:Generated_Source\PSoC4/CyLib.c ****         {
1490:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1491:Generated_Source\PSoC4/CyLib.c **** 
1492:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1493:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1494:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1495:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1496:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1497:Generated_Source\PSoC4/CyLib.c **** 
1498:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1499:Generated_Source\PSoC4/CyLib.c **** 
1500:Generated_Source\PSoC4/CyLib.c **** 
1501:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1502:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1503:Generated_Source\PSoC4/CyLib.c ****             {
1504:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1505:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 45


1506:Generated_Source\PSoC4/CyLib.c ****             else
1507:Generated_Source\PSoC4/CyLib.c ****             {
1508:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1509:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1512:Generated_Source\PSoC4/CyLib.c ****                 {
1513:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1514:Generated_Source\PSoC4/CyLib.c ****                 }
1515:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1516:Generated_Source\PSoC4/CyLib.c ****                 {
1517:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1518:Generated_Source\PSoC4/CyLib.c ****                 }
1519:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1520:Generated_Source\PSoC4/CyLib.c ****                 {
1521:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1522:Generated_Source\PSoC4/CyLib.c ****                 }
1523:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1524:Generated_Source\PSoC4/CyLib.c ****                 {
1525:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1526:Generated_Source\PSoC4/CyLib.c ****                 }
1527:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1528:Generated_Source\PSoC4/CyLib.c ****                 {
1529:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1530:Generated_Source\PSoC4/CyLib.c ****                 }
1531:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1532:Generated_Source\PSoC4/CyLib.c ****                 {
1533:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1534:Generated_Source\PSoC4/CyLib.c ****                 }
1535:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1536:Generated_Source\PSoC4/CyLib.c ****                 {
1537:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1538:Generated_Source\PSoC4/CyLib.c ****                 }
1539:Generated_Source\PSoC4/CyLib.c ****                 else
1540:Generated_Source\PSoC4/CyLib.c ****                 {
1541:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1542:Generated_Source\PSoC4/CyLib.c ****                 }
1543:Generated_Source\PSoC4/CyLib.c **** 
1544:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1545:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1548:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1549:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1550:Generated_Source\PSoC4/CyLib.c ****                 {
1551:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1552:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1553:Generated_Source\PSoC4/CyLib.c ****                 }
1554:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1555:Generated_Source\PSoC4/CyLib.c ****                 {
1556:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1557:Generated_Source\PSoC4/CyLib.c ****                 }
1558:Generated_Source\PSoC4/CyLib.c ****                 else
1559:Generated_Source\PSoC4/CyLib.c ****                 {
1560:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1561:Generated_Source\PSoC4/CyLib.c ****                 }
1562:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 46


1563:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1564:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1565:Generated_Source\PSoC4/CyLib.c ****                 {
1566:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1567:Generated_Source\PSoC4/CyLib.c ****                 }
1568:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1569:Generated_Source\PSoC4/CyLib.c ****                 {
1570:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1571:Generated_Source\PSoC4/CyLib.c ****                 }
1572:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1573:Generated_Source\PSoC4/CyLib.c ****                 {
1574:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1575:Generated_Source\PSoC4/CyLib.c ****                 }
1576:Generated_Source\PSoC4/CyLib.c ****                 else
1577:Generated_Source\PSoC4/CyLib.c ****                 {
1578:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1579:Generated_Source\PSoC4/CyLib.c ****                 }
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1582:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1583:Generated_Source\PSoC4/CyLib.c **** 
1584:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1585:Generated_Source\PSoC4/CyLib.c **** 
1586:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1587:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1588:Generated_Source\PSoC4/CyLib.c ****                 {
1589:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1590:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1591:Generated_Source\PSoC4/CyLib.c ****                 }
1592:Generated_Source\PSoC4/CyLib.c ****                 else
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1595:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1596:Generated_Source\PSoC4/CyLib.c ****                     */
1597:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1598:Generated_Source\PSoC4/CyLib.c ****                 }
1599:Generated_Source\PSoC4/CyLib.c ****             }
1600:Generated_Source\PSoC4/CyLib.c **** 
1601:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1602:Generated_Source\PSoC4/CyLib.c ****         }
1603:Generated_Source\PSoC4/CyLib.c **** 
1604:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1605:Generated_Source\PSoC4/CyLib.c **** 
1606:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1607:Generated_Source\PSoC4/CyLib.c **** 
1608:Generated_Source\PSoC4/CyLib.c **** 
1609:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1610:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1611:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1612:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1613:Generated_Source\PSoC4/CyLib.c ****     *
1614:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1615:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1616:Generated_Source\PSoC4/CyLib.c ****     *
1617:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1618:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1619:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 47


1620:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1621:Generated_Source\PSoC4/CyLib.c ****     *
1622:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1623:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1624:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1625:Generated_Source\PSoC4/CyLib.c ****     *
1626:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1627:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1628:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1629:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1630:Generated_Source\PSoC4/CyLib.c ****     *
1631:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1632:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1633:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1634:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1635:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1636:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1639:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1640:Generated_Source\PSoC4/CyLib.c ****     {
1641:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1642:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1643:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1644:Generated_Source\PSoC4/CyLib.c **** 
1645:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1646:Generated_Source\PSoC4/CyLib.c ****         {
1647:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1650:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1651:Generated_Source\PSoC4/CyLib.c **** 
1652:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1653:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1654:Generated_Source\PSoC4/CyLib.c **** 
1655:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1658:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1659:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1660:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1661:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1662:Generated_Source\PSoC4/CyLib.c **** 
1663:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1664:Generated_Source\PSoC4/CyLib.c ****             {
1665:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1668:Generated_Source\PSoC4/CyLib.c ****                 {
1669:Generated_Source\PSoC4/CyLib.c **** 
1670:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1671:Generated_Source\PSoC4/CyLib.c ****                     {
1672:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1673:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1674:Generated_Source\PSoC4/CyLib.c ****                         break;
1675:Generated_Source\PSoC4/CyLib.c ****                     }
1676:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 48


1677:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1678:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1679:Generated_Source\PSoC4/CyLib.c ****                 }
1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c ****         }
1682:Generated_Source\PSoC4/CyLib.c ****         else
1683:Generated_Source\PSoC4/CyLib.c ****         {
1684:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1685:Generated_Source\PSoC4/CyLib.c ****         }
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1688:Generated_Source\PSoC4/CyLib.c ****     }
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** 
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1696:Generated_Source\PSoC4/CyLib.c ****     *
1697:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1698:Generated_Source\PSoC4/CyLib.c ****     *
1699:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1700:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1701:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1704:Generated_Source\PSoC4/CyLib.c ****     *
1705:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1706:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1707:Generated_Source\PSoC4/CyLib.c ****     {
1708:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1709:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1710:Generated_Source\PSoC4/CyLib.c **** 
1711:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1712:Generated_Source\PSoC4/CyLib.c **** 
1713:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1714:Generated_Source\PSoC4/CyLib.c **** 
1715:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1716:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1717:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1718:Generated_Source\PSoC4/CyLib.c ****         {
1719:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1720:Generated_Source\PSoC4/CyLib.c ****         }
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1723:Generated_Source\PSoC4/CyLib.c **** 
1724:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1725:Generated_Source\PSoC4/CyLib.c ****     }
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 49


1734:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1737:Generated_Source\PSoC4/CyLib.c ****     *
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1739:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1740:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1741:Generated_Source\PSoC4/CyLib.c ****     *
1742:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1743:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1744:Generated_Source\PSoC4/CyLib.c ****     {
1745:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1746:Generated_Source\PSoC4/CyLib.c **** 
1747:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1748:Generated_Source\PSoC4/CyLib.c ****         {
1749:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1750:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1751:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1752:Generated_Source\PSoC4/CyLib.c ****         }
1753:Generated_Source\PSoC4/CyLib.c ****     }
1754:Generated_Source\PSoC4/CyLib.c **** 
1755:Generated_Source\PSoC4/CyLib.c **** 
1756:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1757:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1758:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1759:Generated_Source\PSoC4/CyLib.c ****     *
1760:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1761:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1762:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1763:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1764:Generated_Source\PSoC4/CyLib.c ****     *
1765:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1766:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1769:Generated_Source\PSoC4/CyLib.c ****     *
1770:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1771:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1772:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1773:Generated_Source\PSoC4/CyLib.c ****     *
1774:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1775:Generated_Source\PSoC4/CyLib.c ****     * divider.
1776:Generated_Source\PSoC4/CyLib.c ****     *
1777:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1778:Generated_Source\PSoC4/CyLib.c ****     *
1779:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1780:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1781:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1784:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1785:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1788:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1789:Generated_Source\PSoC4/CyLib.c ****     {
1790:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 50


1791:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1792:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1793:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1794:Generated_Source\PSoC4/CyLib.c **** 
1795:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1796:Generated_Source\PSoC4/CyLib.c **** 
1797:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1798:Generated_Source\PSoC4/CyLib.c **** 
1799:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1800:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1801:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1802:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1803:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1804:Generated_Source\PSoC4/CyLib.c ****         {
1805:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1806:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1807:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1808:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1809:Generated_Source\PSoC4/CyLib.c **** 
1810:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1811:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1812:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1813:Generated_Source\PSoC4/CyLib.c **** 
1814:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1815:Generated_Source\PSoC4/CyLib.c **** 
1816:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1817:Generated_Source\PSoC4/CyLib.c ****         }
1818:Generated_Source\PSoC4/CyLib.c **** 
1819:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1822:Generated_Source\PSoC4/CyLib.c ****     }
1823:Generated_Source\PSoC4/CyLib.c **** 
1824:Generated_Source\PSoC4/CyLib.c **** 
1825:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1826:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1827:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1828:Generated_Source\PSoC4/CyLib.c ****     *
1829:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1830:Generated_Source\PSoC4/CyLib.c ****     *
1831:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1832:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1833:Generated_Source\PSoC4/CyLib.c ****     *
1834:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1835:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1836:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1837:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1838:Generated_Source\PSoC4/CyLib.c ****     *
1839:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1842:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1843:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1844:Generated_Source\PSoC4/CyLib.c ****     *
1845:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1846:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1847:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 51


1848:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1851:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1852:Generated_Source\PSoC4/CyLib.c ****     *
1853:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1856:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1857:Generated_Source\PSoC4/CyLib.c ****     {
1858:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1859:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1860:Generated_Source\PSoC4/CyLib.c **** 
1861:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1862:Generated_Source\PSoC4/CyLib.c **** 
1863:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1864:Generated_Source\PSoC4/CyLib.c ****         {
1865:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1866:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1867:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1868:Generated_Source\PSoC4/CyLib.c ****         }
1869:Generated_Source\PSoC4/CyLib.c **** 
1870:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1871:Generated_Source\PSoC4/CyLib.c ****     }
1872:Generated_Source\PSoC4/CyLib.c **** 
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1875:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1876:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1877:Generated_Source\PSoC4/CyLib.c ****     *
1878:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1879:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1880:Generated_Source\PSoC4/CyLib.c ****     *
1881:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1882:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1883:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1884:Generated_Source\PSoC4/CyLib.c ****     *
1885:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1886:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1889:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1890:Generated_Source\PSoC4/CyLib.c ****     {
1891:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1892:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1893:Generated_Source\PSoC4/CyLib.c **** 
1894:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1895:Generated_Source\PSoC4/CyLib.c **** 
1896:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1897:Generated_Source\PSoC4/CyLib.c **** 
1898:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1899:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1900:Generated_Source\PSoC4/CyLib.c **** 
1901:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1902:Generated_Source\PSoC4/CyLib.c **** 
1903:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1904:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 52


1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c **** 
1907:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1909:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLib.c ****     *
1911:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1912:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1913:Generated_Source\PSoC4/CyLib.c ****     *
1914:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1915:Generated_Source\PSoC4/CyLib.c ****     *
1916:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1917:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1918:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1921:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1922:Generated_Source\PSoC4/CyLib.c ****     *
1923:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1924:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1925:Generated_Source\PSoC4/CyLib.c ****     {
1926:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1927:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1928:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1931:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1934:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1935:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1936:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1937:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1938:Generated_Source\PSoC4/CyLib.c ****             )
1939:Generated_Source\PSoC4/CyLib.c ****         {
1940:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1941:Generated_Source\PSoC4/CyLib.c ****         }
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1944:Generated_Source\PSoC4/CyLib.c ****     }
1945:Generated_Source\PSoC4/CyLib.c **** 
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1948:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1949:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1950:Generated_Source\PSoC4/CyLib.c ****     *
1951:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1952:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1953:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1954:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1955:Generated_Source\PSoC4/CyLib.c ****     *
1956:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1957:Generated_Source\PSoC4/CyLib.c ****     *
1958:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1959:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1960:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1961:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 53


1962:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1963:Generated_Source\PSoC4/CyLib.c ****     *
1964:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1965:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1966:Generated_Source\PSoC4/CyLib.c ****     {
1967:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1968:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1969:Generated_Source\PSoC4/CyLib.c **** 
1970:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1971:Generated_Source\PSoC4/CyLib.c **** 
1972:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1973:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1976:Generated_Source\PSoC4/CyLib.c **** 
1977:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1978:Generated_Source\PSoC4/CyLib.c ****     }
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c **** 
1981:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1982:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1983:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1984:Generated_Source\PSoC4/CyLib.c ****     *
1985:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1986:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1987:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1988:Generated_Source\PSoC4/CyLib.c ****     *
1989:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1990:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1991:Generated_Source\PSoC4/CyLib.c ****     *
1992:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1993:Generated_Source\PSoC4/CyLib.c ****     *
1994:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1995:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1996:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2001:Generated_Source\PSoC4/CyLib.c ****     *
2002:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2003:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2004:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2005:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2006:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2007:Generated_Source\PSoC4/CyLib.c ****     *
2008:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2009:Generated_Source\PSoC4/CyLib.c ****     *
2010:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2011:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2014:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2015:Generated_Source\PSoC4/CyLib.c ****     *
2016:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2017:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2018:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 54


2019:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2020:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2021:Generated_Source\PSoC4/CyLib.c **** 
2022:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2023:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2024:Generated_Source\PSoC4/CyLib.c **** 
2025:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2026:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2029:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2032:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2033:Generated_Source\PSoC4/CyLib.c **** 
2034:Generated_Source\PSoC4/CyLib.c **** 
2035:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2036:Generated_Source\PSoC4/CyLib.c **** 
2037:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2038:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2039:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2040:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2041:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2042:Generated_Source\PSoC4/CyLib.c ****         {
2043:Generated_Source\PSoC4/CyLib.c **** 
2044:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2045:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2046:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2047:Generated_Source\PSoC4/CyLib.c **** 
2048:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2049:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2050:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2053:Generated_Source\PSoC4/CyLib.c ****             {
2054:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2055:Generated_Source\PSoC4/CyLib.c ****                 {
2056:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2059:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2060:Generated_Source\PSoC4/CyLib.c **** 
2061:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2062:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2063:Generated_Source\PSoC4/CyLib.c **** 
2064:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2065:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2066:Generated_Source\PSoC4/CyLib.c **** 
2067:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2068:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2069:Generated_Source\PSoC4/CyLib.c ****                     {
2070:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2071:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2072:Generated_Source\PSoC4/CyLib.c ****                         break;
2073:Generated_Source\PSoC4/CyLib.c ****                     }
2074:Generated_Source\PSoC4/CyLib.c ****                 }
2075:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 55


2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2078:Generated_Source\PSoC4/CyLib.c ****                 {
2079:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2080:Generated_Source\PSoC4/CyLib.c ****                     {
2081:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2082:Generated_Source\PSoC4/CyLib.c ****                     }
2083:Generated_Source\PSoC4/CyLib.c ****                 }
2084:Generated_Source\PSoC4/CyLib.c ****             }
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c ****         }
2087:Generated_Source\PSoC4/CyLib.c **** 
2088:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2089:Generated_Source\PSoC4/CyLib.c ****     }
2090:Generated_Source\PSoC4/CyLib.c **** 
2091:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2093:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLib.c ****     *
2095:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2096:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2097:Generated_Source\PSoC4/CyLib.c ****     *
2098:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2099:Generated_Source\PSoC4/CyLib.c ****     *
2100:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2101:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2102:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2103:Generated_Source\PSoC4/CyLib.c ****     *
2104:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2105:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2106:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
2107:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2108:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2109:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2110:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2111:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2112:Generated_Source\PSoC4/CyLib.c ****     *
2113:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2114:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2115:Generated_Source\PSoC4/CyLib.c ****     {
2116:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2117:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2118:Generated_Source\PSoC4/CyLib.c ****         
2119:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2120:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2121:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2126:Generated_Source\PSoC4/CyLib.c ****         {
2127:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2128:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2129:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2130:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2131:Generated_Source\PSoC4/CyLib.c ****             #else
2132:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_ECO_CLK_SELECT_PLL0_MASK;
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 56


2133:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_ECO_CLK_SELECT_PLL0_SHIFT) & CY_SYS_ECO_CLK_SELECT_PLL
2134:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
2135:Generated_Source\PSoC4/CyLib.c ****                 
2136:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2137:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2138:Generated_Source\PSoC4/CyLib.c ****                 
2139:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2140:Generated_Source\PSoC4/CyLib.c ****                 {
2141:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2142:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2143:Generated_Source\PSoC4/CyLib.c ****                 }
2144:Generated_Source\PSoC4/CyLib.c ****                 
2145:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2146:Generated_Source\PSoC4/CyLib.c **** 
2147:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2148:Generated_Source\PSoC4/CyLib.c ****         }
2149:Generated_Source\PSoC4/CyLib.c **** 
2150:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2151:Generated_Source\PSoC4/CyLib.c ****     }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c ****     
2154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2157:Generated_Source\PSoC4/CyLib.c ****     *
2158:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2159:Generated_Source\PSoC4/CyLib.c ****     *
2160:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2161:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2162:Generated_Source\PSoC4/CyLib.c ****     *
2163:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2166:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2167:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2168:Generated_Source\PSoC4/CyLib.c ****     *
2169:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2170:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2171:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2172:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2173:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2176:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2177:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2178:Generated_Source\PSoC4/CyLib.c ****     *
2179:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2180:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2181:Generated_Source\PSoC4/CyLib.c ****     {
2182:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2183:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2184:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2185:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** 
2188:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2189:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 57


2190:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2191:Generated_Source\PSoC4/CyLib.c **** 
2192:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2193:Generated_Source\PSoC4/CyLib.c ****         {
2194:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2195:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2196:Generated_Source\PSoC4/CyLib.c **** 
2197:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2198:Generated_Source\PSoC4/CyLib.c **** 
2199:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2200:Generated_Source\PSoC4/CyLib.c ****         }
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2205:Generated_Source\PSoC4/CyLib.c ****     }
2206:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2207:Generated_Source\PSoC4/CyLib.c **** 
2208:Generated_Source\PSoC4/CyLib.c **** 
2209:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2210:Generated_Source\PSoC4/CyLib.c **** 
2211:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2212:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2213:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2214:Generated_Source\PSoC4/CyLib.c ****     *
2215:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2216:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2217:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2218:Generated_Source\PSoC4/CyLib.c ****     *
2219:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2220:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2221:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2222:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2223:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2224:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2225:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2226:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2227:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2228:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2229:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2230:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2231:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2232:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2233:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2234:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2235:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2236:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2237:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2238:Generated_Source\PSoC4/CyLib.c ****     *
2239:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2240:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2241:Generated_Source\PSoC4/CyLib.c ****     {
 991              		.loc 1 2241 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 8
 994              		@ frame_needed = 1, uses_anonymous_args = 0
 995 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 58


 996              		.cfi_def_cfa_offset 8
 997              		.cfi_offset 7, -8
 998              		.cfi_offset 14, -4
 999 0002 82B0     		sub	sp, sp, #8
 1000              		.cfi_def_cfa_offset 16
 1001 0004 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 1003 0006 7860     		str	r0, [r7, #4]
2242:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2243:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 1004              		.loc 1 2243 0
 1005 0008 144B     		ldr	r3, .L59
 1006 000a 144A     		ldr	r2, .L59
 1007 000c 1268     		ldr	r2, [r2]
 1008 000e 0221     		movs	r1, #2
 1009 0010 8A43     		bics	r2, r1
 1010 0012 1A60     		str	r2, [r3]
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2246:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 1011              		.loc 1 2246 0
 1012 0014 124B     		ldr	r3, .L59+4
 1013 0016 124A     		ldr	r2, .L59+4
 1014 0018 1268     		ldr	r2, [r2]
 1015 001a 1E21     		movs	r1, #30
 1016 001c 8A43     		bics	r2, r1
 1017 001e 1100     		movs	r1, r2
2247:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1018              		.loc 1 2247 0
 1019 0020 7A68     		ldr	r2, [r7, #4]
 1020 0022 5200     		lsls	r2, r2, #1
 1021 0024 1E20     		movs	r0, #30
 1022 0026 0240     		ands	r2, r0
2246:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1023              		.loc 1 2246 0
 1024 0028 0A43     		orrs	r2, r1
 1025 002a 1A60     		str	r2, [r3]
2248:Generated_Source\PSoC4/CyLib.c **** 
2249:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2250:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 1026              		.loc 1 2250 0
 1027 002c 0C4B     		ldr	r3, .L59+4
 1028 002e 0C4A     		ldr	r2, .L59+4
 1029 0030 1268     		ldr	r2, [r2]
 1030 0032 0121     		movs	r1, #1
 1031 0034 0A43     		orrs	r2, r1
 1032 0036 1A60     		str	r2, [r3]
2251:Generated_Source\PSoC4/CyLib.c **** 
2252:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2253:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 1033              		.loc 1 2253 0
 1034 0038 FA23     		movs	r3, #250
 1035 003a 9B00     		lsls	r3, r3, #2
 1036 003c 1800     		movs	r0, r3
 1037 003e FFF7FEFF 		bl	CyDelayUs
2254:Generated_Source\PSoC4/CyLib.c **** 
2255:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 59


2256:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 1038              		.loc 1 2256 0
 1039 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2257:Generated_Source\PSoC4/CyLib.c **** 
2258:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2259:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 1040              		.loc 1 2259 0
 1041 0046 054B     		ldr	r3, .L59
 1042 0048 044A     		ldr	r2, .L59
 1043 004a 1268     		ldr	r2, [r2]
 1044 004c 0221     		movs	r1, #2
 1045 004e 0A43     		orrs	r2, r1
 1046 0050 1A60     		str	r2, [r3]
2260:Generated_Source\PSoC4/CyLib.c ****     }
 1047              		.loc 1 2260 0
 1048 0052 C046     		nop
 1049 0054 BD46     		mov	sp, r7
 1050 0056 02B0     		add	sp, sp, #8
 1051              		@ sp needed
 1052 0058 80BD     		pop	{r7, pc}
 1053              	.L60:
 1054 005a C046     		.align	2
 1055              	.L59:
 1056 005c 08000B40 		.word	1074462728
 1057 0060 18000B40 		.word	1074462744
 1058              		.cfi_endproc
 1059              	.LFE13:
 1060              		.size	CySysLvdEnable, .-CySysLvdEnable
 1061              		.section	.text.CySysLvdDisable,"ax",%progbits
 1062              		.align	2
 1063              		.global	CySysLvdDisable
 1064              		.code	16
 1065              		.thumb_func
 1066              		.type	CySysLvdDisable, %function
 1067              	CySysLvdDisable:
 1068              	.LFB14:
2261:Generated_Source\PSoC4/CyLib.c **** 
2262:Generated_Source\PSoC4/CyLib.c **** 
2263:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2264:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2265:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2266:Generated_Source\PSoC4/CyLib.c ****     *
2267:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2268:Generated_Source\PSoC4/CyLib.c ****     *
2269:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2270:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2271:Generated_Source\PSoC4/CyLib.c ****     {
 1069              		.loc 1 2271 0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 0
 1072              		@ frame_needed = 1, uses_anonymous_args = 0
 1073 0000 80B5     		push	{r7, lr}
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 7, -8
 1076              		.cfi_offset 14, -4
 1077 0002 00AF     		add	r7, sp, #0
 1078              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 60


2272:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 1079              		.loc 1 2272 0
 1080 0004 074B     		ldr	r3, .L62
 1081 0006 074A     		ldr	r2, .L62
 1082 0008 1268     		ldr	r2, [r2]
 1083 000a 0221     		movs	r1, #2
 1084 000c 8A43     		bics	r2, r1
 1085 000e 1A60     		str	r2, [r3]
2273:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 1086              		.loc 1 2273 0
 1087 0010 054B     		ldr	r3, .L62+4
 1088 0012 054A     		ldr	r2, .L62+4
 1089 0014 1268     		ldr	r2, [r2]
 1090 0016 0121     		movs	r1, #1
 1091 0018 8A43     		bics	r2, r1
 1092 001a 1A60     		str	r2, [r3]
2274:Generated_Source\PSoC4/CyLib.c ****     }
 1093              		.loc 1 2274 0
 1094 001c C046     		nop
 1095 001e BD46     		mov	sp, r7
 1096              		@ sp needed
 1097 0020 80BD     		pop	{r7, pc}
 1098              	.L63:
 1099 0022 C046     		.align	2
 1100              	.L62:
 1101 0024 08000B40 		.word	1074462728
 1102 0028 18000B40 		.word	1074462744
 1103              		.cfi_endproc
 1104              	.LFE14:
 1105              		.size	CySysLvdDisable, .-CySysLvdDisable
 1106              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 1107              		.align	2
 1108              		.global	CySysLvdGetInterruptSource
 1109              		.code	16
 1110              		.thumb_func
 1111              		.type	CySysLvdGetInterruptSource, %function
 1112              	CySysLvdGetInterruptSource:
 1113              	.LFB15:
2275:Generated_Source\PSoC4/CyLib.c **** 
2276:Generated_Source\PSoC4/CyLib.c **** 
2277:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2278:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2279:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2280:Generated_Source\PSoC4/CyLib.c ****     *
2281:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2282:Generated_Source\PSoC4/CyLib.c ****     *
2283:Generated_Source\PSoC4/CyLib.c ****     * \return
2284:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2285:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2286:Generated_Source\PSoC4/CyLib.c ****     *
2287:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2288:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2289:Generated_Source\PSoC4/CyLib.c ****     {
 1114              		.loc 1 2289 0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 0
 1117              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 61


 1118 0000 80B5     		push	{r7, lr}
 1119              		.cfi_def_cfa_offset 8
 1120              		.cfi_offset 7, -8
 1121              		.cfi_offset 14, -4
 1122 0002 00AF     		add	r7, sp, #0
 1123              		.cfi_def_cfa_register 7
2290:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 1124              		.loc 1 2290 0
 1125 0004 034B     		ldr	r3, .L66
 1126 0006 1B68     		ldr	r3, [r3]
 1127 0008 0222     		movs	r2, #2
 1128 000a 1340     		ands	r3, r2
2291:Generated_Source\PSoC4/CyLib.c ****     }
 1129              		.loc 1 2291 0
 1130 000c 1800     		movs	r0, r3
 1131 000e BD46     		mov	sp, r7
 1132              		@ sp needed
 1133 0010 80BD     		pop	{r7, pc}
 1134              	.L67:
 1135 0012 C046     		.align	2
 1136              	.L66:
 1137 0014 04000B40 		.word	1074462724
 1138              		.cfi_endproc
 1139              	.LFE15:
 1140              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 1141              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 1142              		.align	2
 1143              		.global	CySysLvdClearInterrupt
 1144              		.code	16
 1145              		.thumb_func
 1146              		.type	CySysLvdClearInterrupt, %function
 1147              	CySysLvdClearInterrupt:
 1148              	.LFB16:
2292:Generated_Source\PSoC4/CyLib.c **** 
2293:Generated_Source\PSoC4/CyLib.c **** 
2294:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2295:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2296:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2297:Generated_Source\PSoC4/CyLib.c ****     *
2298:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2299:Generated_Source\PSoC4/CyLib.c ****     *
2300:Generated_Source\PSoC4/CyLib.c ****     * \return
2301:Generated_Source\PSoC4/CyLib.c ****     *  None
2302:Generated_Source\PSoC4/CyLib.c ****     *
2303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2304:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2305:Generated_Source\PSoC4/CyLib.c ****     {
 1149              		.loc 1 2305 0
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 0
 1152              		@ frame_needed = 1, uses_anonymous_args = 0
 1153 0000 80B5     		push	{r7, lr}
 1154              		.cfi_def_cfa_offset 8
 1155              		.cfi_offset 7, -8
 1156              		.cfi_offset 14, -4
 1157 0002 00AF     		add	r7, sp, #0
 1158              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 62


2306:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 1159              		.loc 1 2306 0
 1160 0004 024B     		ldr	r3, .L69
 1161 0006 0222     		movs	r2, #2
 1162 0008 1A60     		str	r2, [r3]
2307:Generated_Source\PSoC4/CyLib.c ****     }
 1163              		.loc 1 2307 0
 1164 000a C046     		nop
 1165 000c BD46     		mov	sp, r7
 1166              		@ sp needed
 1167 000e 80BD     		pop	{r7, pc}
 1168              	.L70:
 1169              		.align	2
 1170              	.L69:
 1171 0010 04000B40 		.word	1074462724
 1172              		.cfi_endproc
 1173              	.LFE16:
 1174              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 1175              		.section	.text.CySysGetResetReason,"ax",%progbits
 1176              		.align	2
 1177              		.global	CySysGetResetReason
 1178              		.code	16
 1179              		.thumb_func
 1180              		.type	CySysGetResetReason, %function
 1181              	CySysGetResetReason:
 1182              	.LFB17:
2308:Generated_Source\PSoC4/CyLib.c **** 
2309:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2310:Generated_Source\PSoC4/CyLib.c **** 
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2313:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2314:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2315:Generated_Source\PSoC4/CyLib.c **** *
2316:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2317:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2318:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2319:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2320:Generated_Source\PSoC4/CyLib.c **** *
2321:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2322:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2323:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2324:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2325:Generated_Source\PSoC4/CyLib.c **** *
2326:Generated_Source\PSoC4/CyLib.c **** * \return
2327:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2330:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2331:Generated_Source\PSoC4/CyLib.c **** {
 1183              		.loc 1 2331 0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 16
 1186              		@ frame_needed = 1, uses_anonymous_args = 0
 1187 0000 80B5     		push	{r7, lr}
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 7, -8
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 63


 1190              		.cfi_offset 14, -4
 1191 0002 84B0     		sub	sp, sp, #16
 1192              		.cfi_def_cfa_offset 24
 1193 0004 00AF     		add	r7, sp, #0
 1194              		.cfi_def_cfa_register 7
 1195 0006 7860     		str	r0, [r7, #4]
2332:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2333:Generated_Source\PSoC4/CyLib.c **** 
2334:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 1196              		.loc 1 2334 0
 1197 0008 7B68     		ldr	r3, [r7, #4]
 1198 000a 1922     		movs	r2, #25
 1199 000c 1340     		ands	r3, r2
 1200 000e 7B60     		str	r3, [r7, #4]
2335:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 1201              		.loc 1 2335 0
 1202 0010 064B     		ldr	r3, .L73
 1203 0012 1B68     		ldr	r3, [r3]
 1204 0014 1922     		movs	r2, #25
 1205 0016 1340     		ands	r3, r2
 1206 0018 FB60     		str	r3, [r7, #12]
2336:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2337:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 1207              		.loc 1 2337 0
 1208 001a 044B     		ldr	r3, .L73
 1209 001c 7A68     		ldr	r2, [r7, #4]
 1210 001e 1A60     		str	r2, [r3]
2338:Generated_Source\PSoC4/CyLib.c **** 
2339:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 1211              		.loc 1 2339 0
 1212 0020 FB68     		ldr	r3, [r7, #12]
2340:Generated_Source\PSoC4/CyLib.c **** }
 1213              		.loc 1 2340 0
 1214 0022 1800     		movs	r0, r3
 1215 0024 BD46     		mov	sp, r7
 1216 0026 04B0     		add	sp, sp, #16
 1217              		@ sp needed
 1218 0028 80BD     		pop	{r7, pc}
 1219              	.L74:
 1220 002a C046     		.align	2
 1221              	.L73:
 1222 002c 00030B40 		.word	1074463488
 1223              		.cfi_endproc
 1224              	.LFE17:
 1225              		.size	CySysGetResetReason, .-CySysGetResetReason
 1226              		.section	.text.CyDisableInts,"ax",%progbits
 1227              		.align	2
 1228              		.global	CyDisableInts
 1229              		.code	16
 1230              		.thumb_func
 1231              		.type	CyDisableInts, %function
 1232              	CyDisableInts:
 1233              	.LFB18:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c **** 
2343:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2344:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 64


2345:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2346:Generated_Source\PSoC4/CyLib.c **** *
2347:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2348:Generated_Source\PSoC4/CyLib.c **** *
2349:Generated_Source\PSoC4/CyLib.c **** * \return
2350:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2351:Generated_Source\PSoC4/CyLib.c **** *
2352:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2353:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2354:Generated_Source\PSoC4/CyLib.c **** {
 1234              		.loc 1 2354 0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 8
 1237              		@ frame_needed = 1, uses_anonymous_args = 0
 1238 0000 80B5     		push	{r7, lr}
 1239              		.cfi_def_cfa_offset 8
 1240              		.cfi_offset 7, -8
 1241              		.cfi_offset 14, -4
 1242 0002 82B0     		sub	sp, sp, #8
 1243              		.cfi_def_cfa_offset 16
 1244 0004 00AF     		add	r7, sp, #0
 1245              		.cfi_def_cfa_register 7
2355:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2356:Generated_Source\PSoC4/CyLib.c **** 
2357:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2358:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 1246              		.loc 1 2358 0
 1247 0006 064B     		ldr	r3, .L77
 1248 0008 1B68     		ldr	r3, [r3]
 1249 000a 7B60     		str	r3, [r7, #4]
2359:Generated_Source\PSoC4/CyLib.c **** 
2360:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2361:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 1250              		.loc 1 2361 0
 1251 000c 044B     		ldr	r3, .L77
 1252 000e 0122     		movs	r2, #1
 1253 0010 5242     		rsbs	r2, r2, #0
 1254 0012 1A60     		str	r2, [r3]
2362:Generated_Source\PSoC4/CyLib.c **** 
2363:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 1255              		.loc 1 2363 0
 1256 0014 7B68     		ldr	r3, [r7, #4]
2364:Generated_Source\PSoC4/CyLib.c **** }
 1257              		.loc 1 2364 0
 1258 0016 1800     		movs	r0, r3
 1259 0018 BD46     		mov	sp, r7
 1260 001a 02B0     		add	sp, sp, #8
 1261              		@ sp needed
 1262 001c 80BD     		pop	{r7, pc}
 1263              	.L78:
 1264 001e C046     		.align	2
 1265              	.L77:
 1266 0020 80E100E0 		.word	-536813184
 1267              		.cfi_endproc
 1268              	.LFE18:
 1269              		.size	CyDisableInts, .-CyDisableInts
 1270              		.section	.text.CyEnableInts,"ax",%progbits
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 65


 1271              		.align	2
 1272              		.global	CyEnableInts
 1273              		.code	16
 1274              		.thumb_func
 1275              		.type	CyEnableInts, %function
 1276              	CyEnableInts:
 1277              	.LFB19:
2365:Generated_Source\PSoC4/CyLib.c **** 
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2368:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2369:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2370:Generated_Source\PSoC4/CyLib.c **** *
2371:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2372:Generated_Source\PSoC4/CyLib.c **** *
2373:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2374:Generated_Source\PSoC4/CyLib.c **** *
2375:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2376:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2377:Generated_Source\PSoC4/CyLib.c **** {
 1278              		.loc 1 2377 0
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 8
 1281              		@ frame_needed = 1, uses_anonymous_args = 0
 1282 0000 80B5     		push	{r7, lr}
 1283              		.cfi_def_cfa_offset 8
 1284              		.cfi_offset 7, -8
 1285              		.cfi_offset 14, -4
 1286 0002 82B0     		sub	sp, sp, #8
 1287              		.cfi_def_cfa_offset 16
 1288 0004 00AF     		add	r7, sp, #0
 1289              		.cfi_def_cfa_register 7
 1290 0006 7860     		str	r0, [r7, #4]
2378:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1291              		.loc 1 2378 0
 1292 0008 034B     		ldr	r3, .L80
 1293 000a 7A68     		ldr	r2, [r7, #4]
 1294 000c 1A60     		str	r2, [r3]
2379:Generated_Source\PSoC4/CyLib.c **** }
 1295              		.loc 1 2379 0
 1296 000e C046     		nop
 1297 0010 BD46     		mov	sp, r7
 1298 0012 02B0     		add	sp, sp, #8
 1299              		@ sp needed
 1300 0014 80BD     		pop	{r7, pc}
 1301              	.L81:
 1302 0016 C046     		.align	2
 1303              	.L80:
 1304 0018 00E100E0 		.word	-536813312
 1305              		.cfi_endproc
 1306              	.LFE19:
 1307              		.size	CyEnableInts, .-CyEnableInts
 1308              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1309              		.align	2
 1310              		.global	CyIntSetSysVector
 1311              		.code	16
 1312              		.thumb_func
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 66


 1313              		.type	CyIntSetSysVector, %function
 1314              	CyIntSetSysVector:
 1315              	.LFB20:
2380:Generated_Source\PSoC4/CyLib.c **** 
2381:Generated_Source\PSoC4/CyLib.c **** 
2382:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2383:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2384:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2385:Generated_Source\PSoC4/CyLib.c **** *
2386:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2387:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2388:Generated_Source\PSoC4/CyLib.c **** *
2389:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2390:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2391:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2392:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2393:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2394:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2395:Generated_Source\PSoC4/CyLib.c **** *
2396:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2397:Generated_Source\PSoC4/CyLib.c **** *
2398:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2399:Generated_Source\PSoC4/CyLib.c **** *
2400:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2401:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2402:Generated_Source\PSoC4/CyLib.c **** {
 1316              		.loc 1 2402 0
 1317              		.cfi_startproc
 1318              		@ args = 0, pretend = 0, frame = 16
 1319              		@ frame_needed = 1, uses_anonymous_args = 0
 1320 0000 80B5     		push	{r7, lr}
 1321              		.cfi_def_cfa_offset 8
 1322              		.cfi_offset 7, -8
 1323              		.cfi_offset 14, -4
 1324 0002 84B0     		sub	sp, sp, #16
 1325              		.cfi_def_cfa_offset 24
 1326 0004 00AF     		add	r7, sp, #0
 1327              		.cfi_def_cfa_register 7
 1328 0006 0200     		movs	r2, r0
 1329 0008 3960     		str	r1, [r7]
 1330 000a FB1D     		adds	r3, r7, #7
 1331 000c 1A70     		strb	r2, [r3]
2403:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2404:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1332              		.loc 1 2404 0
 1333 000e 8023     		movs	r3, #128
 1334 0010 9B05     		lsls	r3, r3, #22
 1335 0012 FB60     		str	r3, [r7, #12]
2405:Generated_Source\PSoC4/CyLib.c **** 
2406:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1336              		.loc 1 2406 0
 1337 0014 FB1D     		adds	r3, r7, #7
 1338 0016 1B78     		ldrb	r3, [r3]
 1339 0018 0F2B     		cmp	r3, #15
 1340 001a 02D9     		bls	.L83
 1341              		.loc 1 2406 0 is_stmt 0 discriminator 1
 1342 001c 0020     		movs	r0, #0
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 67


 1343 001e FFF7FEFF 		bl	CyHalt
 1344              	.L83:
2407:Generated_Source\PSoC4/CyLib.c **** 
2408:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2409:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1345              		.loc 1 2409 0 is_stmt 1
 1346 0022 FB1D     		adds	r3, r7, #7
 1347 0024 1B78     		ldrb	r3, [r3]
 1348 0026 9B00     		lsls	r3, r3, #2
 1349 0028 FA68     		ldr	r2, [r7, #12]
 1350 002a D318     		adds	r3, r2, r3
 1351 002c 1B68     		ldr	r3, [r3]
 1352 002e BB60     		str	r3, [r7, #8]
2410:Generated_Source\PSoC4/CyLib.c **** 
2411:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2412:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1353              		.loc 1 2412 0
 1354 0030 FB1D     		adds	r3, r7, #7
 1355 0032 1B78     		ldrb	r3, [r3]
 1356 0034 9B00     		lsls	r3, r3, #2
 1357 0036 FA68     		ldr	r2, [r7, #12]
 1358 0038 D318     		adds	r3, r2, r3
 1359 003a 3A68     		ldr	r2, [r7]
 1360 003c 1A60     		str	r2, [r3]
2413:Generated_Source\PSoC4/CyLib.c **** 
2414:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1361              		.loc 1 2414 0
 1362 003e BB68     		ldr	r3, [r7, #8]
2415:Generated_Source\PSoC4/CyLib.c **** }
 1363              		.loc 1 2415 0
 1364 0040 1800     		movs	r0, r3
 1365 0042 BD46     		mov	sp, r7
 1366 0044 04B0     		add	sp, sp, #16
 1367              		@ sp needed
 1368 0046 80BD     		pop	{r7, pc}
 1369              		.cfi_endproc
 1370              	.LFE20:
 1371              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1372              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1373              		.align	2
 1374              		.global	CyIntGetSysVector
 1375              		.code	16
 1376              		.thumb_func
 1377              		.type	CyIntGetSysVector, %function
 1378              	CyIntGetSysVector:
 1379              	.LFB21:
2416:Generated_Source\PSoC4/CyLib.c **** 
2417:Generated_Source\PSoC4/CyLib.c **** 
2418:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2419:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2420:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2421:Generated_Source\PSoC4/CyLib.c **** *
2422:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2423:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2424:Generated_Source\PSoC4/CyLib.c **** *
2425:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2426:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 68


2427:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2428:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2429:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2430:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2435:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2436:Generated_Source\PSoC4/CyLib.c **** {
 1380              		.loc 1 2436 0
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 16
 1383              		@ frame_needed = 1, uses_anonymous_args = 0
 1384 0000 80B5     		push	{r7, lr}
 1385              		.cfi_def_cfa_offset 8
 1386              		.cfi_offset 7, -8
 1387              		.cfi_offset 14, -4
 1388 0002 84B0     		sub	sp, sp, #16
 1389              		.cfi_def_cfa_offset 24
 1390 0004 00AF     		add	r7, sp, #0
 1391              		.cfi_def_cfa_register 7
 1392 0006 0200     		movs	r2, r0
 1393 0008 FB1D     		adds	r3, r7, #7
 1394 000a 1A70     		strb	r2, [r3]
2437:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1395              		.loc 1 2437 0
 1396 000c 8023     		movs	r3, #128
 1397 000e 9B05     		lsls	r3, r3, #22
 1398 0010 FB60     		str	r3, [r7, #12]
2438:Generated_Source\PSoC4/CyLib.c **** 
2439:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1399              		.loc 1 2439 0
 1400 0012 FB1D     		adds	r3, r7, #7
 1401 0014 1B78     		ldrb	r3, [r3]
 1402 0016 0F2B     		cmp	r3, #15
 1403 0018 02D9     		bls	.L86
 1404              		.loc 1 2439 0 is_stmt 0 discriminator 1
 1405 001a 0020     		movs	r0, #0
 1406 001c FFF7FEFF 		bl	CyHalt
 1407              	.L86:
2440:Generated_Source\PSoC4/CyLib.c **** 
2441:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1408              		.loc 1 2441 0 is_stmt 1
 1409 0020 FB1D     		adds	r3, r7, #7
 1410 0022 1B78     		ldrb	r3, [r3]
 1411 0024 9B00     		lsls	r3, r3, #2
 1412 0026 FA68     		ldr	r2, [r7, #12]
 1413 0028 D318     		adds	r3, r2, r3
 1414 002a 1B68     		ldr	r3, [r3]
2442:Generated_Source\PSoC4/CyLib.c **** }
 1415              		.loc 1 2442 0
 1416 002c 1800     		movs	r0, r3
 1417 002e BD46     		mov	sp, r7
 1418 0030 04B0     		add	sp, sp, #16
 1419              		@ sp needed
 1420 0032 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 69


 1421              		.cfi_endproc
 1422              	.LFE21:
 1423              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1424              		.section	.text.CyIntSetVector,"ax",%progbits
 1425              		.align	2
 1426              		.global	CyIntSetVector
 1427              		.code	16
 1428              		.thumb_func
 1429              		.type	CyIntSetVector, %function
 1430              	CyIntSetVector:
 1431              	.LFB22:
2443:Generated_Source\PSoC4/CyLib.c **** 
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2446:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2447:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2452:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2455:Generated_Source\PSoC4/CyLib.c **** *
2456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2457:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2458:Generated_Source\PSoC4/CyLib.c **** {
 1432              		.loc 1 2458 0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 16
 1435              		@ frame_needed = 1, uses_anonymous_args = 0
 1436 0000 80B5     		push	{r7, lr}
 1437              		.cfi_def_cfa_offset 8
 1438              		.cfi_offset 7, -8
 1439              		.cfi_offset 14, -4
 1440 0002 84B0     		sub	sp, sp, #16
 1441              		.cfi_def_cfa_offset 24
 1442 0004 00AF     		add	r7, sp, #0
 1443              		.cfi_def_cfa_register 7
 1444 0006 0200     		movs	r2, r0
 1445 0008 3960     		str	r1, [r7]
 1446 000a FB1D     		adds	r3, r7, #7
 1447 000c 1A70     		strb	r2, [r3]
2459:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2460:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1448              		.loc 1 2460 0
 1449 000e 8023     		movs	r3, #128
 1450 0010 9B05     		lsls	r3, r3, #22
 1451 0012 FB60     		str	r3, [r7, #12]
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1452              		.loc 1 2462 0
 1453 0014 FB1D     		adds	r3, r7, #7
 1454 0016 1B78     		ldrb	r3, [r3]
 1455 0018 1F2B     		cmp	r3, #31
 1456 001a 02D9     		bls	.L89
 1457              		.loc 1 2462 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 70


 1458 001c 0020     		movs	r0, #0
 1459 001e FFF7FEFF 		bl	CyHalt
 1460              	.L89:
2463:Generated_Source\PSoC4/CyLib.c **** 
2464:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2465:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1461              		.loc 1 2465 0 is_stmt 1
 1462 0022 FB1D     		adds	r3, r7, #7
 1463 0024 1B78     		ldrb	r3, [r3]
 1464 0026 1033     		adds	r3, r3, #16
 1465 0028 9B00     		lsls	r3, r3, #2
 1466 002a FA68     		ldr	r2, [r7, #12]
 1467 002c D318     		adds	r3, r2, r3
 1468 002e 1B68     		ldr	r3, [r3]
 1469 0030 BB60     		str	r3, [r7, #8]
2466:Generated_Source\PSoC4/CyLib.c **** 
2467:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2468:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1470              		.loc 1 2468 0
 1471 0032 FB1D     		adds	r3, r7, #7
 1472 0034 1B78     		ldrb	r3, [r3]
 1473 0036 1033     		adds	r3, r3, #16
 1474 0038 9B00     		lsls	r3, r3, #2
 1475 003a FA68     		ldr	r2, [r7, #12]
 1476 003c D318     		adds	r3, r2, r3
 1477 003e 3A68     		ldr	r2, [r7]
 1478 0040 1A60     		str	r2, [r3]
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1479              		.loc 1 2470 0
 1480 0042 BB68     		ldr	r3, [r7, #8]
2471:Generated_Source\PSoC4/CyLib.c **** }
 1481              		.loc 1 2471 0
 1482 0044 1800     		movs	r0, r3
 1483 0046 BD46     		mov	sp, r7
 1484 0048 04B0     		add	sp, sp, #16
 1485              		@ sp needed
 1486 004a 80BD     		pop	{r7, pc}
 1487              		.cfi_endproc
 1488              	.LFE22:
 1489              		.size	CyIntSetVector, .-CyIntSetVector
 1490              		.section	.text.CyIntGetVector,"ax",%progbits
 1491              		.align	2
 1492              		.global	CyIntGetVector
 1493              		.code	16
 1494              		.thumb_func
 1495              		.type	CyIntGetVector, %function
 1496              	CyIntGetVector:
 1497              	.LFB23:
2472:Generated_Source\PSoC4/CyLib.c **** 
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2475:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2476:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2477:Generated_Source\PSoC4/CyLib.c **** *
2478:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2479:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 71


2480:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 1498              		.loc 1 2486 0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 16
 1501              		@ frame_needed = 1, uses_anonymous_args = 0
 1502 0000 80B5     		push	{r7, lr}
 1503              		.cfi_def_cfa_offset 8
 1504              		.cfi_offset 7, -8
 1505              		.cfi_offset 14, -4
 1506 0002 84B0     		sub	sp, sp, #16
 1507              		.cfi_def_cfa_offset 24
 1508 0004 00AF     		add	r7, sp, #0
 1509              		.cfi_def_cfa_register 7
 1510 0006 0200     		movs	r2, r0
 1511 0008 FB1D     		adds	r3, r7, #7
 1512 000a 1A70     		strb	r2, [r3]
2487:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1513              		.loc 1 2487 0
 1514 000c 8023     		movs	r3, #128
 1515 000e 9B05     		lsls	r3, r3, #22
 1516 0010 FB60     		str	r3, [r7, #12]
2488:Generated_Source\PSoC4/CyLib.c **** 
2489:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1517              		.loc 1 2489 0
 1518 0012 FB1D     		adds	r3, r7, #7
 1519 0014 1B78     		ldrb	r3, [r3]
 1520 0016 1F2B     		cmp	r3, #31
 1521 0018 02D9     		bls	.L92
 1522              		.loc 1 2489 0 is_stmt 0 discriminator 1
 1523 001a 0020     		movs	r0, #0
 1524 001c FFF7FEFF 		bl	CyHalt
 1525              	.L92:
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1526              		.loc 1 2491 0 is_stmt 1
 1527 0020 FB1D     		adds	r3, r7, #7
 1528 0022 1B78     		ldrb	r3, [r3]
 1529 0024 1033     		adds	r3, r3, #16
 1530 0026 9B00     		lsls	r3, r3, #2
 1531 0028 FA68     		ldr	r2, [r7, #12]
 1532 002a D318     		adds	r3, r2, r3
 1533 002c 1B68     		ldr	r3, [r3]
2492:Generated_Source\PSoC4/CyLib.c **** }
 1534              		.loc 1 2492 0
 1535 002e 1800     		movs	r0, r3
 1536 0030 BD46     		mov	sp, r7
 1537 0032 04B0     		add	sp, sp, #16
 1538              		@ sp needed
 1539 0034 80BD     		pop	{r7, pc}
 1540              		.cfi_endproc
 1541              	.LFE23:
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 72


 1542              		.size	CyIntGetVector, .-CyIntGetVector
 1543 0036 C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 1544              		.align	2
 1545              		.global	CyIntSetPriority
 1546              		.code	16
 1547              		.thumb_func
 1548              		.type	CyIntSetPriority, %function
 1549              	CyIntSetPriority:
 1550              	.LFB24:
2493:Generated_Source\PSoC4/CyLib.c **** 
2494:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2495:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2496:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2497:Generated_Source\PSoC4/CyLib.c **** *
2498:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2499:Generated_Source\PSoC4/CyLib.c **** *
2500:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2501:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2502:Generated_Source\PSoC4/CyLib.c **** *
2503:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2504:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2505:Generated_Source\PSoC4/CyLib.c **** {
 1551              		.loc 1 2505 0
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 24
 1554              		@ frame_needed = 1, uses_anonymous_args = 0
 1555 0000 90B5     		push	{r4, r7, lr}
 1556              		.cfi_def_cfa_offset 12
 1557              		.cfi_offset 4, -12
 1558              		.cfi_offset 7, -8
 1559              		.cfi_offset 14, -4
 1560 0002 87B0     		sub	sp, sp, #28
 1561              		.cfi_def_cfa_offset 40
 1562 0004 00AF     		add	r7, sp, #0
 1563              		.cfi_def_cfa_register 7
 1564 0006 0200     		movs	r2, r0
 1565 0008 FB1D     		adds	r3, r7, #7
 1566 000a 1A70     		strb	r2, [r3]
 1567 000c BB1D     		adds	r3, r7, #6
 1568 000e 0A1C     		adds	r2, r1, #0
 1569 0010 1A70     		strb	r2, [r3]
2506:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2507:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2508:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2509:Generated_Source\PSoC4/CyLib.c **** 
2510:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1570              		.loc 1 2510 0
 1571 0012 BB1D     		adds	r3, r7, #6
 1572 0014 1B78     		ldrb	r3, [r3]
 1573 0016 032B     		cmp	r3, #3
 1574 0018 02D9     		bls	.L95
 1575              		.loc 1 2510 0 is_stmt 0 discriminator 1
 1576 001a 0020     		movs	r0, #0
 1577 001c FFF7FEFF 		bl	CyHalt
 1578              	.L95:
2511:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1579              		.loc 1 2511 0 is_stmt 1
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 73


 1580 0020 FB1D     		adds	r3, r7, #7
 1581 0022 1B78     		ldrb	r3, [r3]
 1582 0024 1F2B     		cmp	r3, #31
 1583 0026 02D9     		bls	.L96
 1584              		.loc 1 2511 0 is_stmt 0 discriminator 1
 1585 0028 0020     		movs	r0, #0
 1586 002a FFF7FEFF 		bl	CyHalt
 1587              	.L96:
2512:Generated_Source\PSoC4/CyLib.c **** 
2513:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1588              		.loc 1 2513 0 is_stmt 1
 1589 002e FB1D     		adds	r3, r7, #7
 1590 0030 1B78     		ldrb	r3, [r3]
 1591 0032 0322     		movs	r2, #3
 1592 0034 1340     		ands	r3, r2
 1593 0036 DB00     		lsls	r3, r3, #3
 1594 0038 0633     		adds	r3, r3, #6
 1595 003a 7B61     		str	r3, [r7, #20]
2514:Generated_Source\PSoC4/CyLib.c **** 
2515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1596              		.loc 1 2515 0
 1597 003c 1323     		movs	r3, #19
 1598 003e FC18     		adds	r4, r7, r3
 1599 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1600 0044 0300     		movs	r3, r0
 1601 0046 2370     		strb	r3, [r4]
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1602              		.loc 1 2517 0
 1603 0048 FB1D     		adds	r3, r7, #7
 1604 004a 1B78     		ldrb	r3, [r3]
 1605 004c 9B08     		lsrs	r3, r3, #2
 1606 004e DBB2     		uxtb	r3, r3
 1607 0050 9B00     		lsls	r3, r3, #2
 1608 0052 144A     		ldr	r2, .L97
 1609 0054 9446     		mov	ip, r2
 1610 0056 6344     		add	r3, r3, ip
 1611 0058 1B68     		ldr	r3, [r3]
 1612 005a FB60     		str	r3, [r7, #12]
2518:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1613              		.loc 1 2518 0
 1614 005c 0322     		movs	r2, #3
 1615 005e 7B69     		ldr	r3, [r7, #20]
 1616 0060 9A40     		lsls	r2, r2, r3
 1617 0062 1300     		movs	r3, r2
 1618 0064 DA43     		mvns	r2, r3
 1619 0066 FB68     		ldr	r3, [r7, #12]
 1620 0068 1340     		ands	r3, r2
 1621 006a FB60     		str	r3, [r7, #12]
2519:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1622              		.loc 1 2519 0
 1623 006c BB1D     		adds	r3, r7, #6
 1624 006e 1A78     		ldrb	r2, [r3]
 1625 0070 7B69     		ldr	r3, [r7, #20]
 1626 0072 9A40     		lsls	r2, r2, r3
 1627 0074 1300     		movs	r3, r2
 1628 0076 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 74


 1629 0078 1343     		orrs	r3, r2
 1630 007a FB60     		str	r3, [r7, #12]
2520:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1631              		.loc 1 2520 0
 1632 007c FB1D     		adds	r3, r7, #7
 1633 007e 1B78     		ldrb	r3, [r3]
 1634 0080 9B08     		lsrs	r3, r3, #2
 1635 0082 DBB2     		uxtb	r3, r3
 1636 0084 9B00     		lsls	r3, r3, #2
 1637 0086 074A     		ldr	r2, .L97
 1638 0088 9446     		mov	ip, r2
 1639 008a 6344     		add	r3, r3, ip
 1640 008c FA68     		ldr	r2, [r7, #12]
 1641 008e 1A60     		str	r2, [r3]
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1642              		.loc 1 2522 0
 1643 0090 1323     		movs	r3, #19
 1644 0092 FB18     		adds	r3, r7, r3
 1645 0094 1B78     		ldrb	r3, [r3]
 1646 0096 1800     		movs	r0, r3
 1647 0098 FFF7FEFF 		bl	CyExitCriticalSection
2523:Generated_Source\PSoC4/CyLib.c **** }
 1648              		.loc 1 2523 0
 1649 009c C046     		nop
 1650 009e BD46     		mov	sp, r7
 1651 00a0 07B0     		add	sp, sp, #28
 1652              		@ sp needed
 1653 00a2 90BD     		pop	{r4, r7, pc}
 1654              	.L98:
 1655              		.align	2
 1656              	.L97:
 1657 00a4 00E400E0 		.word	-536812544
 1658              		.cfi_endproc
 1659              	.LFE24:
 1660              		.size	CyIntSetPriority, .-CyIntSetPriority
 1661              		.section	.text.CyIntGetPriority,"ax",%progbits
 1662              		.align	2
 1663              		.global	CyIntGetPriority
 1664              		.code	16
 1665              		.thumb_func
 1666              		.type	CyIntGetPriority, %function
 1667              	CyIntGetPriority:
 1668              	.LFB25:
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c **** 
2526:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2527:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2528:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2529:Generated_Source\PSoC4/CyLib.c **** *
2530:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2531:Generated_Source\PSoC4/CyLib.c **** *
2532:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2533:Generated_Source\PSoC4/CyLib.c **** *
2534:Generated_Source\PSoC4/CyLib.c **** * \return
2535:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2536:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 75


2537:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2538:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2539:Generated_Source\PSoC4/CyLib.c **** {
 1669              		.loc 1 2539 0
 1670              		.cfi_startproc
 1671              		@ args = 0, pretend = 0, frame = 16
 1672              		@ frame_needed = 1, uses_anonymous_args = 0
 1673 0000 80B5     		push	{r7, lr}
 1674              		.cfi_def_cfa_offset 8
 1675              		.cfi_offset 7, -8
 1676              		.cfi_offset 14, -4
 1677 0002 84B0     		sub	sp, sp, #16
 1678              		.cfi_def_cfa_offset 24
 1679 0004 00AF     		add	r7, sp, #0
 1680              		.cfi_def_cfa_register 7
 1681 0006 0200     		movs	r2, r0
 1682 0008 FB1D     		adds	r3, r7, #7
 1683 000a 1A70     		strb	r2, [r3]
2540:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2541:Generated_Source\PSoC4/CyLib.c **** 
2542:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1684              		.loc 1 2542 0
 1685 000c FB1D     		adds	r3, r7, #7
 1686 000e 1B78     		ldrb	r3, [r3]
 1687 0010 1F2B     		cmp	r3, #31
 1688 0012 02D9     		bls	.L100
 1689              		.loc 1 2542 0 is_stmt 0 discriminator 1
 1690 0014 0020     		movs	r0, #0
 1691 0016 FFF7FEFF 		bl	CyHalt
 1692              	.L100:
2543:Generated_Source\PSoC4/CyLib.c **** 
2544:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1693              		.loc 1 2544 0 is_stmt 1
 1694 001a FB1D     		adds	r3, r7, #7
 1695 001c 1B78     		ldrb	r3, [r3]
 1696 001e 9B08     		lsrs	r3, r3, #2
 1697 0020 DBB2     		uxtb	r3, r3
 1698 0022 9B00     		lsls	r3, r3, #2
 1699 0024 0B4A     		ldr	r2, .L102
 1700 0026 9446     		mov	ip, r2
 1701 0028 6344     		add	r3, r3, ip
 1702 002a 1A68     		ldr	r2, [r3]
 1703 002c FB1D     		adds	r3, r7, #7
 1704 002e 1B78     		ldrb	r3, [r3]
 1705 0030 0321     		movs	r1, #3
 1706 0032 0B40     		ands	r3, r1
 1707 0034 DB00     		lsls	r3, r3, #3
 1708 0036 0633     		adds	r3, r3, #6
 1709 0038 DA40     		lsrs	r2, r2, r3
 1710 003a 0F23     		movs	r3, #15
 1711 003c FB18     		adds	r3, r7, r3
 1712 003e 1A70     		strb	r2, [r3]
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1713              		.loc 1 2546 0
 1714 0040 0F23     		movs	r3, #15
 1715 0042 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 76


 1716 0044 1B78     		ldrb	r3, [r3]
 1717 0046 0322     		movs	r2, #3
 1718 0048 1340     		ands	r3, r2
 1719 004a DBB2     		uxtb	r3, r3
2547:Generated_Source\PSoC4/CyLib.c **** }
 1720              		.loc 1 2547 0
 1721 004c 1800     		movs	r0, r3
 1722 004e BD46     		mov	sp, r7
 1723 0050 04B0     		add	sp, sp, #16
 1724              		@ sp needed
 1725 0052 80BD     		pop	{r7, pc}
 1726              	.L103:
 1727              		.align	2
 1728              	.L102:
 1729 0054 00E400E0 		.word	-536812544
 1730              		.cfi_endproc
 1731              	.LFE25:
 1732              		.size	CyIntGetPriority, .-CyIntGetPriority
 1733              		.section	.text.CyIntEnable,"ax",%progbits
 1734              		.align	2
 1735              		.global	CyIntEnable
 1736              		.code	16
 1737              		.thumb_func
 1738              		.type	CyIntEnable, %function
 1739              	CyIntEnable:
 1740              	.LFB26:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1741              		.loc 1 2560 0
 1742              		.cfi_startproc
 1743              		@ args = 0, pretend = 0, frame = 8
 1744              		@ frame_needed = 1, uses_anonymous_args = 0
 1745 0000 80B5     		push	{r7, lr}
 1746              		.cfi_def_cfa_offset 8
 1747              		.cfi_offset 7, -8
 1748              		.cfi_offset 14, -4
 1749 0002 82B0     		sub	sp, sp, #8
 1750              		.cfi_def_cfa_offset 16
 1751 0004 00AF     		add	r7, sp, #0
 1752              		.cfi_def_cfa_register 7
 1753 0006 0200     		movs	r2, r0
 1754 0008 FB1D     		adds	r3, r7, #7
 1755 000a 1A70     		strb	r2, [r3]
2561:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1756              		.loc 1 2561 0
 1757 000c 064B     		ldr	r3, .L105
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 77


 1758 000e FA1D     		adds	r2, r7, #7
 1759 0010 1278     		ldrb	r2, [r2]
 1760 0012 1F21     		movs	r1, #31
 1761 0014 0A40     		ands	r2, r1
 1762 0016 0121     		movs	r1, #1
 1763 0018 9140     		lsls	r1, r1, r2
 1764 001a 0A00     		movs	r2, r1
 1765 001c 1A60     		str	r2, [r3]
2562:Generated_Source\PSoC4/CyLib.c **** }
 1766              		.loc 1 2562 0
 1767 001e C046     		nop
 1768 0020 BD46     		mov	sp, r7
 1769 0022 02B0     		add	sp, sp, #8
 1770              		@ sp needed
 1771 0024 80BD     		pop	{r7, pc}
 1772              	.L106:
 1773 0026 C046     		.align	2
 1774              	.L105:
 1775 0028 00E100E0 		.word	-536813312
 1776              		.cfi_endproc
 1777              	.LFE26:
 1778              		.size	CyIntEnable, .-CyIntEnable
 1779              		.section	.text.CyIntGetState,"ax",%progbits
 1780              		.align	2
 1781              		.global	CyIntGetState
 1782              		.code	16
 1783              		.thumb_func
 1784              		.type	CyIntGetState, %function
 1785              	CyIntGetState:
 1786              	.LFB27:
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c **** 
2565:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2566:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2567:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2568:Generated_Source\PSoC4/CyLib.c **** *
2569:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2570:Generated_Source\PSoC4/CyLib.c **** *
2571:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2572:Generated_Source\PSoC4/CyLib.c **** *
2573:Generated_Source\PSoC4/CyLib.c **** * \return
2574:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2575:Generated_Source\PSoC4/CyLib.c **** *
2576:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2577:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2578:Generated_Source\PSoC4/CyLib.c **** {
 1787              		.loc 1 2578 0
 1788              		.cfi_startproc
 1789              		@ args = 0, pretend = 0, frame = 8
 1790              		@ frame_needed = 1, uses_anonymous_args = 0
 1791 0000 80B5     		push	{r7, lr}
 1792              		.cfi_def_cfa_offset 8
 1793              		.cfi_offset 7, -8
 1794              		.cfi_offset 14, -4
 1795 0002 82B0     		sub	sp, sp, #8
 1796              		.cfi_def_cfa_offset 16
 1797 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 78


 1798              		.cfi_def_cfa_register 7
 1799 0006 0200     		movs	r2, r0
 1800 0008 FB1D     		adds	r3, r7, #7
 1801 000a 1A70     		strb	r2, [r3]
2579:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2580:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1802              		.loc 1 2580 0
 1803 000c 074B     		ldr	r3, .L109
 1804 000e 1A68     		ldr	r2, [r3]
 1805 0010 FB1D     		adds	r3, r7, #7
 1806 0012 1B78     		ldrb	r3, [r3]
 1807 0014 1F21     		movs	r1, #31
 1808 0016 0B40     		ands	r3, r1
 1809 0018 DA40     		lsrs	r2, r2, r3
 1810 001a 1300     		movs	r3, r2
 1811 001c DBB2     		uxtb	r3, r3
 1812 001e 0122     		movs	r2, #1
 1813 0020 1340     		ands	r3, r2
 1814 0022 DBB2     		uxtb	r3, r3
2581:Generated_Source\PSoC4/CyLib.c **** }
 1815              		.loc 1 2581 0
 1816 0024 1800     		movs	r0, r3
 1817 0026 BD46     		mov	sp, r7
 1818 0028 02B0     		add	sp, sp, #8
 1819              		@ sp needed
 1820 002a 80BD     		pop	{r7, pc}
 1821              	.L110:
 1822              		.align	2
 1823              	.L109:
 1824 002c 00E100E0 		.word	-536813312
 1825              		.cfi_endproc
 1826              	.LFE27:
 1827              		.size	CyIntGetState, .-CyIntGetState
 1828              		.section	.text.CyIntDisable,"ax",%progbits
 1829              		.align	2
 1830              		.global	CyIntDisable
 1831              		.code	16
 1832              		.thumb_func
 1833              		.type	CyIntDisable, %function
 1834              	CyIntDisable:
 1835              	.LFB28:
2582:Generated_Source\PSoC4/CyLib.c **** 
2583:Generated_Source\PSoC4/CyLib.c **** 
2584:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2585:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2586:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2587:Generated_Source\PSoC4/CyLib.c **** *
2588:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2589:Generated_Source\PSoC4/CyLib.c **** *
2590:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2591:Generated_Source\PSoC4/CyLib.c **** *
2592:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2593:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2594:Generated_Source\PSoC4/CyLib.c **** {
 1836              		.loc 1 2594 0
 1837              		.cfi_startproc
 1838              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 79


 1839              		@ frame_needed = 1, uses_anonymous_args = 0
 1840 0000 80B5     		push	{r7, lr}
 1841              		.cfi_def_cfa_offset 8
 1842              		.cfi_offset 7, -8
 1843              		.cfi_offset 14, -4
 1844 0002 82B0     		sub	sp, sp, #8
 1845              		.cfi_def_cfa_offset 16
 1846 0004 00AF     		add	r7, sp, #0
 1847              		.cfi_def_cfa_register 7
 1848 0006 0200     		movs	r2, r0
 1849 0008 FB1D     		adds	r3, r7, #7
 1850 000a 1A70     		strb	r2, [r3]
2595:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1851              		.loc 1 2595 0
 1852 000c 064B     		ldr	r3, .L112
 1853 000e FA1D     		adds	r2, r7, #7
 1854 0010 1278     		ldrb	r2, [r2]
 1855 0012 1F21     		movs	r1, #31
 1856 0014 0A40     		ands	r2, r1
 1857 0016 0121     		movs	r1, #1
 1858 0018 9140     		lsls	r1, r1, r2
 1859 001a 0A00     		movs	r2, r1
 1860 001c 1A60     		str	r2, [r3]
2596:Generated_Source\PSoC4/CyLib.c **** }
 1861              		.loc 1 2596 0
 1862 001e C046     		nop
 1863 0020 BD46     		mov	sp, r7
 1864 0022 02B0     		add	sp, sp, #8
 1865              		@ sp needed
 1866 0024 80BD     		pop	{r7, pc}
 1867              	.L113:
 1868 0026 C046     		.align	2
 1869              	.L112:
 1870 0028 80E100E0 		.word	-536813184
 1871              		.cfi_endproc
 1872              	.LFE28:
 1873              		.size	CyIntDisable, .-CyIntDisable
 1874              		.section	.text.CyIntSetPending,"ax",%progbits
 1875              		.align	2
 1876              		.global	CyIntSetPending
 1877              		.code	16
 1878              		.thumb_func
 1879              		.type	CyIntSetPending, %function
 1880              	CyIntSetPending:
 1881              	.LFB29:
2597:Generated_Source\PSoC4/CyLib.c **** 
2598:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2599:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2600:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2603:Generated_Source\PSoC4/CyLib.c **** *
2604:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2605:Generated_Source\PSoC4/CyLib.c **** *
2606:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2607:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2608:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 80


 1882              		.loc 1 2608 0
 1883              		.cfi_startproc
 1884              		@ args = 0, pretend = 0, frame = 8
 1885              		@ frame_needed = 1, uses_anonymous_args = 0
 1886 0000 80B5     		push	{r7, lr}
 1887              		.cfi_def_cfa_offset 8
 1888              		.cfi_offset 7, -8
 1889              		.cfi_offset 14, -4
 1890 0002 82B0     		sub	sp, sp, #8
 1891              		.cfi_def_cfa_offset 16
 1892 0004 00AF     		add	r7, sp, #0
 1893              		.cfi_def_cfa_register 7
 1894 0006 0200     		movs	r2, r0
 1895 0008 FB1D     		adds	r3, r7, #7
 1896 000a 1A70     		strb	r2, [r3]
2609:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1897              		.loc 1 2609 0
 1898 000c 064B     		ldr	r3, .L115
 1899 000e FA1D     		adds	r2, r7, #7
 1900 0010 1278     		ldrb	r2, [r2]
 1901 0012 1F21     		movs	r1, #31
 1902 0014 0A40     		ands	r2, r1
 1903 0016 0121     		movs	r1, #1
 1904 0018 9140     		lsls	r1, r1, r2
 1905 001a 0A00     		movs	r2, r1
 1906 001c 1A60     		str	r2, [r3]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1907              		.loc 1 2610 0
 1908 001e C046     		nop
 1909 0020 BD46     		mov	sp, r7
 1910 0022 02B0     		add	sp, sp, #8
 1911              		@ sp needed
 1912 0024 80BD     		pop	{r7, pc}
 1913              	.L116:
 1914 0026 C046     		.align	2
 1915              	.L115:
 1916 0028 00E200E0 		.word	-536813056
 1917              		.cfi_endproc
 1918              	.LFE29:
 1919              		.size	CyIntSetPending, .-CyIntSetPending
 1920              		.section	.text.CyIntClearPending,"ax",%progbits
 1921              		.align	2
 1922              		.global	CyIntClearPending
 1923              		.code	16
 1924              		.thumb_func
 1925              		.type	CyIntClearPending, %function
 1926              	CyIntClearPending:
 1927              	.LFB30:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2618:Generated_Source\PSoC4/CyLib.c **** *
2619:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 81


2620:Generated_Source\PSoC4/CyLib.c **** *
2621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2622:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2623:Generated_Source\PSoC4/CyLib.c **** {
 1928              		.loc 1 2623 0
 1929              		.cfi_startproc
 1930              		@ args = 0, pretend = 0, frame = 8
 1931              		@ frame_needed = 1, uses_anonymous_args = 0
 1932 0000 80B5     		push	{r7, lr}
 1933              		.cfi_def_cfa_offset 8
 1934              		.cfi_offset 7, -8
 1935              		.cfi_offset 14, -4
 1936 0002 82B0     		sub	sp, sp, #8
 1937              		.cfi_def_cfa_offset 16
 1938 0004 00AF     		add	r7, sp, #0
 1939              		.cfi_def_cfa_register 7
 1940 0006 0200     		movs	r2, r0
 1941 0008 FB1D     		adds	r3, r7, #7
 1942 000a 1A70     		strb	r2, [r3]
2624:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1943              		.loc 1 2624 0
 1944 000c 064B     		ldr	r3, .L118
 1945 000e FA1D     		adds	r2, r7, #7
 1946 0010 1278     		ldrb	r2, [r2]
 1947 0012 1F21     		movs	r1, #31
 1948 0014 0A40     		ands	r2, r1
 1949 0016 0121     		movs	r1, #1
 1950 0018 9140     		lsls	r1, r1, r2
 1951 001a 0A00     		movs	r2, r1
 1952 001c 1A60     		str	r2, [r3]
2625:Generated_Source\PSoC4/CyLib.c **** }
 1953              		.loc 1 2625 0
 1954 001e C046     		nop
 1955 0020 BD46     		mov	sp, r7
 1956 0022 02B0     		add	sp, sp, #8
 1957              		@ sp needed
 1958 0024 80BD     		pop	{r7, pc}
 1959              	.L119:
 1960 0026 C046     		.align	2
 1961              	.L118:
 1962 0028 80E200E0 		.word	-536812928
 1963              		.cfi_endproc
 1964              	.LFE30:
 1965              		.size	CyIntClearPending, .-CyIntClearPending
 1966              		.section	.text.CyHalt,"ax",%progbits
 1967              		.align	2
 1968              		.global	CyHalt
 1969              		.code	16
 1970              		.thumb_func
 1971              		.type	CyHalt, %function
 1972              	CyHalt:
 1973              	.LFB31:
2626:Generated_Source\PSoC4/CyLib.c **** 
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2629:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2630:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 82


2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2633:Generated_Source\PSoC4/CyLib.c **** *
2634:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2635:Generated_Source\PSoC4/CyLib.c **** *
2636:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2638:Generated_Source\PSoC4/CyLib.c **** {
 1974              		.loc 1 2638 0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 8
 1977              		@ frame_needed = 1, uses_anonymous_args = 0
 1978 0000 80B5     		push	{r7, lr}
 1979              		.cfi_def_cfa_offset 8
 1980              		.cfi_offset 7, -8
 1981              		.cfi_offset 14, -4
 1982 0002 82B0     		sub	sp, sp, #8
 1983              		.cfi_def_cfa_offset 16
 1984 0004 00AF     		add	r7, sp, #0
 1985              		.cfi_def_cfa_register 7
 1986 0006 0200     		movs	r2, r0
 1987 0008 FB1D     		adds	r3, r7, #7
 1988 000a 1A70     		strb	r2, [r3]
2639:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2640:Generated_Source\PSoC4/CyLib.c ****     {
2641:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2642:Generated_Source\PSoC4/CyLib.c ****     }
2643:Generated_Source\PSoC4/CyLib.c **** 
2644:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2645:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2646:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2647:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1989              		.loc 1 2647 0
 1990              		.syntax divided
 1991              	@ 2647 "Generated_Source\PSoC4\CyLib.c" 1
 1992 000c 01BE     		    bkpt    1
 1993              	@ 0 "" 2
2648:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2649:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2650:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2651:Generated_Source\PSoC4/CyLib.c **** }
 1994              		.loc 1 2651 0
 1995              		.thumb
 1996              		.syntax unified
 1997 000e C046     		nop
 1998 0010 BD46     		mov	sp, r7
 1999 0012 02B0     		add	sp, sp, #8
 2000              		@ sp needed
 2001 0014 80BD     		pop	{r7, pc}
 2002              		.cfi_endproc
 2003              	.LFE31:
 2004              		.size	CyHalt, .-CyHalt
 2005 0016 C046     		.section	.text.CySoftwareReset,"ax",%progbits
 2006              		.align	2
 2007              		.global	CySoftwareReset
 2008              		.code	16
 2009              		.thumb_func
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 83


 2010              		.type	CySoftwareReset, %function
 2011              	CySoftwareReset:
 2012              	.LFB32:
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c **** 
2654:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2655:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2656:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2657:Generated_Source\PSoC4/CyLib.c **** *
2658:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2659:Generated_Source\PSoC4/CyLib.c **** *
2660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2661:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2662:Generated_Source\PSoC4/CyLib.c **** {
 2013              		.loc 1 2662 0
 2014              		.cfi_startproc
 2015              		@ args = 0, pretend = 0, frame = 0
 2016              		@ frame_needed = 1, uses_anonymous_args = 0
 2017 0000 80B5     		push	{r7, lr}
 2018              		.cfi_def_cfa_offset 8
 2019              		.cfi_offset 7, -8
 2020              		.cfi_offset 14, -4
 2021 0002 00AF     		add	r7, sp, #0
 2022              		.cfi_def_cfa_register 7
2663:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2664:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2665:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2666:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2667:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 2023              		.loc 1 2667 0
 2024 0004 054B     		ldr	r3, .L122
 2025 0006 054A     		ldr	r2, .L122
 2026 0008 1268     		ldr	r2, [r2]
 2027 000a 1204     		lsls	r2, r2, #16
 2028 000c 120C     		lsrs	r2, r2, #16
2668:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 2029              		.loc 1 2668 0
 2030 000e 0449     		ldr	r1, .L122+4
 2031 0010 0A43     		orrs	r2, r1
2667:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 2032              		.loc 1 2667 0
 2033 0012 1A60     		str	r2, [r3]
2669:Generated_Source\PSoC4/CyLib.c **** }
 2034              		.loc 1 2669 0
 2035 0014 C046     		nop
 2036 0016 BD46     		mov	sp, r7
 2037              		@ sp needed
 2038 0018 80BD     		pop	{r7, pc}
 2039              	.L123:
 2040 001a C046     		.align	2
 2041              	.L122:
 2042 001c 0CED00E0 		.word	-536810228
 2043 0020 0400FA05 		.word	100270084
 2044              		.cfi_endproc
 2045              	.LFE32:
 2046              		.size	CySoftwareReset, .-CySoftwareReset
 2047              		.section	.text.CyDelay,"ax",%progbits
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 84


 2048              		.align	2
 2049              		.global	CyDelay
 2050              		.code	16
 2051              		.thumb_func
 2052              		.type	CyDelay, %function
 2053              	CyDelay:
 2054              	.LFB33:
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2673:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2674:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2675:Generated_Source\PSoC4/CyLib.c **** *
2676:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2677:Generated_Source\PSoC4/CyLib.c **** *
2678:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2679:Generated_Source\PSoC4/CyLib.c **** *
2680:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2681:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2682:Generated_Source\PSoC4/CyLib.c **** {
 2055              		.loc 1 2682 0
 2056              		.cfi_startproc
 2057              		@ args = 0, pretend = 0, frame = 8
 2058              		@ frame_needed = 1, uses_anonymous_args = 0
 2059 0000 80B5     		push	{r7, lr}
 2060              		.cfi_def_cfa_offset 8
 2061              		.cfi_offset 7, -8
 2062              		.cfi_offset 14, -4
 2063 0002 82B0     		sub	sp, sp, #8
 2064              		.cfi_def_cfa_offset 16
 2065 0004 00AF     		add	r7, sp, #0
 2066              		.cfi_def_cfa_register 7
 2067 0006 7860     		str	r0, [r7, #4]
2683:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 2068              		.loc 1 2683 0
 2069 0008 09E0     		b	.L125
 2070              	.L126:
2684:Generated_Source\PSoC4/CyLib.c ****     {
2685:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2686:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2687:Generated_Source\PSoC4/CyLib.c ****          */
2688:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 2071              		.loc 1 2688 0
 2072 000a 0D4B     		ldr	r3, .L127
 2073 000c 1B68     		ldr	r3, [r3]
 2074 000e 1800     		movs	r0, r3
 2075 0010 FFF7FEFF 		bl	CyDelayCycles
2689:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 2076              		.loc 1 2689 0
 2077 0014 7B68     		ldr	r3, [r7, #4]
 2078 0016 0B4A     		ldr	r2, .L127+4
 2079 0018 9446     		mov	ip, r2
 2080 001a 6344     		add	r3, r3, ip
 2081 001c 7B60     		str	r3, [r7, #4]
 2082              	.L125:
2683:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 2083              		.loc 1 2683 0
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 85


 2084 001e 7A68     		ldr	r2, [r7, #4]
 2085 0020 8023     		movs	r3, #128
 2086 0022 1B02     		lsls	r3, r3, #8
 2087 0024 9A42     		cmp	r2, r3
 2088 0026 F0D8     		bhi	.L126
2690:Generated_Source\PSoC4/CyLib.c ****     }
2691:Generated_Source\PSoC4/CyLib.c **** 
2692:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 2089              		.loc 1 2692 0
 2090 0028 074B     		ldr	r3, .L127+8
 2091 002a 1B68     		ldr	r3, [r3]
 2092 002c 7A68     		ldr	r2, [r7, #4]
 2093 002e 5343     		muls	r3, r2
 2094 0030 1800     		movs	r0, r3
 2095 0032 FFF7FEFF 		bl	CyDelayCycles
2693:Generated_Source\PSoC4/CyLib.c **** }
 2096              		.loc 1 2693 0
 2097 0036 C046     		nop
 2098 0038 BD46     		mov	sp, r7
 2099 003a 02B0     		add	sp, sp, #8
 2100              		@ sp needed
 2101 003c 80BD     		pop	{r7, pc}
 2102              	.L128:
 2103 003e C046     		.align	2
 2104              	.L127:
 2105 0040 00000000 		.word	cydelay32kMs
 2106 0044 0080FFFF 		.word	-32768
 2107 0048 00000000 		.word	cydelayFreqKhz
 2108              		.cfi_endproc
 2109              	.LFE33:
 2110              		.size	CyDelay, .-CyDelay
 2111              		.section	.text.CyDelayUs,"ax",%progbits
 2112              		.align	2
 2113              		.global	CyDelayUs
 2114              		.code	16
 2115              		.thumb_func
 2116              		.type	CyDelayUs, %function
 2117              	CyDelayUs:
 2118              	.LFB34:
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** 
2696:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2697:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2698:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2699:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2705:Generated_Source\PSoC4/CyLib.c **** {
 2119              		.loc 1 2705 0
 2120              		.cfi_startproc
 2121              		@ args = 0, pretend = 0, frame = 8
 2122              		@ frame_needed = 1, uses_anonymous_args = 0
 2123 0000 80B5     		push	{r7, lr}
 2124              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 86


 2125              		.cfi_offset 7, -8
 2126              		.cfi_offset 14, -4
 2127 0002 82B0     		sub	sp, sp, #8
 2128              		.cfi_def_cfa_offset 16
 2129 0004 00AF     		add	r7, sp, #0
 2130              		.cfi_def_cfa_register 7
 2131 0006 0200     		movs	r2, r0
 2132 0008 BB1D     		adds	r3, r7, #6
 2133 000a 1A80     		strh	r2, [r3]
2706:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 2134              		.loc 1 2706 0
 2135 000c BB1D     		adds	r3, r7, #6
 2136 000e 1B88     		ldrh	r3, [r3]
 2137 0010 044A     		ldr	r2, .L130
 2138 0012 1278     		ldrb	r2, [r2]
 2139 0014 5343     		muls	r3, r2
 2140 0016 1800     		movs	r0, r3
 2141 0018 FFF7FEFF 		bl	CyDelayCycles
2707:Generated_Source\PSoC4/CyLib.c **** }
 2142              		.loc 1 2707 0
 2143 001c C046     		nop
 2144 001e BD46     		mov	sp, r7
 2145 0020 02B0     		add	sp, sp, #8
 2146              		@ sp needed
 2147 0022 80BD     		pop	{r7, pc}
 2148              	.L131:
 2149              		.align	2
 2150              	.L130:
 2151 0024 00000000 		.word	cydelayFreqMhz
 2152              		.cfi_endproc
 2153              	.LFE34:
 2154              		.size	CyDelayUs, .-CyDelayUs
 2155              		.global	__aeabi_uidiv
 2156              		.section	.text.CyDelayFreq,"ax",%progbits
 2157              		.align	2
 2158              		.global	CyDelayFreq
 2159              		.code	16
 2160              		.thumb_func
 2161              		.type	CyDelayFreq, %function
 2162              	CyDelayFreq:
 2163              	.LFB35:
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2718:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2719:Generated_Source\PSoC4/CyLib.c **** {
 2164              		.loc 1 2719 0
 2165              		.cfi_startproc
 2166              		@ args = 0, pretend = 0, frame = 8
 2167              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 87


 2168 0000 80B5     		push	{r7, lr}
 2169              		.cfi_def_cfa_offset 8
 2170              		.cfi_offset 7, -8
 2171              		.cfi_offset 14, -4
 2172 0002 82B0     		sub	sp, sp, #8
 2173              		.cfi_def_cfa_offset 16
 2174 0004 00AF     		add	r7, sp, #0
 2175              		.cfi_def_cfa_register 7
 2176 0006 7860     		str	r0, [r7, #4]
2720:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 2177              		.loc 1 2720 0
 2178 0008 7B68     		ldr	r3, [r7, #4]
 2179 000a 002B     		cmp	r3, #0
 2180 000c 03D0     		beq	.L133
2721:Generated_Source\PSoC4/CyLib.c ****     {
2722:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 2181              		.loc 1 2722 0
 2182 000e 154B     		ldr	r3, .L135
 2183 0010 7A68     		ldr	r2, [r7, #4]
 2184 0012 1A60     		str	r2, [r3]
 2185 0014 02E0     		b	.L134
 2186              	.L133:
2723:Generated_Source\PSoC4/CyLib.c ****     }
2724:Generated_Source\PSoC4/CyLib.c ****     else
2725:Generated_Source\PSoC4/CyLib.c ****     {
2726:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 2187              		.loc 1 2726 0
 2188 0016 134B     		ldr	r3, .L135
 2189 0018 134A     		ldr	r2, .L135+4
 2190 001a 1A60     		str	r2, [r3]
 2191              	.L134:
2727:Generated_Source\PSoC4/CyLib.c ****     }
2728:Generated_Source\PSoC4/CyLib.c **** 
2729:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 2192              		.loc 1 2729 0
 2193 001c 114B     		ldr	r3, .L135
 2194 001e 1B68     		ldr	r3, [r3]
 2195 0020 124A     		ldr	r2, .L135+8
 2196 0022 9446     		mov	ip, r2
 2197 0024 6344     		add	r3, r3, ip
 2198 0026 1249     		ldr	r1, .L135+12
 2199 0028 1800     		movs	r0, r3
 2200 002a FFF7FEFF 		bl	__aeabi_uidiv
 2201 002e 0300     		movs	r3, r0
 2202 0030 DAB2     		uxtb	r2, r3
 2203 0032 104B     		ldr	r3, .L135+16
 2204 0034 1A70     		strb	r2, [r3]
2730:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 2205              		.loc 1 2730 0
 2206 0036 0B4B     		ldr	r3, .L135
 2207 0038 1B68     		ldr	r3, [r3]
 2208 003a 0F4A     		ldr	r2, .L135+20
 2209 003c 9A18     		adds	r2, r3, r2
 2210 003e FA23     		movs	r3, #250
 2211 0040 9900     		lsls	r1, r3, #2
 2212 0042 1000     		movs	r0, r2
 2213 0044 FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 88


 2214 0048 0300     		movs	r3, r0
 2215 004a 1A00     		movs	r2, r3
 2216 004c 0B4B     		ldr	r3, .L135+24
 2217 004e 1A60     		str	r2, [r3]
2731:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 2218              		.loc 1 2731 0
 2219 0050 0A4B     		ldr	r3, .L135+24
 2220 0052 1B68     		ldr	r3, [r3]
 2221 0054 DA03     		lsls	r2, r3, #15
 2222 0056 0A4B     		ldr	r3, .L135+28
 2223 0058 1A60     		str	r2, [r3]
2732:Generated_Source\PSoC4/CyLib.c **** }
 2224              		.loc 1 2732 0
 2225 005a C046     		nop
 2226 005c BD46     		mov	sp, r7
 2227 005e 02B0     		add	sp, sp, #8
 2228              		@ sp needed
 2229 0060 80BD     		pop	{r7, pc}
 2230              	.L136:
 2231 0062 C046     		.align	2
 2232              	.L135:
 2233 0064 00000000 		.word	cydelayFreqHz
 2234 0068 006CDC02 		.word	48000000
 2235 006c 3F420F00 		.word	999999
 2236 0070 40420F00 		.word	1000000
 2237 0074 00000000 		.word	cydelayFreqMhz
 2238 0078 E7030000 		.word	999
 2239 007c 00000000 		.word	cydelayFreqKhz
 2240 0080 00000000 		.word	cydelay32kMs
 2241              		.cfi_endproc
 2242              	.LFE35:
 2243              		.size	CyDelayFreq, .-CyDelayFreq
 2244              		.section	.text.CySysTickStart,"ax",%progbits
 2245              		.align	2
 2246              		.global	CySysTickStart
 2247              		.code	16
 2248              		.thumb_func
 2249              		.type	CySysTickStart, %function
 2250              	CySysTickStart:
 2251              	.LFB36:
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2736:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2737:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2738:Generated_Source\PSoC4/CyLib.c **** *
2739:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2740:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2741:Generated_Source\PSoC4/CyLib.c **** *
2742:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2743:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2744:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2747:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2748:Generated_Source\PSoC4/CyLib.c **** *
2749:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 89


2750:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2751:Generated_Source\PSoC4/CyLib.c **** {
 2252              		.loc 1 2751 0
 2253              		.cfi_startproc
 2254              		@ args = 0, pretend = 0, frame = 0
 2255              		@ frame_needed = 1, uses_anonymous_args = 0
 2256 0000 80B5     		push	{r7, lr}
 2257              		.cfi_def_cfa_offset 8
 2258              		.cfi_offset 7, -8
 2259              		.cfi_offset 14, -4
 2260 0002 00AF     		add	r7, sp, #0
 2261              		.cfi_def_cfa_register 7
2752:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2262              		.loc 1 2752 0
 2263 0004 064B     		ldr	r3, .L139
 2264 0006 1B68     		ldr	r3, [r3]
 2265 0008 002B     		cmp	r3, #0
 2266 000a 04D1     		bne	.L138
2753:Generated_Source\PSoC4/CyLib.c ****     {
2754:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 2267              		.loc 1 2754 0
 2268 000c FFF7FEFF 		bl	CySysTickInit
2755:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2269              		.loc 1 2755 0
 2270 0010 034B     		ldr	r3, .L139
 2271 0012 0122     		movs	r2, #1
 2272 0014 1A60     		str	r2, [r3]
 2273              	.L138:
2756:Generated_Source\PSoC4/CyLib.c ****     }
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 2274              		.loc 1 2758 0
 2275 0016 FFF7FEFF 		bl	CySysTickEnable
2759:Generated_Source\PSoC4/CyLib.c **** }
 2276              		.loc 1 2759 0
 2277 001a C046     		nop
 2278 001c BD46     		mov	sp, r7
 2279              		@ sp needed
 2280 001e 80BD     		pop	{r7, pc}
 2281              	.L140:
 2282              		.align	2
 2283              	.L139:
 2284 0020 00000000 		.word	CySysTickInitVar
 2285              		.cfi_endproc
 2286              	.LFE36:
 2287              		.size	CySysTickStart, .-CySysTickStart
 2288              		.section	.text.CySysTickInit,"ax",%progbits
 2289              		.align	2
 2290              		.global	CySysTickInit
 2291              		.code	16
 2292              		.thumb_func
 2293              		.type	CySysTickInit, %function
 2294              	CySysTickInit:
 2295              	.LFB37:
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c **** 
2762:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 90


2763:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2764:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2767:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2768:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2769:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2772:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2773:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2774:Generated_Source\PSoC4/CyLib.c **** *
2775:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2776:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2777:Generated_Source\PSoC4/CyLib.c **** *
2778:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2779:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2780:Generated_Source\PSoC4/CyLib.c **** {
 2296              		.loc 1 2780 0
 2297              		.cfi_startproc
 2298              		@ args = 0, pretend = 0, frame = 8
 2299              		@ frame_needed = 1, uses_anonymous_args = 0
 2300 0000 80B5     		push	{r7, lr}
 2301              		.cfi_def_cfa_offset 8
 2302              		.cfi_offset 7, -8
 2303              		.cfi_offset 14, -4
 2304 0002 82B0     		sub	sp, sp, #8
 2305              		.cfi_def_cfa_offset 16
 2306 0004 00AF     		add	r7, sp, #0
 2307              		.cfi_def_cfa_register 7
2781:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2782:Generated_Source\PSoC4/CyLib.c **** 
2783:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2308              		.loc 1 2783 0
 2309 0006 0023     		movs	r3, #0
 2310 0008 7B60     		str	r3, [r7, #4]
 2311 000a 07E0     		b	.L142
 2312              	.L143:
2784:Generated_Source\PSoC4/CyLib.c ****     {
2785:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 2313              		.loc 1 2785 0 discriminator 3
 2314 000c 114B     		ldr	r3, .L144
 2315 000e 7A68     		ldr	r2, [r7, #4]
 2316 0010 9200     		lsls	r2, r2, #2
 2317 0012 0021     		movs	r1, #0
 2318 0014 D150     		str	r1, [r2, r3]
2783:Generated_Source\PSoC4/CyLib.c ****     {
 2319              		.loc 1 2783 0 discriminator 3
 2320 0016 7B68     		ldr	r3, [r7, #4]
 2321 0018 0133     		adds	r3, r3, #1
 2322 001a 7B60     		str	r3, [r7, #4]
 2323              	.L142:
2783:Generated_Source\PSoC4/CyLib.c ****     {
 2324              		.loc 1 2783 0 is_stmt 0 discriminator 1
 2325 001c 7B68     		ldr	r3, [r7, #4]
 2326 001e 042B     		cmp	r3, #4
 2327 0020 F4D9     		bls	.L143
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 91


2786:Generated_Source\PSoC4/CyLib.c ****     }
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 2328              		.loc 1 2788 0 is_stmt 1
 2329 0022 0D4B     		ldr	r3, .L144+4
 2330 0024 1900     		movs	r1, r3
 2331 0026 0F20     		movs	r0, #15
 2332 0028 FFF7FEFF 		bl	CyIntSetSysVector
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2791:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 2333              		.loc 1 2791 0
 2334 002c 0120     		movs	r0, #1
 2335 002e FFF7FEFF 		bl	CySysTickSetClockSource
2792:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2793:Generated_Source\PSoC4/CyLib.c **** 
2794:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 2336              		.loc 1 2794 0
 2337 0032 0A4B     		ldr	r3, .L144+8
 2338 0034 1A68     		ldr	r2, [r3]
 2339 0036 FA23     		movs	r3, #250
 2340 0038 9900     		lsls	r1, r3, #2
 2341 003a 1000     		movs	r0, r2
 2342 003c FFF7FEFF 		bl	__aeabi_uidiv
 2343 0040 0300     		movs	r3, r0
 2344 0042 1800     		movs	r0, r3
 2345 0044 FFF7FEFF 		bl	CySysTickSetReload
2795:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2346              		.loc 1 2795 0
 2347 0048 FFF7FEFF 		bl	CySysTickClear
2796:Generated_Source\PSoC4/CyLib.c **** }
 2348              		.loc 1 2796 0
 2349 004c C046     		nop
 2350 004e BD46     		mov	sp, r7
 2351 0050 02B0     		add	sp, sp, #8
 2352              		@ sp needed
 2353 0052 80BD     		pop	{r7, pc}
 2354              	.L145:
 2355              		.align	2
 2356              	.L144:
 2357 0054 00000000 		.word	CySysTickCallbacks
 2358 0058 00000000 		.word	CySysTickServiceCallbacks
 2359 005c 00000000 		.word	cydelayFreqHz
 2360              		.cfi_endproc
 2361              	.LFE37:
 2362              		.size	CySysTickInit, .-CySysTickInit
 2363              		.section	.text.CySysTickEnable,"ax",%progbits
 2364              		.align	2
 2365              		.global	CySysTickEnable
 2366              		.code	16
 2367              		.thumb_func
 2368              		.type	CySysTickEnable, %function
 2369              	CySysTickEnable:
 2370              	.LFB38:
2797:Generated_Source\PSoC4/CyLib.c **** 
2798:Generated_Source\PSoC4/CyLib.c **** 
2799:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 92


2800:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2801:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2802:Generated_Source\PSoC4/CyLib.c **** *
2803:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2804:Generated_Source\PSoC4/CyLib.c **** *
2805:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2806:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2809:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2810:Generated_Source\PSoC4/CyLib.c **** {
 2371              		.loc 1 2810 0
 2372              		.cfi_startproc
 2373              		@ args = 0, pretend = 0, frame = 0
 2374              		@ frame_needed = 1, uses_anonymous_args = 0
 2375 0000 80B5     		push	{r7, lr}
 2376              		.cfi_def_cfa_offset 8
 2377              		.cfi_offset 7, -8
 2378              		.cfi_offset 14, -4
 2379 0002 00AF     		add	r7, sp, #0
 2380              		.cfi_def_cfa_register 7
2811:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2381              		.loc 1 2811 0
 2382 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2812:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2383              		.loc 1 2812 0
 2384 0008 044B     		ldr	r3, .L147
 2385 000a 044A     		ldr	r2, .L147
 2386 000c 1268     		ldr	r2, [r2]
 2387 000e 0121     		movs	r1, #1
 2388 0010 0A43     		orrs	r2, r1
 2389 0012 1A60     		str	r2, [r3]
2813:Generated_Source\PSoC4/CyLib.c **** }
 2390              		.loc 1 2813 0
 2391 0014 C046     		nop
 2392 0016 BD46     		mov	sp, r7
 2393              		@ sp needed
 2394 0018 80BD     		pop	{r7, pc}
 2395              	.L148:
 2396 001a C046     		.align	2
 2397              	.L147:
 2398 001c 10E000E0 		.word	-536813552
 2399              		.cfi_endproc
 2400              	.LFE38:
 2401              		.size	CySysTickEnable, .-CySysTickEnable
 2402              		.section	.text.CySysTickStop,"ax",%progbits
 2403              		.align	2
 2404              		.global	CySysTickStop
 2405              		.code	16
 2406              		.thumb_func
 2407              		.type	CySysTickStop, %function
 2408              	CySysTickStop:
 2409              	.LFB39:
2814:Generated_Source\PSoC4/CyLib.c **** 
2815:Generated_Source\PSoC4/CyLib.c **** 
2816:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2817:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 93


2818:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2823:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2824:Generated_Source\PSoC4/CyLib.c **** *
2825:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2826:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2827:Generated_Source\PSoC4/CyLib.c **** {
 2410              		.loc 1 2827 0
 2411              		.cfi_startproc
 2412              		@ args = 0, pretend = 0, frame = 0
 2413              		@ frame_needed = 1, uses_anonymous_args = 0
 2414 0000 80B5     		push	{r7, lr}
 2415              		.cfi_def_cfa_offset 8
 2416              		.cfi_offset 7, -8
 2417              		.cfi_offset 14, -4
 2418 0002 00AF     		add	r7, sp, #0
 2419              		.cfi_def_cfa_register 7
2828:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2420              		.loc 1 2828 0
 2421 0004 044B     		ldr	r3, .L150
 2422 0006 044A     		ldr	r2, .L150
 2423 0008 1268     		ldr	r2, [r2]
 2424 000a 0121     		movs	r1, #1
 2425 000c 8A43     		bics	r2, r1
 2426 000e 1A60     		str	r2, [r3]
2829:Generated_Source\PSoC4/CyLib.c **** }
 2427              		.loc 1 2829 0
 2428 0010 C046     		nop
 2429 0012 BD46     		mov	sp, r7
 2430              		@ sp needed
 2431 0014 80BD     		pop	{r7, pc}
 2432              	.L151:
 2433 0016 C046     		.align	2
 2434              	.L150:
 2435 0018 10E000E0 		.word	-536813552
 2436              		.cfi_endproc
 2437              	.LFE39:
 2438              		.size	CySysTickStop, .-CySysTickStop
 2439              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2440              		.align	2
 2441              		.global	CySysTickEnableInterrupt
 2442              		.code	16
 2443              		.thumb_func
 2444              		.type	CySysTickEnableInterrupt, %function
 2445              	CySysTickEnableInterrupt:
 2446              	.LFB40:
2830:Generated_Source\PSoC4/CyLib.c **** 
2831:Generated_Source\PSoC4/CyLib.c **** 
2832:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2833:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2834:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2835:Generated_Source\PSoC4/CyLib.c **** *
2836:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2837:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 94


2838:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2839:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2840:Generated_Source\PSoC4/CyLib.c **** *
2841:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2843:Generated_Source\PSoC4/CyLib.c **** {
 2447              		.loc 1 2843 0
 2448              		.cfi_startproc
 2449              		@ args = 0, pretend = 0, frame = 0
 2450              		@ frame_needed = 1, uses_anonymous_args = 0
 2451 0000 80B5     		push	{r7, lr}
 2452              		.cfi_def_cfa_offset 8
 2453              		.cfi_offset 7, -8
 2454              		.cfi_offset 14, -4
 2455 0002 00AF     		add	r7, sp, #0
 2456              		.cfi_def_cfa_register 7
2844:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2457              		.loc 1 2844 0
 2458 0004 044B     		ldr	r3, .L153
 2459 0006 044A     		ldr	r2, .L153
 2460 0008 1268     		ldr	r2, [r2]
 2461 000a 0221     		movs	r1, #2
 2462 000c 0A43     		orrs	r2, r1
 2463 000e 1A60     		str	r2, [r3]
2845:Generated_Source\PSoC4/CyLib.c **** }
 2464              		.loc 1 2845 0
 2465 0010 C046     		nop
 2466 0012 BD46     		mov	sp, r7
 2467              		@ sp needed
 2468 0014 80BD     		pop	{r7, pc}
 2469              	.L154:
 2470 0016 C046     		.align	2
 2471              	.L153:
 2472 0018 10E000E0 		.word	-536813552
 2473              		.cfi_endproc
 2474              	.LFE40:
 2475              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2476              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2477              		.align	2
 2478              		.global	CySysTickDisableInterrupt
 2479              		.code	16
 2480              		.thumb_func
 2481              		.type	CySysTickDisableInterrupt, %function
 2482              	CySysTickDisableInterrupt:
 2483              	.LFB41:
2846:Generated_Source\PSoC4/CyLib.c **** 
2847:Generated_Source\PSoC4/CyLib.c **** 
2848:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2849:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2850:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2851:Generated_Source\PSoC4/CyLib.c **** *
2852:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2855:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 95


2858:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2859:Generated_Source\PSoC4/CyLib.c **** {
 2484              		.loc 1 2859 0
 2485              		.cfi_startproc
 2486              		@ args = 0, pretend = 0, frame = 0
 2487              		@ frame_needed = 1, uses_anonymous_args = 0
 2488 0000 80B5     		push	{r7, lr}
 2489              		.cfi_def_cfa_offset 8
 2490              		.cfi_offset 7, -8
 2491              		.cfi_offset 14, -4
 2492 0002 00AF     		add	r7, sp, #0
 2493              		.cfi_def_cfa_register 7
2860:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2494              		.loc 1 2860 0
 2495 0004 044B     		ldr	r3, .L156
 2496 0006 044A     		ldr	r2, .L156
 2497 0008 1268     		ldr	r2, [r2]
 2498 000a 0221     		movs	r1, #2
 2499 000c 8A43     		bics	r2, r1
 2500 000e 1A60     		str	r2, [r3]
2861:Generated_Source\PSoC4/CyLib.c **** }
 2501              		.loc 1 2861 0
 2502 0010 C046     		nop
 2503 0012 BD46     		mov	sp, r7
 2504              		@ sp needed
 2505 0014 80BD     		pop	{r7, pc}
 2506              	.L157:
 2507 0016 C046     		.align	2
 2508              	.L156:
 2509 0018 10E000E0 		.word	-536813552
 2510              		.cfi_endproc
 2511              	.LFE41:
 2512              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2513              		.section	.text.CySysTickSetReload,"ax",%progbits
 2514              		.align	2
 2515              		.global	CySysTickSetReload
 2516              		.code	16
 2517              		.thumb_func
 2518              		.type	CySysTickSetReload, %function
 2519              	CySysTickSetReload:
 2520              	.LFB42:
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c **** 
2864:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2865:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2866:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2867:Generated_Source\PSoC4/CyLib.c **** *
2868:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2869:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2870:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2871:Generated_Source\PSoC4/CyLib.c **** *
2872:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2873:Generated_Source\PSoC4/CyLib.c **** *
2874:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2875:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2876:Generated_Source\PSoC4/CyLib.c **** {
 2521              		.loc 1 2876 0
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 96


 2522              		.cfi_startproc
 2523              		@ args = 0, pretend = 0, frame = 8
 2524              		@ frame_needed = 1, uses_anonymous_args = 0
 2525 0000 80B5     		push	{r7, lr}
 2526              		.cfi_def_cfa_offset 8
 2527              		.cfi_offset 7, -8
 2528              		.cfi_offset 14, -4
 2529 0002 82B0     		sub	sp, sp, #8
 2530              		.cfi_def_cfa_offset 16
 2531 0004 00AF     		add	r7, sp, #0
 2532              		.cfi_def_cfa_register 7
 2533 0006 7860     		str	r0, [r7, #4]
2877:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2534              		.loc 1 2877 0
 2535 0008 044B     		ldr	r3, .L159
 2536 000a 7A68     		ldr	r2, [r7, #4]
 2537 000c 1202     		lsls	r2, r2, #8
 2538 000e 120A     		lsrs	r2, r2, #8
 2539 0010 1A60     		str	r2, [r3]
2878:Generated_Source\PSoC4/CyLib.c **** }
 2540              		.loc 1 2878 0
 2541 0012 C046     		nop
 2542 0014 BD46     		mov	sp, r7
 2543 0016 02B0     		add	sp, sp, #8
 2544              		@ sp needed
 2545 0018 80BD     		pop	{r7, pc}
 2546              	.L160:
 2547 001a C046     		.align	2
 2548              	.L159:
 2549 001c 14E000E0 		.word	-536813548
 2550              		.cfi_endproc
 2551              	.LFE42:
 2552              		.size	CySysTickSetReload, .-CySysTickSetReload
 2553              		.section	.text.CySysTickGetReload,"ax",%progbits
 2554              		.align	2
 2555              		.global	CySysTickGetReload
 2556              		.code	16
 2557              		.thumb_func
 2558              		.type	CySysTickGetReload, %function
 2559              	CySysTickGetReload:
 2560              	.LFB43:
2879:Generated_Source\PSoC4/CyLib.c **** 
2880:Generated_Source\PSoC4/CyLib.c **** 
2881:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2882:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2883:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2884:Generated_Source\PSoC4/CyLib.c **** *
2885:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2886:Generated_Source\PSoC4/CyLib.c **** *
2887:Generated_Source\PSoC4/CyLib.c **** * \return
2888:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2889:Generated_Source\PSoC4/CyLib.c **** *
2890:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2891:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2892:Generated_Source\PSoC4/CyLib.c **** {
 2561              		.loc 1 2892 0
 2562              		.cfi_startproc
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 97


 2563              		@ args = 0, pretend = 0, frame = 0
 2564              		@ frame_needed = 1, uses_anonymous_args = 0
 2565 0000 80B5     		push	{r7, lr}
 2566              		.cfi_def_cfa_offset 8
 2567              		.cfi_offset 7, -8
 2568              		.cfi_offset 14, -4
 2569 0002 00AF     		add	r7, sp, #0
 2570              		.cfi_def_cfa_register 7
2893:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2571              		.loc 1 2893 0
 2572 0004 034B     		ldr	r3, .L163
 2573 0006 1B68     		ldr	r3, [r3]
 2574 0008 1B02     		lsls	r3, r3, #8
 2575 000a 1B0A     		lsrs	r3, r3, #8
2894:Generated_Source\PSoC4/CyLib.c **** }
 2576              		.loc 1 2894 0
 2577 000c 1800     		movs	r0, r3
 2578 000e BD46     		mov	sp, r7
 2579              		@ sp needed
 2580 0010 80BD     		pop	{r7, pc}
 2581              	.L164:
 2582 0012 C046     		.align	2
 2583              	.L163:
 2584 0014 14E000E0 		.word	-536813548
 2585              		.cfi_endproc
 2586              	.LFE43:
 2587              		.size	CySysTickGetReload, .-CySysTickGetReload
 2588              		.section	.text.CySysTickGetValue,"ax",%progbits
 2589              		.align	2
 2590              		.global	CySysTickGetValue
 2591              		.code	16
 2592              		.thumb_func
 2593              		.type	CySysTickGetValue, %function
 2594              	CySysTickGetValue:
 2595              	.LFB44:
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** 
2897:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2898:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2899:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2902:Generated_Source\PSoC4/CyLib.c **** *
2903:Generated_Source\PSoC4/CyLib.c **** * \return
2904:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2908:Generated_Source\PSoC4/CyLib.c **** {
 2596              		.loc 1 2908 0
 2597              		.cfi_startproc
 2598              		@ args = 0, pretend = 0, frame = 0
 2599              		@ frame_needed = 1, uses_anonymous_args = 0
 2600 0000 80B5     		push	{r7, lr}
 2601              		.cfi_def_cfa_offset 8
 2602              		.cfi_offset 7, -8
 2603              		.cfi_offset 14, -4
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 98


 2604 0002 00AF     		add	r7, sp, #0
 2605              		.cfi_def_cfa_register 7
2909:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2606              		.loc 1 2909 0
 2607 0004 034B     		ldr	r3, .L167
 2608 0006 1B68     		ldr	r3, [r3]
 2609 0008 1B02     		lsls	r3, r3, #8
 2610 000a 1B0A     		lsrs	r3, r3, #8
2910:Generated_Source\PSoC4/CyLib.c **** }
 2611              		.loc 1 2910 0
 2612 000c 1800     		movs	r0, r3
 2613 000e BD46     		mov	sp, r7
 2614              		@ sp needed
 2615 0010 80BD     		pop	{r7, pc}
 2616              	.L168:
 2617 0012 C046     		.align	2
 2618              	.L167:
 2619 0014 18E000E0 		.word	-536813544
 2620              		.cfi_endproc
 2621              	.LFE44:
 2622              		.size	CySysTickGetValue, .-CySysTickGetValue
 2623              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2624              		.align	2
 2625              		.global	CySysTickSetClockSource
 2626              		.code	16
 2627              		.thumb_func
 2628              		.type	CySysTickSetClockSource, %function
 2629              	CySysTickSetClockSource:
 2630              	.LFB45:
2911:Generated_Source\PSoC4/CyLib.c **** 
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2914:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2915:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2916:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2917:Generated_Source\PSoC4/CyLib.c ****     *
2918:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2919:Generated_Source\PSoC4/CyLib.c ****     *
2920:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2921:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2922:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2923:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2924:Generated_Source\PSoC4/CyLib.c ****     *
2925:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2926:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2927:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2928:Generated_Source\PSoC4/CyLib.c ****     *
2929:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2930:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2931:Generated_Source\PSoC4/CyLib.c ****     *
2932:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2933:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2934:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2935:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2936:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2937:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2938:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 99


2939:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2940:Generated_Source\PSoC4/CyLib.c ****     {
 2631              		.loc 1 2940 0
 2632              		.cfi_startproc
 2633              		@ args = 0, pretend = 0, frame = 8
 2634              		@ frame_needed = 1, uses_anonymous_args = 0
 2635 0000 80B5     		push	{r7, lr}
 2636              		.cfi_def_cfa_offset 8
 2637              		.cfi_offset 7, -8
 2638              		.cfi_offset 14, -4
 2639 0002 82B0     		sub	sp, sp, #8
 2640              		.cfi_def_cfa_offset 16
 2641 0004 00AF     		add	r7, sp, #0
 2642              		.cfi_def_cfa_register 7
 2643 0006 7860     		str	r0, [r7, #4]
2941:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2644              		.loc 1 2941 0
 2645 0008 7B68     		ldr	r3, [r7, #4]
 2646 000a 012B     		cmp	r3, #1
 2647 000c 06D1     		bne	.L170
2942:Generated_Source\PSoC4/CyLib.c ****         {
2943:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 2648              		.loc 1 2943 0
 2649 000e 084B     		ldr	r3, .L173
 2650 0010 074A     		ldr	r2, .L173
 2651 0012 1268     		ldr	r2, [r2]
 2652 0014 0421     		movs	r1, #4
 2653 0016 0A43     		orrs	r2, r1
 2654 0018 1A60     		str	r2, [r3]
2944:Generated_Source\PSoC4/CyLib.c ****         }
2945:Generated_Source\PSoC4/CyLib.c ****         else
2946:Generated_Source\PSoC4/CyLib.c ****         {
2947:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2948:Generated_Source\PSoC4/CyLib.c ****         }
2949:Generated_Source\PSoC4/CyLib.c ****     }
 2655              		.loc 1 2949 0
 2656 001a 05E0     		b	.L172
 2657              	.L170:
2947:Generated_Source\PSoC4/CyLib.c ****         }
 2658              		.loc 1 2947 0
 2659 001c 044B     		ldr	r3, .L173
 2660 001e 044A     		ldr	r2, .L173
 2661 0020 1268     		ldr	r2, [r2]
 2662 0022 0421     		movs	r1, #4
 2663 0024 8A43     		bics	r2, r1
 2664 0026 1A60     		str	r2, [r3]
 2665              	.L172:
 2666              		.loc 1 2949 0
 2667 0028 C046     		nop
 2668 002a BD46     		mov	sp, r7
 2669 002c 02B0     		add	sp, sp, #8
 2670              		@ sp needed
 2671 002e 80BD     		pop	{r7, pc}
 2672              	.L174:
 2673              		.align	2
 2674              	.L173:
 2675 0030 10E000E0 		.word	-536813552
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 100


 2676              		.cfi_endproc
 2677              	.LFE45:
 2678              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2679              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2680              		.align	2
 2681              		.global	CySysTickGetClockSource
 2682              		.code	16
 2683              		.thumb_func
 2684              		.type	CySysTickGetClockSource, %function
 2685              	CySysTickGetClockSource:
 2686              	.LFB46:
2950:Generated_Source\PSoC4/CyLib.c **** 
2951:Generated_Source\PSoC4/CyLib.c ****     
2952:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2953:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2954:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2955:Generated_Source\PSoC4/CyLib.c ****     *
2956:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2957:Generated_Source\PSoC4/CyLib.c ****     *
2958:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2959:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2960:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2961:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2962:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2963:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2964:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2965:Generated_Source\PSoC4/CyLib.c ****     {
 2687              		.loc 1 2965 0
 2688              		.cfi_startproc
 2689              		@ args = 0, pretend = 0, frame = 0
 2690              		@ frame_needed = 1, uses_anonymous_args = 0
 2691 0000 80B5     		push	{r7, lr}
 2692              		.cfi_def_cfa_offset 8
 2693              		.cfi_offset 7, -8
 2694              		.cfi_offset 14, -4
 2695 0002 00AF     		add	r7, sp, #0
 2696              		.cfi_def_cfa_register 7
2966:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2697              		.loc 1 2966 0
 2698 0004 034B     		ldr	r3, .L177
 2699 0006 1B68     		ldr	r3, [r3]
 2700 0008 9B08     		lsrs	r3, r3, #2
 2701 000a 0122     		movs	r2, #1
 2702 000c 1340     		ands	r3, r2
2967:Generated_Source\PSoC4/CyLib.c ****     }
 2703              		.loc 1 2967 0
 2704 000e 1800     		movs	r0, r3
 2705 0010 BD46     		mov	sp, r7
 2706              		@ sp needed
 2707 0012 80BD     		pop	{r7, pc}
 2708              	.L178:
 2709              		.align	2
 2710              	.L177:
 2711 0014 10E000E0 		.word	-536813552
 2712              		.cfi_endproc
 2713              	.LFE46:
 2714              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 101


 2715              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2716              		.align	2
 2717              		.global	CySysTickGetCountFlag
 2718              		.code	16
 2719              		.thumb_func
 2720              		.type	CySysTickGetCountFlag, %function
 2721              	CySysTickGetCountFlag:
 2722              	.LFB47:
2968:Generated_Source\PSoC4/CyLib.c ****     
2969:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2977:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2978:Generated_Source\PSoC4/CyLib.c **** *
2979:Generated_Source\PSoC4/CyLib.c **** * \return
2980:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *
2983:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2984:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2985:Generated_Source\PSoC4/CyLib.c **** *
2986:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2987:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2988:Generated_Source\PSoC4/CyLib.c **** {
 2723              		.loc 1 2988 0
 2724              		.cfi_startproc
 2725              		@ args = 0, pretend = 0, frame = 0
 2726              		@ frame_needed = 1, uses_anonymous_args = 0
 2727 0000 80B5     		push	{r7, lr}
 2728              		.cfi_def_cfa_offset 8
 2729              		.cfi_offset 7, -8
 2730              		.cfi_offset 14, -4
 2731 0002 00AF     		add	r7, sp, #0
 2732              		.cfi_def_cfa_register 7
2989:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2733              		.loc 1 2989 0
 2734 0004 034B     		ldr	r3, .L181
 2735 0006 1B68     		ldr	r3, [r3]
 2736 0008 1B0C     		lsrs	r3, r3, #16
 2737 000a 0122     		movs	r2, #1
 2738 000c 1340     		ands	r3, r2
2990:Generated_Source\PSoC4/CyLib.c **** }
 2739              		.loc 1 2990 0
 2740 000e 1800     		movs	r0, r3
 2741 0010 BD46     		mov	sp, r7
 2742              		@ sp needed
 2743 0012 80BD     		pop	{r7, pc}
 2744              	.L182:
 2745              		.align	2
 2746              	.L181:
 2747 0014 10E000E0 		.word	-536813552
 2748              		.cfi_endproc
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 102


 2749              	.LFE47:
 2750              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2751              		.section	.text.CySysTickClear,"ax",%progbits
 2752              		.align	2
 2753              		.global	CySysTickClear
 2754              		.code	16
 2755              		.thumb_func
 2756              		.type	CySysTickClear, %function
 2757              	CySysTickClear:
 2758              	.LFB48:
2991:Generated_Source\PSoC4/CyLib.c **** 
2992:Generated_Source\PSoC4/CyLib.c **** 
2993:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2994:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2995:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2996:Generated_Source\PSoC4/CyLib.c **** *
2997:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2998:Generated_Source\PSoC4/CyLib.c **** *
2999:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3000:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3001:Generated_Source\PSoC4/CyLib.c **** {
 2759              		.loc 1 3001 0
 2760              		.cfi_startproc
 2761              		@ args = 0, pretend = 0, frame = 0
 2762              		@ frame_needed = 1, uses_anonymous_args = 0
 2763 0000 80B5     		push	{r7, lr}
 2764              		.cfi_def_cfa_offset 8
 2765              		.cfi_offset 7, -8
 2766              		.cfi_offset 14, -4
 2767 0002 00AF     		add	r7, sp, #0
 2768              		.cfi_def_cfa_register 7
3002:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2769              		.loc 1 3002 0
 2770 0004 024B     		ldr	r3, .L184
 2771 0006 0022     		movs	r2, #0
 2772 0008 1A60     		str	r2, [r3]
3003:Generated_Source\PSoC4/CyLib.c **** }
 2773              		.loc 1 3003 0
 2774 000a C046     		nop
 2775 000c BD46     		mov	sp, r7
 2776              		@ sp needed
 2777 000e 80BD     		pop	{r7, pc}
 2778              	.L185:
 2779              		.align	2
 2780              	.L184:
 2781 0010 18E000E0 		.word	-536813544
 2782              		.cfi_endproc
 2783              	.LFE48:
 2784              		.size	CySysTickClear, .-CySysTickClear
 2785              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2786              		.align	2
 2787              		.global	CySysTickSetCallback
 2788              		.code	16
 2789              		.thumb_func
 2790              		.type	CySysTickSetCallback, %function
 2791              	CySysTickSetCallback:
 2792              	.LFB49:
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 103


3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3011:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3012:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3015:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3016:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3017:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3018:Generated_Source\PSoC4/CyLib.c **** *  functions.
3019:Generated_Source\PSoC4/CyLib.c **** *
3020:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3021:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3022:Generated_Source\PSoC4/CyLib.c **** *
3023:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3024:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3025:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3026:Generated_Source\PSoC4/CyLib.c **** *
3027:Generated_Source\PSoC4/CyLib.c **** * \return
3028:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3029:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3030:Generated_Source\PSoC4/CyLib.c **** *
3031:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3032:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3033:Generated_Source\PSoC4/CyLib.c **** *
3034:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3035:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3036:Generated_Source\PSoC4/CyLib.c **** {
 2793              		.loc 1 3036 0
 2794              		.cfi_startproc
 2795              		@ args = 0, pretend = 0, frame = 16
 2796              		@ frame_needed = 1, uses_anonymous_args = 0
 2797 0000 80B5     		push	{r7, lr}
 2798              		.cfi_def_cfa_offset 8
 2799              		.cfi_offset 7, -8
 2800              		.cfi_offset 14, -4
 2801 0002 84B0     		sub	sp, sp, #16
 2802              		.cfi_def_cfa_offset 24
 2803 0004 00AF     		add	r7, sp, #0
 2804              		.cfi_def_cfa_register 7
 2805 0006 7860     		str	r0, [r7, #4]
 2806 0008 3960     		str	r1, [r7]
3037:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3038:Generated_Source\PSoC4/CyLib.c **** 
3039:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2807              		.loc 1 3039 0
 2808 000a 074B     		ldr	r3, .L188
 2809 000c 7A68     		ldr	r2, [r7, #4]
 2810 000e 9200     		lsls	r2, r2, #2
 2811 0010 D358     		ldr	r3, [r2, r3]
 2812 0012 FB60     		str	r3, [r7, #12]
3040:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 104


 2813              		.loc 1 3040 0
 2814 0014 044B     		ldr	r3, .L188
 2815 0016 7A68     		ldr	r2, [r7, #4]
 2816 0018 9200     		lsls	r2, r2, #2
 2817 001a 3968     		ldr	r1, [r7]
 2818 001c D150     		str	r1, [r2, r3]
3041:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2819              		.loc 1 3041 0
 2820 001e FB68     		ldr	r3, [r7, #12]
3042:Generated_Source\PSoC4/CyLib.c **** }
 2821              		.loc 1 3042 0
 2822 0020 1800     		movs	r0, r3
 2823 0022 BD46     		mov	sp, r7
 2824 0024 04B0     		add	sp, sp, #16
 2825              		@ sp needed
 2826 0026 80BD     		pop	{r7, pc}
 2827              	.L189:
 2828              		.align	2
 2829              	.L188:
 2830 0028 00000000 		.word	CySysTickCallbacks
 2831              		.cfi_endproc
 2832              	.LFE49:
 2833              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2834              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2835              		.align	2
 2836              		.global	CySysTickGetCallback
 2837              		.code	16
 2838              		.thumb_func
 2839              		.type	CySysTickGetCallback, %function
 2840              	CySysTickGetCallback:
 2841              	.LFB50:
3043:Generated_Source\PSoC4/CyLib.c **** 
3044:Generated_Source\PSoC4/CyLib.c **** 
3045:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3046:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3047:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3048:Generated_Source\PSoC4/CyLib.c **** *
3049:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3050:Generated_Source\PSoC4/CyLib.c **** *
3051:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3052:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** * \return
3055:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3056:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3060:Generated_Source\PSoC4/CyLib.c **** {
 2842              		.loc 1 3060 0
 2843              		.cfi_startproc
 2844              		@ args = 0, pretend = 0, frame = 8
 2845              		@ frame_needed = 1, uses_anonymous_args = 0
 2846 0000 80B5     		push	{r7, lr}
 2847              		.cfi_def_cfa_offset 8
 2848              		.cfi_offset 7, -8
 2849              		.cfi_offset 14, -4
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 105


 2850 0002 82B0     		sub	sp, sp, #8
 2851              		.cfi_def_cfa_offset 16
 2852 0004 00AF     		add	r7, sp, #0
 2853              		.cfi_def_cfa_register 7
 2854 0006 7860     		str	r0, [r7, #4]
3061:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2855              		.loc 1 3061 0
 2856 0008 034B     		ldr	r3, .L192
 2857 000a 7A68     		ldr	r2, [r7, #4]
 2858 000c 9200     		lsls	r2, r2, #2
 2859 000e D358     		ldr	r3, [r2, r3]
3062:Generated_Source\PSoC4/CyLib.c **** }
 2860              		.loc 1 3062 0
 2861 0010 1800     		movs	r0, r3
 2862 0012 BD46     		mov	sp, r7
 2863 0014 02B0     		add	sp, sp, #8
 2864              		@ sp needed
 2865 0016 80BD     		pop	{r7, pc}
 2866              	.L193:
 2867              		.align	2
 2868              	.L192:
 2869 0018 00000000 		.word	CySysTickCallbacks
 2870              		.cfi_endproc
 2871              	.LFE50:
 2872              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2873              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2874              		.align	2
 2875              		.code	16
 2876              		.thumb_func
 2877              		.type	CySysTickServiceCallbacks, %function
 2878              	CySysTickServiceCallbacks:
 2879              	.LFB51:
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c **** 
3065:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3066:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3067:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3068:Generated_Source\PSoC4/CyLib.c **** *
3069:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3070:Generated_Source\PSoC4/CyLib.c **** *
3071:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3072:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3073:Generated_Source\PSoC4/CyLib.c **** {
 2880              		.loc 1 3073 0
 2881              		.cfi_startproc
 2882              		@ args = 0, pretend = 0, frame = 8
 2883              		@ frame_needed = 1, uses_anonymous_args = 0
 2884 0000 80B5     		push	{r7, lr}
 2885              		.cfi_def_cfa_offset 8
 2886              		.cfi_offset 7, -8
 2887              		.cfi_offset 14, -4
 2888 0002 82B0     		sub	sp, sp, #8
 2889              		.cfi_def_cfa_offset 16
 2890 0004 00AF     		add	r7, sp, #0
 2891              		.cfi_def_cfa_register 7
3074:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3075:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 106


3076:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3077:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2892              		.loc 1 3077 0
 2893 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2894 000a 0300     		movs	r3, r0
 2895 000c 012B     		cmp	r3, #1
 2896 000e 13D1     		bne	.L199
3078:Generated_Source\PSoC4/CyLib.c ****     {
3079:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2897              		.loc 1 3079 0
 2898 0010 0023     		movs	r3, #0
 2899 0012 7B60     		str	r3, [r7, #4]
 2900 0014 0DE0     		b	.L196
 2901              	.L198:
3080:Generated_Source\PSoC4/CyLib.c ****         {
3081:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2902              		.loc 1 3081 0
 2903 0016 0A4B     		ldr	r3, .L200
 2904 0018 7A68     		ldr	r2, [r7, #4]
 2905 001a 9200     		lsls	r2, r2, #2
 2906 001c D358     		ldr	r3, [r2, r3]
 2907 001e 002B     		cmp	r3, #0
 2908 0020 04D0     		beq	.L197
3082:Generated_Source\PSoC4/CyLib.c ****             {
3083:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2909              		.loc 1 3083 0
 2910 0022 074B     		ldr	r3, .L200
 2911 0024 7A68     		ldr	r2, [r7, #4]
 2912 0026 9200     		lsls	r2, r2, #2
 2913 0028 D358     		ldr	r3, [r2, r3]
 2914 002a 9847     		blx	r3
 2915              	.L197:
3079:Generated_Source\PSoC4/CyLib.c ****         {
 2916              		.loc 1 3079 0 discriminator 2
 2917 002c 7B68     		ldr	r3, [r7, #4]
 2918 002e 0133     		adds	r3, r3, #1
 2919 0030 7B60     		str	r3, [r7, #4]
 2920              	.L196:
3079:Generated_Source\PSoC4/CyLib.c ****         {
 2921              		.loc 1 3079 0 is_stmt 0 discriminator 1
 2922 0032 7B68     		ldr	r3, [r7, #4]
 2923 0034 042B     		cmp	r3, #4
 2924 0036 EED9     		bls	.L198
 2925              	.L199:
3084:Generated_Source\PSoC4/CyLib.c ****             }
3085:Generated_Source\PSoC4/CyLib.c ****         }
3086:Generated_Source\PSoC4/CyLib.c ****     }
3087:Generated_Source\PSoC4/CyLib.c **** }
 2926              		.loc 1 3087 0 is_stmt 1
 2927 0038 C046     		nop
 2928 003a BD46     		mov	sp, r7
 2929 003c 02B0     		add	sp, sp, #8
 2930              		@ sp needed
 2931 003e 80BD     		pop	{r7, pc}
 2932              	.L201:
 2933              		.align	2
 2934              	.L200:
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 107


 2935 0040 00000000 		.word	CySysTickCallbacks
 2936              		.cfi_endproc
 2937              	.LFE51:
 2938              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2939              		.section	.text.CyGetUniqueId,"ax",%progbits
 2940              		.align	2
 2941              		.global	CyGetUniqueId
 2942              		.code	16
 2943              		.thumb_func
 2944              		.type	CyGetUniqueId, %function
 2945              	CyGetUniqueId:
 2946              	.LFB52:
3088:Generated_Source\PSoC4/CyLib.c **** 
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3091:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3092:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3093:Generated_Source\PSoC4/CyLib.c **** *
3094:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3095:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3096:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3097:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3098:Generated_Source\PSoC4/CyLib.c **** *
3099:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3100:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3101:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3102:Generated_Source\PSoC4/CyLib.c **** *
3103:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3104:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3105:Generated_Source\PSoC4/CyLib.c **** {
 2947              		.loc 1 3105 0
 2948              		.cfi_startproc
 2949              		@ args = 0, pretend = 0, frame = 8
 2950              		@ frame_needed = 1, uses_anonymous_args = 0
 2951 0000 80B5     		push	{r7, lr}
 2952              		.cfi_def_cfa_offset 8
 2953              		.cfi_offset 7, -8
 2954              		.cfi_offset 14, -4
 2955 0002 82B0     		sub	sp, sp, #8
 2956              		.cfi_def_cfa_offset 16
 2957 0004 00AF     		add	r7, sp, #0
 2958              		.cfi_def_cfa_register 7
 2959 0006 7860     		str	r0, [r7, #4]
3106:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3107:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2960              		.loc 1 3107 0
 2961 0008 254B     		ldr	r3, .L203
 2962 000a 1B78     		ldrb	r3, [r3]
 2963 000c DBB2     		uxtb	r3, r3
 2964 000e 1A00     		movs	r2, r3
 2965 0010 7B68     		ldr	r3, [r7, #4]
 2966 0012 1A60     		str	r2, [r3]
3108:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2967              		.loc 1 3108 0
 2968 0014 234B     		ldr	r3, .L203+4
 2969 0016 1B78     		ldrb	r3, [r3]
 2970 0018 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 108


 2971 001a 1A02     		lsls	r2, r3, #8
 2972 001c 7B68     		ldr	r3, [r7, #4]
 2973 001e 1B68     		ldr	r3, [r3]
 2974 0020 1A43     		orrs	r2, r3
 2975 0022 7B68     		ldr	r3, [r7, #4]
 2976 0024 1A60     		str	r2, [r3]
3109:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2977              		.loc 1 3109 0
 2978 0026 204B     		ldr	r3, .L203+8
 2979 0028 1B78     		ldrb	r3, [r3]
 2980 002a DBB2     		uxtb	r3, r3
 2981 002c 1A04     		lsls	r2, r3, #16
 2982 002e 7B68     		ldr	r3, [r7, #4]
 2983 0030 1B68     		ldr	r3, [r3]
 2984 0032 1A43     		orrs	r2, r3
 2985 0034 7B68     		ldr	r3, [r7, #4]
 2986 0036 1A60     		str	r2, [r3]
3110:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2987              		.loc 1 3110 0
 2988 0038 1C4B     		ldr	r3, .L203+12
 2989 003a 1B78     		ldrb	r3, [r3]
 2990 003c DBB2     		uxtb	r3, r3
 2991 003e 1A06     		lsls	r2, r3, #24
 2992 0040 7B68     		ldr	r3, [r7, #4]
 2993 0042 1B68     		ldr	r3, [r3]
 2994 0044 1A43     		orrs	r2, r3
 2995 0046 7B68     		ldr	r3, [r7, #4]
 2996 0048 1A60     		str	r2, [r3]
3111:Generated_Source\PSoC4/CyLib.c **** 
3112:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2997              		.loc 1 3112 0
 2998 004a 7B68     		ldr	r3, [r7, #4]
 2999 004c 0433     		adds	r3, r3, #4
 3000 004e 184A     		ldr	r2, .L203+16
 3001 0050 1278     		ldrb	r2, [r2]
 3002 0052 D2B2     		uxtb	r2, r2
 3003 0054 1A60     		str	r2, [r3]
3113:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 3004              		.loc 1 3113 0
 3005 0056 174B     		ldr	r3, .L203+20
 3006 0058 1B78     		ldrb	r3, [r3]
 3007 005a DBB2     		uxtb	r3, r3
 3008 005c 1902     		lsls	r1, r3, #8
 3009 005e 7B68     		ldr	r3, [r7, #4]
 3010 0060 0433     		adds	r3, r3, #4
 3011 0062 7A68     		ldr	r2, [r7, #4]
 3012 0064 0432     		adds	r2, r2, #4
 3013 0066 1268     		ldr	r2, [r2]
 3014 0068 0A43     		orrs	r2, r1
 3015 006a 1A60     		str	r2, [r3]
3114:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 3016              		.loc 1 3114 0
 3017 006c 124B     		ldr	r3, .L203+24
 3018 006e 1B78     		ldrb	r3, [r3]
 3019 0070 DBB2     		uxtb	r3, r3
 3020 0072 1904     		lsls	r1, r3, #16
 3021 0074 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 109


 3022 0076 0433     		adds	r3, r3, #4
 3023 0078 7A68     		ldr	r2, [r7, #4]
 3024 007a 0432     		adds	r2, r2, #4
 3025 007c 1268     		ldr	r2, [r2]
 3026 007e 0A43     		orrs	r2, r1
 3027 0080 1A60     		str	r2, [r3]
3115:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 3028              		.loc 1 3115 0
 3029 0082 0E4B     		ldr	r3, .L203+28
 3030 0084 1B78     		ldrb	r3, [r3]
 3031 0086 DBB2     		uxtb	r3, r3
 3032 0088 1906     		lsls	r1, r3, #24
 3033 008a 7B68     		ldr	r3, [r7, #4]
 3034 008c 0433     		adds	r3, r3, #4
 3035 008e 7A68     		ldr	r2, [r7, #4]
 3036 0090 0432     		adds	r2, r2, #4
 3037 0092 1268     		ldr	r2, [r2]
 3038 0094 0A43     		orrs	r2, r1
 3039 0096 1A60     		str	r2, [r3]
3116:Generated_Source\PSoC4/CyLib.c **** #else
3117:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3118:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3119:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3120:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3121:Generated_Source\PSoC4/CyLib.c **** 
3122:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3123:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3124:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3125:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3126:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3127:Generated_Source\PSoC4/CyLib.c **** }
 3040              		.loc 1 3127 0
 3041 0098 C046     		nop
 3042 009a BD46     		mov	sp, r7
 3043 009c 02B0     		add	sp, sp, #8
 3044              		@ sp needed
 3045 009e 80BD     		pop	{r7, pc}
 3046              	.L204:
 3047              		.align	2
 3048              	.L203:
 3049 00a0 78F2FF0F 		.word	268431992
 3050 00a4 79F2FF0F 		.word	268431993
 3051 00a8 7AF2FF0F 		.word	268431994
 3052 00ac 7BF2FF0F 		.word	268431995
 3053 00b0 7CF2FF0F 		.word	268431996
 3054 00b4 7DF2FF0F 		.word	268431997
 3055 00b8 7EF2FF0F 		.word	268431998
 3056 00bc 7FF2FF0F 		.word	268431999
 3057              		.cfi_endproc
 3058              	.LFE52:
 3059              		.size	CyGetUniqueId, .-CyGetUniqueId
 3060              		.text
 3061              	.Letext0:
 3062              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 3063              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 3064              		.section	.debug_info,"",%progbits
 3065              	.Ldebug_info0:
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 110


 3066 0000 CE090000 		.4byte	0x9ce
 3067 0004 0400     		.2byte	0x4
 3068 0006 00000000 		.4byte	.Ldebug_abbrev0
 3069 000a 04       		.byte	0x4
 3070 000b 01       		.uleb128 0x1
 3071 000c 45030000 		.4byte	.LASF111
 3072 0010 0C       		.byte	0xc
 3073 0011 98060000 		.4byte	.LASF112
 3074 0015 9B000000 		.4byte	.LASF113
 3075 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3076 001d 00000000 		.4byte	0
 3077 0021 00000000 		.4byte	.Ldebug_line0
 3078 0025 02       		.uleb128 0x2
 3079 0026 01       		.byte	0x1
 3080 0027 06       		.byte	0x6
 3081 0028 23010000 		.4byte	.LASF0
 3082 002c 02       		.uleb128 0x2
 3083 002d 01       		.byte	0x1
 3084 002e 08       		.byte	0x8
 3085 002f 04050000 		.4byte	.LASF1
 3086 0033 02       		.uleb128 0x2
 3087 0034 02       		.byte	0x2
 3088 0035 05       		.byte	0x5
 3089 0036 12050000 		.4byte	.LASF2
 3090 003a 02       		.uleb128 0x2
 3091 003b 02       		.byte	0x2
 3092 003c 07       		.byte	0x7
 3093 003d E6020000 		.4byte	.LASF3
 3094 0041 02       		.uleb128 0x2
 3095 0042 04       		.byte	0x4
 3096 0043 05       		.byte	0x5
 3097 0044 62010000 		.4byte	.LASF4
 3098 0048 02       		.uleb128 0x2
 3099 0049 04       		.byte	0x4
 3100 004a 07       		.byte	0x7
 3101 004b 85020000 		.4byte	.LASF5
 3102 004f 02       		.uleb128 0x2
 3103 0050 08       		.byte	0x8
 3104 0051 05       		.byte	0x5
 3105 0052 15010000 		.4byte	.LASF6
 3106 0056 02       		.uleb128 0x2
 3107 0057 08       		.byte	0x8
 3108 0058 07       		.byte	0x7
 3109 0059 84000000 		.4byte	.LASF7
 3110 005d 03       		.uleb128 0x3
 3111 005e 04       		.byte	0x4
 3112 005f 05       		.byte	0x5
 3113 0060 696E7400 		.ascii	"int\000"
 3114 0064 02       		.uleb128 0x2
 3115 0065 04       		.byte	0x4
 3116 0066 07       		.byte	0x7
 3117 0067 69020000 		.4byte	.LASF8
 3118 006b 04       		.uleb128 0x4
 3119 006c 8D010000 		.4byte	.LASF9
 3120 0070 02       		.byte	0x2
 3121 0071 E401     		.2byte	0x1e4
 3122 0073 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 111


 3123 0077 04       		.uleb128 0x4
 3124 0078 17000000 		.4byte	.LASF10
 3125 007c 02       		.byte	0x2
 3126 007d E501     		.2byte	0x1e5
 3127 007f 3A000000 		.4byte	0x3a
 3128 0083 04       		.uleb128 0x4
 3129 0084 CD010000 		.4byte	.LASF11
 3130 0088 02       		.byte	0x2
 3131 0089 E601     		.2byte	0x1e6
 3132 008b 48000000 		.4byte	0x48
 3133 008f 02       		.uleb128 0x2
 3134 0090 04       		.byte	0x4
 3135 0091 04       		.byte	0x4
 3136 0092 AB040000 		.4byte	.LASF12
 3137 0096 02       		.uleb128 0x2
 3138 0097 08       		.byte	0x8
 3139 0098 04       		.byte	0x4
 3140 0099 A9010000 		.4byte	.LASF13
 3141 009d 02       		.uleb128 0x2
 3142 009e 01       		.byte	0x1
 3143 009f 08       		.byte	0x8
 3144 00a0 66050000 		.4byte	.LASF14
 3145 00a4 04       		.uleb128 0x4
 3146 00a5 6D060000 		.4byte	.LASF15
 3147 00a9 02       		.byte	0x2
 3148 00aa 8602     		.2byte	0x286
 3149 00ac 48000000 		.4byte	0x48
 3150 00b0 04       		.uleb128 0x4
 3151 00b1 EE040000 		.4byte	.LASF16
 3152 00b5 02       		.byte	0x2
 3153 00b6 8E02     		.2byte	0x28e
 3154 00b8 BC000000 		.4byte	0xbc
 3155 00bc 05       		.uleb128 0x5
 3156 00bd 6B000000 		.4byte	0x6b
 3157 00c1 04       		.uleb128 0x4
 3158 00c2 FA030000 		.4byte	.LASF17
 3159 00c6 02       		.byte	0x2
 3160 00c7 9002     		.2byte	0x290
 3161 00c9 CD000000 		.4byte	0xcd
 3162 00cd 05       		.uleb128 0x5
 3163 00ce 83000000 		.4byte	0x83
 3164 00d2 04       		.uleb128 0x4
 3165 00d3 6B050000 		.4byte	.LASF18
 3166 00d7 02       		.byte	0x2
 3167 00d8 A002     		.2byte	0x2a0
 3168 00da DE000000 		.4byte	0xde
 3169 00de 06       		.uleb128 0x6
 3170 00df 04       		.byte	0x4
 3171 00e0 E4000000 		.4byte	0xe4
 3172 00e4 07       		.uleb128 0x7
 3173 00e5 02       		.uleb128 0x2
 3174 00e6 08       		.byte	0x8
 3175 00e7 04       		.byte	0x4
 3176 00e8 37040000 		.4byte	.LASF19
 3177 00ec 02       		.uleb128 0x2
 3178 00ed 04       		.byte	0x4
 3179 00ee 07       		.byte	0x7
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 112


 3180 00ef 1C040000 		.4byte	.LASF20
 3181 00f3 08       		.uleb128 0x8
 3182 00f4 C0040000 		.4byte	.LASF21
 3183 00f8 03       		.byte	0x3
 3184 00f9 F5       		.byte	0xf5
 3185 00fa DE000000 		.4byte	0xde
 3186 00fe 09       		.uleb128 0x9
 3187 00ff 76060000 		.4byte	.LASF22
 3188 0103 01       		.byte	0x1
 3189 0104 6C       		.byte	0x6c
 3190 0105 00000000 		.4byte	.LFB2
 3191 0109 1C000000 		.4byte	.LFE2-.LFB2
 3192 010d 01       		.uleb128 0x1
 3193 010e 9C       		.byte	0x9c
 3194 010f 09       		.uleb128 0x9
 3195 0110 B2020000 		.4byte	.LASF23
 3196 0114 01       		.byte	0x1
 3197 0115 8C       		.byte	0x8c
 3198 0116 00000000 		.4byte	.LFB3
 3199 011a 1C000000 		.4byte	.LFE3-.LFB3
 3200 011e 01       		.uleb128 0x1
 3201 011f 9C       		.byte	0x9c
 3202 0120 0A       		.uleb128 0xa
 3203 0121 27000000 		.4byte	.LASF26
 3204 0125 01       		.byte	0x1
 3205 0126 0102     		.2byte	0x201
 3206 0128 00000000 		.4byte	.LFB4
 3207 012c 48000000 		.4byte	.LFE4-.LFB4
 3208 0130 01       		.uleb128 0x1
 3209 0131 9C       		.byte	0x9c
 3210 0132 64010000 		.4byte	0x164
 3211 0136 0B       		.uleb128 0xb
 3212 0137 3A050000 		.4byte	.LASF28
 3213 013b 01       		.byte	0x1
 3214 013c 0102     		.2byte	0x201
 3215 013e 83000000 		.4byte	0x83
 3216 0142 02       		.uleb128 0x2
 3217 0143 91       		.byte	0x91
 3218 0144 64       		.sleb128 -28
 3219 0145 0C       		.uleb128 0xc
 3220 0146 40010000 		.4byte	.LASF24
 3221 014a 01       		.byte	0x1
 3222 014b 0302     		.2byte	0x203
 3223 014d 6B000000 		.4byte	0x6b
 3224 0151 02       		.uleb128 0x2
 3225 0152 91       		.byte	0x91
 3226 0153 6F       		.sleb128 -17
 3227 0154 0C       		.uleb128 0xc
 3228 0155 C4060000 		.4byte	.LASF25
 3229 0159 01       		.byte	0x1
 3230 015a 0402     		.2byte	0x204
 3231 015c 83000000 		.4byte	0x83
 3232 0160 02       		.uleb128 0x2
 3233 0161 91       		.byte	0x91
 3234 0162 68       		.sleb128 -24
 3235 0163 00       		.byte	0
 3236 0164 0D       		.uleb128 0xd
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 113


 3237 0165 E5030000 		.4byte	.LASF27
 3238 0169 01       		.byte	0x1
 3239 016a 4902     		.2byte	0x249
 3240 016c 00000000 		.4byte	.LFB5
 3241 0170 50000000 		.4byte	.LFE5-.LFB5
 3242 0174 01       		.uleb128 0x1
 3243 0175 9C       		.byte	0x9c
 3244 0176 8A010000 		.4byte	0x18a
 3245 017a 0B       		.uleb128 0xb
 3246 017b A2010000 		.4byte	.LASF29
 3247 017f 01       		.byte	0x1
 3248 0180 4902     		.2byte	0x249
 3249 0182 83000000 		.4byte	0x83
 3250 0186 02       		.uleb128 0x2
 3251 0187 91       		.byte	0x91
 3252 0188 74       		.sleb128 -12
 3253 0189 00       		.byte	0
 3254 018a 0E       		.uleb128 0xe
 3255 018b EF010000 		.4byte	.LASF39
 3256 018f 01       		.byte	0x1
 3257 0190 6E02     		.2byte	0x26e
 3258 0192 83000000 		.4byte	0x83
 3259 0196 00000000 		.4byte	.LFB6
 3260 019a 34000000 		.4byte	.LFE6-.LFB6
 3261 019e 01       		.uleb128 0x1
 3262 019f 9C       		.byte	0x9c
 3263 01a0 C3010000 		.4byte	0x1c3
 3264 01a4 0C       		.uleb128 0xc
 3265 01a5 40010000 		.4byte	.LASF24
 3266 01a9 01       		.byte	0x1
 3267 01aa 7002     		.2byte	0x270
 3268 01ac 6B000000 		.4byte	0x6b
 3269 01b0 02       		.uleb128 0x2
 3270 01b1 91       		.byte	0x91
 3271 01b2 6F       		.sleb128 -17
 3272 01b3 0C       		.uleb128 0xc
 3273 01b4 53040000 		.4byte	.LASF30
 3274 01b8 01       		.byte	0x1
 3275 01b9 7102     		.2byte	0x271
 3276 01bb 83000000 		.4byte	0x83
 3277 01bf 02       		.uleb128 0x2
 3278 01c0 91       		.byte	0x91
 3279 01c1 68       		.sleb128 -24
 3280 01c2 00       		.byte	0
 3281 01c3 0A       		.uleb128 0xa
 3282 01c4 88050000 		.4byte	.LASF31
 3283 01c8 01       		.byte	0x1
 3284 01c9 AB02     		.2byte	0x2ab
 3285 01cb 00000000 		.4byte	.LFB7
 3286 01cf 48000000 		.4byte	.LFE7-.LFB7
 3287 01d3 01       		.uleb128 0x1
 3288 01d4 9C       		.byte	0x9c
 3289 01d5 F8010000 		.4byte	0x1f8
 3290 01d9 0B       		.uleb128 0xb
 3291 01da 51060000 		.4byte	.LASF32
 3292 01de 01       		.byte	0x1
 3293 01df AB02     		.2byte	0x2ab
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 114


 3294 01e1 83000000 		.4byte	0x83
 3295 01e5 02       		.uleb128 0x2
 3296 01e6 91       		.byte	0x91
 3297 01e7 64       		.sleb128 -28
 3298 01e8 0C       		.uleb128 0xc
 3299 01e9 40010000 		.4byte	.LASF24
 3300 01ed 01       		.byte	0x1
 3301 01ee AD02     		.2byte	0x2ad
 3302 01f0 6B000000 		.4byte	0x6b
 3303 01f4 02       		.uleb128 0x2
 3304 01f5 91       		.byte	0x91
 3305 01f6 6F       		.sleb128 -17
 3306 01f7 00       		.byte	0
 3307 01f8 0A       		.uleb128 0xa
 3308 01f9 30030000 		.4byte	.LASF33
 3309 01fd 01       		.byte	0x1
 3310 01fe E502     		.2byte	0x2e5
 3311 0200 00000000 		.4byte	.LFB8
 3312 0204 E4010000 		.4byte	.LFE8-.LFB8
 3313 0208 01       		.uleb128 0x1
 3314 0209 9C       		.byte	0x9c
 3315 020a 69020000 		.4byte	0x269
 3316 020e 0B       		.uleb128 0xb
 3317 020f 2F010000 		.4byte	.LASF34
 3318 0213 01       		.byte	0x1
 3319 0214 E502     		.2byte	0x2e5
 3320 0216 83000000 		.4byte	0x83
 3321 021a 02       		.uleb128 0x2
 3322 021b 91       		.byte	0x91
 3323 021c 64       		.sleb128 -28
 3324 021d 0C       		.uleb128 0xc
 3325 021e 0F000000 		.4byte	.LASF35
 3326 0222 01       		.byte	0x1
 3327 0223 EB02     		.2byte	0x2eb
 3328 0225 6B000000 		.4byte	0x6b
 3329 0229 02       		.uleb128 0x2
 3330 022a 91       		.byte	0x91
 3331 022b 6F       		.sleb128 -17
 3332 022c 0C       		.uleb128 0xc
 3333 022d 4B040000 		.4byte	.LASF36
 3334 0231 01       		.byte	0x1
 3335 0232 EC02     		.2byte	0x2ec
 3336 0234 6B000000 		.4byte	0x6b
 3337 0238 02       		.uleb128 0x2
 3338 0239 91       		.byte	0x91
 3339 023a 6E       		.sleb128 -18
 3340 023b 0C       		.uleb128 0xc
 3341 023c 87060000 		.4byte	.LASF37
 3342 0240 01       		.byte	0x1
 3343 0241 ED02     		.2byte	0x2ed
 3344 0243 6B000000 		.4byte	0x6b
 3345 0247 02       		.uleb128 0x2
 3346 0248 91       		.byte	0x91
 3347 0249 6B       		.sleb128 -21
 3348 024a 0C       		.uleb128 0xc
 3349 024b 6F000000 		.4byte	.LASF38
 3350 024f 01       		.byte	0x1
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 115


 3351 0250 EE02     		.2byte	0x2ee
 3352 0252 6B000000 		.4byte	0x6b
 3353 0256 02       		.uleb128 0x2
 3354 0257 91       		.byte	0x91
 3355 0258 6D       		.sleb128 -19
 3356 0259 0C       		.uleb128 0xc
 3357 025a 40010000 		.4byte	.LASF24
 3358 025e 01       		.byte	0x1
 3359 025f F902     		.2byte	0x2f9
 3360 0261 6B000000 		.4byte	0x6b
 3361 0265 02       		.uleb128 0x2
 3362 0266 91       		.byte	0x91
 3363 0267 6C       		.sleb128 -20
 3364 0268 00       		.byte	0
 3365 0269 0E       		.uleb128 0xe
 3366 026a 44050000 		.4byte	.LASF40
 3367 026e 01       		.byte	0x1
 3368 026f 6504     		.2byte	0x465
 3369 0271 A4000000 		.4byte	0xa4
 3370 0275 00000000 		.4byte	.LFB9
 3371 0279 74000000 		.4byte	.LFE9-.LFB9
 3372 027d 01       		.uleb128 0x1
 3373 027e 9C       		.byte	0x9c
 3374 027f A2020000 		.4byte	0x2a2
 3375 0283 0B       		.uleb128 0xb
 3376 0284 47060000 		.4byte	.LASF41
 3377 0288 01       		.byte	0x1
 3378 0289 6504     		.2byte	0x465
 3379 028b 83000000 		.4byte	0x83
 3380 028f 02       		.uleb128 0x2
 3381 0290 91       		.byte	0x91
 3382 0291 6C       		.sleb128 -20
 3383 0292 0C       		.uleb128 0xc
 3384 0293 0F040000 		.4byte	.LASF42
 3385 0297 01       		.byte	0x1
 3386 0298 6704     		.2byte	0x467
 3387 029a A4000000 		.4byte	0xa4
 3388 029e 02       		.uleb128 0x2
 3389 029f 91       		.byte	0x91
 3390 02a0 74       		.sleb128 -12
 3391 02a1 00       		.byte	0
 3392 02a2 0F       		.uleb128 0xf
 3393 02a3 29060000 		.4byte	.LASF43
 3394 02a7 01       		.byte	0x1
 3395 02a8 F304     		.2byte	0x4f3
 3396 02aa 00000000 		.4byte	.LFB10
 3397 02ae 30000000 		.4byte	.LFE10-.LFB10
 3398 02b2 01       		.uleb128 0x1
 3399 02b3 9C       		.byte	0x9c
 3400 02b4 10       		.uleb128 0x10
 3401 02b5 D4010000 		.4byte	.LASF44
 3402 02b9 01       		.byte	0x1
 3403 02ba 1505     		.2byte	0x515
 3404 02bc 83000000 		.4byte	0x83
 3405 02c0 00000000 		.4byte	.LFB11
 3406 02c4 20000000 		.4byte	.LFE11-.LFB11
 3407 02c8 01       		.uleb128 0x1
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 116


 3408 02c9 9C       		.byte	0x9c
 3409 02ca DE020000 		.4byte	0x2de
 3410 02ce 0C       		.uleb128 0xc
 3411 02cf F8060000 		.4byte	.LASF45
 3412 02d3 01       		.byte	0x1
 3413 02d4 1705     		.2byte	0x517
 3414 02d6 83000000 		.4byte	0x83
 3415 02da 02       		.uleb128 0x2
 3416 02db 91       		.byte	0x91
 3417 02dc 74       		.sleb128 -12
 3418 02dd 00       		.byte	0
 3419 02de 0A       		.uleb128 0xa
 3420 02df 59060000 		.4byte	.LASF46
 3421 02e3 01       		.byte	0x1
 3422 02e4 4405     		.2byte	0x544
 3423 02e6 00000000 		.4byte	.LFB12
 3424 02ea 58000000 		.4byte	.LFE12-.LFB12
 3425 02ee 01       		.uleb128 0x1
 3426 02ef 9C       		.byte	0x9c
 3427 02f0 13030000 		.4byte	0x313
 3428 02f4 0B       		.uleb128 0xb
 3429 02f5 51060000 		.4byte	.LASF32
 3430 02f9 01       		.byte	0x1
 3431 02fa 4405     		.2byte	0x544
 3432 02fc 83000000 		.4byte	0x83
 3433 0300 02       		.uleb128 0x2
 3434 0301 91       		.byte	0x91
 3435 0302 64       		.sleb128 -28
 3436 0303 0C       		.uleb128 0xc
 3437 0304 40010000 		.4byte	.LASF24
 3438 0308 01       		.byte	0x1
 3439 0309 4605     		.2byte	0x546
 3440 030b 6B000000 		.4byte	0x6b
 3441 030f 02       		.uleb128 0x2
 3442 0310 91       		.byte	0x91
 3443 0311 6F       		.sleb128 -17
 3444 0312 00       		.byte	0
 3445 0313 0A       		.uleb128 0xa
 3446 0314 B1040000 		.4byte	.LASF47
 3447 0318 01       		.byte	0x1
 3448 0319 C008     		.2byte	0x8c0
 3449 031b 00000000 		.4byte	.LFB13
 3450 031f 64000000 		.4byte	.LFE13-.LFB13
 3451 0323 01       		.uleb128 0x1
 3452 0324 9C       		.byte	0x9c
 3453 0325 39030000 		.4byte	0x339
 3454 0329 0B       		.uleb128 0xb
 3455 032a F3040000 		.4byte	.LASF48
 3456 032e 01       		.byte	0x1
 3457 032f C008     		.2byte	0x8c0
 3458 0331 83000000 		.4byte	0x83
 3459 0335 02       		.uleb128 0x2
 3460 0336 91       		.byte	0x91
 3461 0337 74       		.sleb128 -12
 3462 0338 00       		.byte	0
 3463 0339 0F       		.uleb128 0xf
 3464 033a 0A060000 		.4byte	.LASF49
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 117


 3465 033e 01       		.byte	0x1
 3466 033f DE08     		.2byte	0x8de
 3467 0341 00000000 		.4byte	.LFB14
 3468 0345 2C000000 		.4byte	.LFE14-.LFB14
 3469 0349 01       		.uleb128 0x1
 3470 034a 9C       		.byte	0x9c
 3471 034b 11       		.uleb128 0x11
 3472 034c 97020000 		.4byte	.LASF89
 3473 0350 01       		.byte	0x1
 3474 0351 F008     		.2byte	0x8f0
 3475 0353 83000000 		.4byte	0x83
 3476 0357 00000000 		.4byte	.LFB15
 3477 035b 18000000 		.4byte	.LFE15-.LFB15
 3478 035f 01       		.uleb128 0x1
 3479 0360 9C       		.byte	0x9c
 3480 0361 0F       		.uleb128 0xf
 3481 0362 B6010000 		.4byte	.LASF50
 3482 0366 01       		.byte	0x1
 3483 0367 0009     		.2byte	0x900
 3484 0369 00000000 		.4byte	.LFB16
 3485 036d 14000000 		.4byte	.LFE16-.LFB16
 3486 0371 01       		.uleb128 0x1
 3487 0372 9C       		.byte	0x9c
 3488 0373 10       		.uleb128 0x10
 3489 0374 D2020000 		.4byte	.LASF51
 3490 0378 01       		.byte	0x1
 3491 0379 1A09     		.2byte	0x91a
 3492 037b 83000000 		.4byte	0x83
 3493 037f 00000000 		.4byte	.LFB17
 3494 0383 30000000 		.4byte	.LFE17-.LFB17
 3495 0387 01       		.uleb128 0x1
 3496 0388 9C       		.byte	0x9c
 3497 0389 AC030000 		.4byte	0x3ac
 3498 038d 0B       		.uleb128 0xb
 3499 038e 5F050000 		.4byte	.LASF52
 3500 0392 01       		.byte	0x1
 3501 0393 1A09     		.2byte	0x91a
 3502 0395 83000000 		.4byte	0x83
 3503 0399 02       		.uleb128 0x2
 3504 039a 91       		.byte	0x91
 3505 039b 6C       		.sleb128 -20
 3506 039c 0C       		.uleb128 0xc
 3507 039d 0F040000 		.4byte	.LASF42
 3508 03a1 01       		.byte	0x1
 3509 03a2 1C09     		.2byte	0x91c
 3510 03a4 83000000 		.4byte	0x83
 3511 03a8 02       		.uleb128 0x2
 3512 03a9 91       		.byte	0x91
 3513 03aa 74       		.sleb128 -12
 3514 03ab 00       		.byte	0
 3515 03ac 10       		.uleb128 0x10
 3516 03ad 61000000 		.4byte	.LASF53
 3517 03b1 01       		.byte	0x1
 3518 03b2 3109     		.2byte	0x931
 3519 03b4 83000000 		.4byte	0x83
 3520 03b8 00000000 		.4byte	.LFB18
 3521 03bc 24000000 		.4byte	.LFE18-.LFB18
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 118


 3522 03c0 01       		.uleb128 0x1
 3523 03c1 9C       		.byte	0x9c
 3524 03c2 D6030000 		.4byte	0x3d6
 3525 03c6 0C       		.uleb128 0xc
 3526 03c7 1E000000 		.4byte	.LASF54
 3527 03cb 01       		.byte	0x1
 3528 03cc 3309     		.2byte	0x933
 3529 03ce 83000000 		.4byte	0x83
 3530 03d2 02       		.uleb128 0x2
 3531 03d3 91       		.byte	0x91
 3532 03d4 74       		.sleb128 -12
 3533 03d5 00       		.byte	0
 3534 03d6 0D       		.uleb128 0xd
 3535 03d7 D1000000 		.4byte	.LASF55
 3536 03db 01       		.byte	0x1
 3537 03dc 4809     		.2byte	0x948
 3538 03de 00000000 		.4byte	.LFB19
 3539 03e2 1C000000 		.4byte	.LFE19-.LFB19
 3540 03e6 01       		.uleb128 0x1
 3541 03e7 9C       		.byte	0x9c
 3542 03e8 FC030000 		.4byte	0x3fc
 3543 03ec 0B       		.uleb128 0xb
 3544 03ed EA010000 		.4byte	.LASF56
 3545 03f1 01       		.byte	0x1
 3546 03f2 4809     		.2byte	0x948
 3547 03f4 83000000 		.4byte	0x83
 3548 03f8 02       		.uleb128 0x2
 3549 03f9 91       		.byte	0x91
 3550 03fa 74       		.sleb128 -12
 3551 03fb 00       		.byte	0
 3552 03fc 0E       		.uleb128 0xe
 3553 03fd D3030000 		.4byte	.LASF57
 3554 0401 01       		.byte	0x1
 3555 0402 6109     		.2byte	0x961
 3556 0404 D2000000 		.4byte	0xd2
 3557 0408 00000000 		.4byte	.LFB20
 3558 040c 48000000 		.4byte	.LFE20-.LFB20
 3559 0410 01       		.uleb128 0x1
 3560 0411 9C       		.byte	0x9c
 3561 0412 53040000 		.4byte	0x453
 3562 0416 0B       		.uleb128 0xb
 3563 0417 20030000 		.4byte	.LASF58
 3564 041b 01       		.byte	0x1
 3565 041c 6109     		.2byte	0x961
 3566 041e 6B000000 		.4byte	0x6b
 3567 0422 02       		.uleb128 0x2
 3568 0423 91       		.byte	0x91
 3569 0424 6F       		.sleb128 -17
 3570 0425 0B       		.uleb128 0xb
 3571 0426 43040000 		.4byte	.LASF59
 3572 042a 01       		.byte	0x1
 3573 042b 6109     		.2byte	0x961
 3574 042d D2000000 		.4byte	0xd2
 3575 0431 02       		.uleb128 0x2
 3576 0432 91       		.byte	0x91
 3577 0433 68       		.sleb128 -24
 3578 0434 0C       		.uleb128 0xc
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 119


 3579 0435 53000000 		.4byte	.LASF60
 3580 0439 01       		.byte	0x1
 3581 043a 6309     		.2byte	0x963
 3582 043c D2000000 		.4byte	0xd2
 3583 0440 02       		.uleb128 0x2
 3584 0441 91       		.byte	0x91
 3585 0442 70       		.sleb128 -16
 3586 0443 0C       		.uleb128 0xc
 3587 0444 00000000 		.4byte	.LASF61
 3588 0448 01       		.byte	0x1
 3589 0449 6409     		.2byte	0x964
 3590 044b 53040000 		.4byte	0x453
 3591 044f 02       		.uleb128 0x2
 3592 0450 91       		.byte	0x91
 3593 0451 74       		.sleb128 -12
 3594 0452 00       		.byte	0
 3595 0453 06       		.uleb128 0x6
 3596 0454 04       		.byte	0x4
 3597 0455 D2000000 		.4byte	0xd2
 3598 0459 0E       		.uleb128 0xe
 3599 045a 28050000 		.4byte	.LASF62
 3600 045e 01       		.byte	0x1
 3601 045f 8309     		.2byte	0x983
 3602 0461 D2000000 		.4byte	0xd2
 3603 0465 00000000 		.4byte	.LFB21
 3604 0469 34000000 		.4byte	.LFE21-.LFB21
 3605 046d 01       		.uleb128 0x1
 3606 046e 9C       		.byte	0x9c
 3607 046f 92040000 		.4byte	0x492
 3608 0473 0B       		.uleb128 0xb
 3609 0474 20030000 		.4byte	.LASF58
 3610 0478 01       		.byte	0x1
 3611 0479 8309     		.2byte	0x983
 3612 047b 6B000000 		.4byte	0x6b
 3613 047f 02       		.uleb128 0x2
 3614 0480 91       		.byte	0x91
 3615 0481 6F       		.sleb128 -17
 3616 0482 0C       		.uleb128 0xc
 3617 0483 00000000 		.4byte	.LASF61
 3618 0487 01       		.byte	0x1
 3619 0488 8509     		.2byte	0x985
 3620 048a 53040000 		.4byte	0x453
 3621 048e 02       		.uleb128 0x2
 3622 048f 91       		.byte	0x91
 3623 0490 74       		.sleb128 -12
 3624 0491 00       		.byte	0
 3625 0492 0E       		.uleb128 0xe
 3626 0493 11030000 		.4byte	.LASF63
 3627 0497 01       		.byte	0x1
 3628 0498 9909     		.2byte	0x999
 3629 049a D2000000 		.4byte	0xd2
 3630 049e 00000000 		.4byte	.LFB22
 3631 04a2 4C000000 		.4byte	.LFE22-.LFB22
 3632 04a6 01       		.uleb128 0x1
 3633 04a7 9C       		.byte	0x9c
 3634 04a8 E9040000 		.4byte	0x4e9
 3635 04ac 0B       		.uleb128 0xb
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 120


 3636 04ad 20030000 		.4byte	.LASF58
 3637 04b1 01       		.byte	0x1
 3638 04b2 9909     		.2byte	0x999
 3639 04b4 6B000000 		.4byte	0x6b
 3640 04b8 02       		.uleb128 0x2
 3641 04b9 91       		.byte	0x91
 3642 04ba 6F       		.sleb128 -17
 3643 04bb 0B       		.uleb128 0xb
 3644 04bc 43040000 		.4byte	.LASF59
 3645 04c0 01       		.byte	0x1
 3646 04c1 9909     		.2byte	0x999
 3647 04c3 D2000000 		.4byte	0xd2
 3648 04c7 02       		.uleb128 0x2
 3649 04c8 91       		.byte	0x91
 3650 04c9 68       		.sleb128 -24
 3651 04ca 0C       		.uleb128 0xc
 3652 04cb 53000000 		.4byte	.LASF60
 3653 04cf 01       		.byte	0x1
 3654 04d0 9B09     		.2byte	0x99b
 3655 04d2 D2000000 		.4byte	0xd2
 3656 04d6 02       		.uleb128 0x2
 3657 04d7 91       		.byte	0x91
 3658 04d8 70       		.sleb128 -16
 3659 04d9 0C       		.uleb128 0xc
 3660 04da 00000000 		.4byte	.LASF61
 3661 04de 01       		.byte	0x1
 3662 04df 9C09     		.2byte	0x99c
 3663 04e1 53040000 		.4byte	0x453
 3664 04e5 02       		.uleb128 0x2
 3665 04e6 91       		.byte	0x91
 3666 04e7 74       		.sleb128 -12
 3667 04e8 00       		.byte	0
 3668 04e9 0E       		.uleb128 0xe
 3669 04ea D2040000 		.4byte	.LASF64
 3670 04ee 01       		.byte	0x1
 3671 04ef B509     		.2byte	0x9b5
 3672 04f1 D2000000 		.4byte	0xd2
 3673 04f5 00000000 		.4byte	.LFB23
 3674 04f9 36000000 		.4byte	.LFE23-.LFB23
 3675 04fd 01       		.uleb128 0x1
 3676 04fe 9C       		.byte	0x9c
 3677 04ff 22050000 		.4byte	0x522
 3678 0503 0B       		.uleb128 0xb
 3679 0504 20030000 		.4byte	.LASF58
 3680 0508 01       		.byte	0x1
 3681 0509 B509     		.2byte	0x9b5
 3682 050b 6B000000 		.4byte	0x6b
 3683 050f 02       		.uleb128 0x2
 3684 0510 91       		.byte	0x91
 3685 0511 6F       		.sleb128 -17
 3686 0512 0C       		.uleb128 0xc
 3687 0513 00000000 		.4byte	.LASF61
 3688 0517 01       		.byte	0x1
 3689 0518 B709     		.2byte	0x9b7
 3690 051a 53040000 		.4byte	0x453
 3691 051e 02       		.uleb128 0x2
 3692 051f 91       		.byte	0x91
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 121


 3693 0520 74       		.sleb128 -12
 3694 0521 00       		.byte	0
 3695 0522 0A       		.uleb128 0xa
 3696 0523 9A040000 		.4byte	.LASF65
 3697 0527 01       		.byte	0x1
 3698 0528 C809     		.2byte	0x9c8
 3699 052a 00000000 		.4byte	.LFB24
 3700 052e A8000000 		.4byte	.LFE24-.LFB24
 3701 0532 01       		.uleb128 0x1
 3702 0533 9C       		.byte	0x9c
 3703 0534 84050000 		.4byte	0x584
 3704 0538 0B       		.uleb128 0xb
 3705 0539 20030000 		.4byte	.LASF58
 3706 053d 01       		.byte	0x1
 3707 053e C809     		.2byte	0x9c8
 3708 0540 6B000000 		.4byte	0x6b
 3709 0544 02       		.uleb128 0x2
 3710 0545 91       		.byte	0x91
 3711 0546 5F       		.sleb128 -33
 3712 0547 0B       		.uleb128 0xb
 3713 0548 27030000 		.4byte	.LASF66
 3714 054c 01       		.byte	0x1
 3715 054d C809     		.2byte	0x9c8
 3716 054f 6B000000 		.4byte	0x6b
 3717 0553 02       		.uleb128 0x2
 3718 0554 91       		.byte	0x91
 3719 0555 5E       		.sleb128 -34
 3720 0556 0C       		.uleb128 0xc
 3721 0557 40010000 		.4byte	.LASF24
 3722 055b 01       		.byte	0x1
 3723 055c CA09     		.2byte	0x9ca
 3724 055e 6B000000 		.4byte	0x6b
 3725 0562 02       		.uleb128 0x2
 3726 0563 91       		.byte	0x91
 3727 0564 6B       		.sleb128 -21
 3728 0565 0C       		.uleb128 0xc
 3729 0566 B0010000 		.4byte	.LASF67
 3730 056a 01       		.byte	0x1
 3731 056b CB09     		.2byte	0x9cb
 3732 056d 83000000 		.4byte	0x83
 3733 0571 02       		.uleb128 0x2
 3734 0572 91       		.byte	0x91
 3735 0573 6C       		.sleb128 -20
 3736 0574 0C       		.uleb128 0xc
 3737 0575 33020000 		.4byte	.LASF68
 3738 0579 01       		.byte	0x1
 3739 057a CC09     		.2byte	0x9cc
 3740 057c 83000000 		.4byte	0x83
 3741 0580 02       		.uleb128 0x2
 3742 0581 91       		.byte	0x91
 3743 0582 64       		.sleb128 -28
 3744 0583 00       		.byte	0
 3745 0584 0E       		.uleb128 0xe
 3746 0585 07020000 		.4byte	.LASF69
 3747 0589 01       		.byte	0x1
 3748 058a EA09     		.2byte	0x9ea
 3749 058c 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 122


 3750 0590 00000000 		.4byte	.LFB25
 3751 0594 58000000 		.4byte	.LFE25-.LFB25
 3752 0598 01       		.uleb128 0x1
 3753 0599 9C       		.byte	0x9c
 3754 059a BD050000 		.4byte	0x5bd
 3755 059e 0B       		.uleb128 0xb
 3756 059f 20030000 		.4byte	.LASF58
 3757 05a3 01       		.byte	0x1
 3758 05a4 EA09     		.2byte	0x9ea
 3759 05a6 6B000000 		.4byte	0x6b
 3760 05aa 02       		.uleb128 0x2
 3761 05ab 91       		.byte	0x91
 3762 05ac 6F       		.sleb128 -17
 3763 05ad 0C       		.uleb128 0xc
 3764 05ae 27030000 		.4byte	.LASF66
 3765 05b2 01       		.byte	0x1
 3766 05b3 EC09     		.2byte	0x9ec
 3767 05b5 6B000000 		.4byte	0x6b
 3768 05b9 02       		.uleb128 0x2
 3769 05ba 91       		.byte	0x91
 3770 05bb 77       		.sleb128 -9
 3771 05bc 00       		.byte	0
 3772 05bd 0D       		.uleb128 0xd
 3773 05be 1C050000 		.4byte	.LASF70
 3774 05c2 01       		.byte	0x1
 3775 05c3 FF09     		.2byte	0x9ff
 3776 05c5 00000000 		.4byte	.LFB26
 3777 05c9 2C000000 		.4byte	.LFE26-.LFB26
 3778 05cd 01       		.uleb128 0x1
 3779 05ce 9C       		.byte	0x9c
 3780 05cf E3050000 		.4byte	0x5e3
 3781 05d3 0B       		.uleb128 0xb
 3782 05d4 20030000 		.4byte	.LASF58
 3783 05d8 01       		.byte	0x1
 3784 05d9 FF09     		.2byte	0x9ff
 3785 05db 6B000000 		.4byte	0x6b
 3786 05df 02       		.uleb128 0x2
 3787 05e0 91       		.byte	0x91
 3788 05e1 77       		.sleb128 -9
 3789 05e2 00       		.byte	0
 3790 05e3 10       		.uleb128 0x10
 3791 05e4 07010000 		.4byte	.LASF71
 3792 05e8 01       		.byte	0x1
 3793 05e9 110A     		.2byte	0xa11
 3794 05eb 6B000000 		.4byte	0x6b
 3795 05ef 00000000 		.4byte	.LFB27
 3796 05f3 30000000 		.4byte	.LFE27-.LFB27
 3797 05f7 01       		.uleb128 0x1
 3798 05f8 9C       		.byte	0x9c
 3799 05f9 0D060000 		.4byte	0x60d
 3800 05fd 0B       		.uleb128 0xb
 3801 05fe 20030000 		.4byte	.LASF58
 3802 0602 01       		.byte	0x1
 3803 0603 110A     		.2byte	0xa11
 3804 0605 6B000000 		.4byte	0x6b
 3805 0609 02       		.uleb128 0x2
 3806 060a 91       		.byte	0x91
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 123


 3807 060b 77       		.sleb128 -9
 3808 060c 00       		.byte	0
 3809 060d 0D       		.uleb128 0xd
 3810 060e 6B010000 		.4byte	.LASF72
 3811 0612 01       		.byte	0x1
 3812 0613 210A     		.2byte	0xa21
 3813 0615 00000000 		.4byte	.LFB28
 3814 0619 2C000000 		.4byte	.LFE28-.LFB28
 3815 061d 01       		.uleb128 0x1
 3816 061e 9C       		.byte	0x9c
 3817 061f 33060000 		.4byte	0x633
 3818 0623 0B       		.uleb128 0xb
 3819 0624 20030000 		.4byte	.LASF58
 3820 0628 01       		.byte	0x1
 3821 0629 210A     		.2byte	0xa21
 3822 062b 6B000000 		.4byte	0x6b
 3823 062f 02       		.uleb128 0x2
 3824 0630 91       		.byte	0x91
 3825 0631 77       		.sleb128 -9
 3826 0632 00       		.byte	0
 3827 0633 0D       		.uleb128 0xd
 3828 0634 C2020000 		.4byte	.LASF73
 3829 0638 01       		.byte	0x1
 3830 0639 2F0A     		.2byte	0xa2f
 3831 063b 00000000 		.4byte	.LFB29
 3832 063f 2C000000 		.4byte	.LFE29-.LFB29
 3833 0643 01       		.uleb128 0x1
 3834 0644 9C       		.byte	0x9c
 3835 0645 59060000 		.4byte	0x659
 3836 0649 0B       		.uleb128 0xb
 3837 064a 20030000 		.4byte	.LASF58
 3838 064e 01       		.byte	0x1
 3839 064f 2F0A     		.2byte	0xa2f
 3840 0651 6B000000 		.4byte	0x6b
 3841 0655 02       		.uleb128 0x2
 3842 0656 91       		.byte	0x91
 3843 0657 77       		.sleb128 -9
 3844 0658 00       		.byte	0
 3845 0659 0D       		.uleb128 0xd
 3846 065a 25040000 		.4byte	.LASF74
 3847 065e 01       		.byte	0x1
 3848 065f 3E0A     		.2byte	0xa3e
 3849 0661 00000000 		.4byte	.LFB30
 3850 0665 2C000000 		.4byte	.LFE30-.LFB30
 3851 0669 01       		.uleb128 0x1
 3852 066a 9C       		.byte	0x9c
 3853 066b 7F060000 		.4byte	0x67f
 3854 066f 0B       		.uleb128 0xb
 3855 0670 20030000 		.4byte	.LASF58
 3856 0674 01       		.byte	0x1
 3857 0675 3E0A     		.2byte	0xa3e
 3858 0677 6B000000 		.4byte	0x6b
 3859 067b 02       		.uleb128 0x2
 3860 067c 91       		.byte	0x91
 3861 067d 77       		.sleb128 -9
 3862 067e 00       		.byte	0
 3863 067f 0D       		.uleb128 0xd
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 124


 3864 0680 FD040000 		.4byte	.LASF75
 3865 0684 01       		.byte	0x1
 3866 0685 4D0A     		.2byte	0xa4d
 3867 0687 00000000 		.4byte	.LFB31
 3868 068b 16000000 		.4byte	.LFE31-.LFB31
 3869 068f 01       		.uleb128 0x1
 3870 0690 9C       		.byte	0x9c
 3871 0691 A5060000 		.4byte	0x6a5
 3872 0695 0B       		.uleb128 0xb
 3873 0696 5F050000 		.4byte	.LASF52
 3874 069a 01       		.byte	0x1
 3875 069b 4D0A     		.2byte	0xa4d
 3876 069d 6B000000 		.4byte	0x6b
 3877 06a1 02       		.uleb128 0x2
 3878 06a2 91       		.byte	0x91
 3879 06a3 77       		.sleb128 -9
 3880 06a4 00       		.byte	0
 3881 06a5 0F       		.uleb128 0xf
 3882 06a6 DE000000 		.4byte	.LASF76
 3883 06aa 01       		.byte	0x1
 3884 06ab 650A     		.2byte	0xa65
 3885 06ad 00000000 		.4byte	.LFB32
 3886 06b1 24000000 		.4byte	.LFE32-.LFB32
 3887 06b5 01       		.uleb128 0x1
 3888 06b6 9C       		.byte	0x9c
 3889 06b7 0A       		.uleb128 0xa
 3890 06b8 D0050000 		.4byte	.LASF77
 3891 06bc 01       		.byte	0x1
 3892 06bd 790A     		.2byte	0xa79
 3893 06bf 00000000 		.4byte	.LFB33
 3894 06c3 4C000000 		.4byte	.LFE33-.LFB33
 3895 06c7 01       		.uleb128 0x1
 3896 06c8 9C       		.byte	0x9c
 3897 06c9 DD060000 		.4byte	0x6dd
 3898 06cd 0B       		.uleb128 0xb
 3899 06ce E1040000 		.4byte	.LASF78
 3900 06d2 01       		.byte	0x1
 3901 06d3 790A     		.2byte	0xa79
 3902 06d5 83000000 		.4byte	0x83
 3903 06d9 02       		.uleb128 0x2
 3904 06da 91       		.byte	0x91
 3905 06db 74       		.sleb128 -12
 3906 06dc 00       		.byte	0
 3907 06dd 0A       		.uleb128 0xa
 3908 06de 55050000 		.4byte	.LASF79
 3909 06e2 01       		.byte	0x1
 3910 06e3 900A     		.2byte	0xa90
 3911 06e5 00000000 		.4byte	.LFB34
 3912 06e9 28000000 		.4byte	.LFE34-.LFB34
 3913 06ed 01       		.uleb128 0x1
 3914 06ee 9C       		.byte	0x9c
 3915 06ef 03070000 		.4byte	0x703
 3916 06f3 0B       		.uleb128 0xb
 3917 06f4 B7060000 		.4byte	.LASF80
 3918 06f8 01       		.byte	0x1
 3919 06f9 900A     		.2byte	0xa90
 3920 06fb 77000000 		.4byte	0x77
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 125


 3921 06ff 02       		.uleb128 0x2
 3922 0700 91       		.byte	0x91
 3923 0701 76       		.sleb128 -10
 3924 0702 00       		.byte	0
 3925 0703 0A       		.uleb128 0xa
 3926 0704 34010000 		.4byte	.LASF81
 3927 0708 01       		.byte	0x1
 3928 0709 9E0A     		.2byte	0xa9e
 3929 070b 00000000 		.4byte	.LFB35
 3930 070f 84000000 		.4byte	.LFE35-.LFB35
 3931 0713 01       		.uleb128 0x1
 3932 0714 9C       		.byte	0x9c
 3933 0715 29070000 		.4byte	0x729
 3934 0719 0B       		.uleb128 0xb
 3935 071a 2F010000 		.4byte	.LASF34
 3936 071e 01       		.byte	0x1
 3937 071f 9E0A     		.2byte	0xa9e
 3938 0721 83000000 		.4byte	0x83
 3939 0725 02       		.uleb128 0x2
 3940 0726 91       		.byte	0x91
 3941 0727 74       		.sleb128 -12
 3942 0728 00       		.byte	0
 3943 0729 12       		.uleb128 0x12
 3944 072a 00040000 		.4byte	.LASF82
 3945 072e 01       		.byte	0x1
 3946 072f BE0A     		.2byte	0xabe
 3947 0731 00000000 		.4byte	.LFB36
 3948 0735 24000000 		.4byte	.LFE36-.LFB36
 3949 0739 01       		.uleb128 0x1
 3950 073a 9C       		.byte	0x9c
 3951 073b 0A       		.uleb128 0xa
 3952 073c 25020000 		.4byte	.LASF83
 3953 0740 01       		.byte	0x1
 3954 0741 DB0A     		.2byte	0xadb
 3955 0743 00000000 		.4byte	.LFB37
 3956 0747 60000000 		.4byte	.LFE37-.LFB37
 3957 074b 01       		.uleb128 0x1
 3958 074c 9C       		.byte	0x9c
 3959 074d 5F070000 		.4byte	0x75f
 3960 0751 13       		.uleb128 0x13
 3961 0752 6900     		.ascii	"i\000"
 3962 0754 01       		.byte	0x1
 3963 0755 DD0A     		.2byte	0xadd
 3964 0757 83000000 		.4byte	0x83
 3965 075b 02       		.uleb128 0x2
 3966 075c 91       		.byte	0x91
 3967 075d 74       		.sleb128 -12
 3968 075e 00       		.byte	0
 3969 075f 12       		.uleb128 0x12
 3970 0760 78050000 		.4byte	.LASF84
 3971 0764 01       		.byte	0x1
 3972 0765 F90A     		.2byte	0xaf9
 3973 0767 00000000 		.4byte	.LFB38
 3974 076b 20000000 		.4byte	.LFE38-.LFB38
 3975 076f 01       		.uleb128 0x1
 3976 0770 9C       		.byte	0x9c
 3977 0771 0F       		.uleb128 0xf
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 126


 3978 0772 39060000 		.4byte	.LASF85
 3979 0776 01       		.byte	0x1
 3980 0777 0A0B     		.2byte	0xb0a
 3981 0779 00000000 		.4byte	.LFB39
 3982 077d 1C000000 		.4byte	.LFE39-.LFB39
 3983 0781 01       		.uleb128 0x1
 3984 0782 9C       		.byte	0x9c
 3985 0783 0F       		.uleb128 0xf
 3986 0784 EE000000 		.4byte	.LASF86
 3987 0788 01       		.byte	0x1
 3988 0789 1A0B     		.2byte	0xb1a
 3989 078b 00000000 		.4byte	.LFB40
 3990 078f 1C000000 		.4byte	.LFE40-.LFB40
 3991 0793 01       		.uleb128 0x1
 3992 0794 9C       		.byte	0x9c
 3993 0795 0F       		.uleb128 0xf
 3994 0796 F0050000 		.4byte	.LASF87
 3995 079a 01       		.byte	0x1
 3996 079b 2A0B     		.2byte	0xb2a
 3997 079d 00000000 		.4byte	.LFB41
 3998 07a1 1C000000 		.4byte	.LFE41-.LFB41
 3999 07a5 01       		.uleb128 0x1
 4000 07a6 9C       		.byte	0x9c
 4001 07a7 0D       		.uleb128 0xd
 4002 07a8 CB060000 		.4byte	.LASF88
 4003 07ac 01       		.byte	0x1
 4004 07ad 3B0B     		.2byte	0xb3b
 4005 07af 00000000 		.4byte	.LFB42
 4006 07b3 20000000 		.4byte	.LFE42-.LFB42
 4007 07b7 01       		.uleb128 0x1
 4008 07b8 9C       		.byte	0x9c
 4009 07b9 CD070000 		.4byte	0x7cd
 4010 07bd 0B       		.uleb128 0xb
 4011 07be 33020000 		.4byte	.LASF68
 4012 07c2 01       		.byte	0x1
 4013 07c3 3B0B     		.2byte	0xb3b
 4014 07c5 83000000 		.4byte	0x83
 4015 07c9 02       		.uleb128 0x2
 4016 07ca 91       		.byte	0x91
 4017 07cb 74       		.sleb128 -12
 4018 07cc 00       		.byte	0
 4019 07cd 11       		.uleb128 0x11
 4020 07ce 4F010000 		.4byte	.LASF90
 4021 07d2 01       		.byte	0x1
 4022 07d3 4B0B     		.2byte	0xb4b
 4023 07d5 83000000 		.4byte	0x83
 4024 07d9 00000000 		.4byte	.LFB43
 4025 07dd 18000000 		.4byte	.LFE43-.LFB43
 4026 07e1 01       		.uleb128 0x1
 4027 07e2 9C       		.byte	0x9c
 4028 07e3 11       		.uleb128 0x11
 4029 07e4 7A040000 		.4byte	.LASF91
 4030 07e8 01       		.byte	0x1
 4031 07e9 5B0B     		.2byte	0xb5b
 4032 07eb 83000000 		.4byte	0x83
 4033 07ef 00000000 		.4byte	.LFB44
 4034 07f3 18000000 		.4byte	.LFE44-.LFB44
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 127


 4035 07f7 01       		.uleb128 0x1
 4036 07f8 9C       		.byte	0x9c
 4037 07f9 0D       		.uleb128 0xd
 4038 07fa F9020000 		.4byte	.LASF92
 4039 07fe 01       		.byte	0x1
 4040 07ff 7B0B     		.2byte	0xb7b
 4041 0801 00000000 		.4byte	.LFB45
 4042 0805 34000000 		.4byte	.LFE45-.LFB45
 4043 0809 01       		.uleb128 0x1
 4044 080a 9C       		.byte	0x9c
 4045 080b 1F080000 		.4byte	0x81f
 4046 080f 0B       		.uleb128 0xb
 4047 0810 39020000 		.4byte	.LASF93
 4048 0814 01       		.byte	0x1
 4049 0815 7B0B     		.2byte	0xb7b
 4050 0817 83000000 		.4byte	0x83
 4051 081b 02       		.uleb128 0x2
 4052 081c 91       		.byte	0x91
 4053 081d 74       		.sleb128 -12
 4054 081e 00       		.byte	0
 4055 081f 11       		.uleb128 0x11
 4056 0820 D8050000 		.4byte	.LASF94
 4057 0824 01       		.byte	0x1
 4058 0825 940B     		.2byte	0xb94
 4059 0827 83000000 		.4byte	0x83
 4060 082b 00000000 		.4byte	.LFB46
 4061 082f 18000000 		.4byte	.LFE46-.LFB46
 4062 0833 01       		.uleb128 0x1
 4063 0834 9C       		.byte	0x9c
 4064 0835 11       		.uleb128 0x11
 4065 0836 53020000 		.4byte	.LASF95
 4066 083a 01       		.byte	0x1
 4067 083b AB0B     		.2byte	0xbab
 4068 083d 83000000 		.4byte	0x83
 4069 0841 00000000 		.4byte	.LFB47
 4070 0845 18000000 		.4byte	.LFE47-.LFB47
 4071 0849 01       		.uleb128 0x1
 4072 084a 9C       		.byte	0x9c
 4073 084b 0F       		.uleb128 0xf
 4074 084c 76020000 		.4byte	.LASF96
 4075 0850 01       		.byte	0x1
 4076 0851 B80B     		.2byte	0xbb8
 4077 0853 00000000 		.4byte	.LFB48
 4078 0857 14000000 		.4byte	.LFE48-.LFB48
 4079 085b 01       		.uleb128 0x1
 4080 085c 9C       		.byte	0x9c
 4081 085d 10       		.uleb128 0x10
 4082 085e 9F050000 		.4byte	.LASF97
 4083 0862 01       		.byte	0x1
 4084 0863 DB0B     		.2byte	0xbdb
 4085 0865 F3000000 		.4byte	0xf3
 4086 0869 00000000 		.4byte	.LFB49
 4087 086d 2C000000 		.4byte	.LFE49-.LFB49
 4088 0871 01       		.uleb128 0x1
 4089 0872 9C       		.byte	0x9c
 4090 0873 A5080000 		.4byte	0x8a5
 4091 0877 0B       		.uleb128 0xb
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 128


 4092 0878 20030000 		.4byte	.LASF58
 4093 087c 01       		.byte	0x1
 4094 087d DB0B     		.2byte	0xbdb
 4095 087f 83000000 		.4byte	0x83
 4096 0883 02       		.uleb128 0x2
 4097 0884 91       		.byte	0x91
 4098 0885 6C       		.sleb128 -20
 4099 0886 0B       		.uleb128 0xb
 4100 0887 60040000 		.4byte	.LASF98
 4101 088b 01       		.byte	0x1
 4102 088c DB0B     		.2byte	0xbdb
 4103 088e F3000000 		.4byte	0xf3
 4104 0892 02       		.uleb128 0x2
 4105 0893 91       		.byte	0x91
 4106 0894 68       		.sleb128 -24
 4107 0895 0C       		.uleb128 0xc
 4108 0896 5A000000 		.4byte	.LASF99
 4109 089a 01       		.byte	0x1
 4110 089b DD0B     		.2byte	0xbdd
 4111 089d F3000000 		.4byte	0xf3
 4112 08a1 02       		.uleb128 0x2
 4113 08a2 91       		.byte	0x91
 4114 08a3 74       		.sleb128 -12
 4115 08a4 00       		.byte	0
 4116 08a5 10       		.uleb128 0x10
 4117 08a6 78010000 		.4byte	.LASF100
 4118 08aa 01       		.byte	0x1
 4119 08ab F30B     		.2byte	0xbf3
 4120 08ad F3000000 		.4byte	0xf3
 4121 08b1 00000000 		.4byte	.LFB50
 4122 08b5 1C000000 		.4byte	.LFE50-.LFB50
 4123 08b9 01       		.uleb128 0x1
 4124 08ba 9C       		.byte	0x9c
 4125 08bb CF080000 		.4byte	0x8cf
 4126 08bf 0B       		.uleb128 0xb
 4127 08c0 20030000 		.4byte	.LASF58
 4128 08c4 01       		.byte	0x1
 4129 08c5 F30B     		.2byte	0xbf3
 4130 08c7 83000000 		.4byte	0x83
 4131 08cb 02       		.uleb128 0x2
 4132 08cc 91       		.byte	0x91
 4133 08cd 74       		.sleb128 -12
 4134 08ce 00       		.byte	0
 4135 08cf 14       		.uleb128 0x14
 4136 08d0 DE060000 		.4byte	.LASF114
 4137 08d4 01       		.byte	0x1
 4138 08d5 000C     		.2byte	0xc00
 4139 08d7 00000000 		.4byte	.LFB51
 4140 08db 44000000 		.4byte	.LFE51-.LFB51
 4141 08df 01       		.uleb128 0x1
 4142 08e0 9C       		.byte	0x9c
 4143 08e1 F3080000 		.4byte	0x8f3
 4144 08e5 13       		.uleb128 0x13
 4145 08e6 6900     		.ascii	"i\000"
 4146 08e8 01       		.byte	0x1
 4147 08e9 020C     		.2byte	0xc02
 4148 08eb 83000000 		.4byte	0x83
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 129


 4149 08ef 02       		.uleb128 0x2
 4150 08f0 91       		.byte	0x91
 4151 08f1 74       		.sleb128 -12
 4152 08f2 00       		.byte	0
 4153 08f3 0D       		.uleb128 0xd
 4154 08f4 45020000 		.4byte	.LASF101
 4155 08f8 01       		.byte	0x1
 4156 08f9 200C     		.2byte	0xc20
 4157 08fb 00000000 		.4byte	.LFB52
 4158 08ff C0000000 		.4byte	.LFE52-.LFB52
 4159 0903 01       		.uleb128 0x1
 4160 0904 9C       		.byte	0x9c
 4161 0905 19090000 		.4byte	0x919
 4162 0909 0B       		.uleb128 0xb
 4163 090a C7050000 		.4byte	.LASF102
 4164 090e 01       		.byte	0x1
 4165 090f 200C     		.2byte	0xc20
 4166 0911 19090000 		.4byte	0x919
 4167 0915 02       		.uleb128 0x2
 4168 0916 91       		.byte	0x91
 4169 0917 74       		.sleb128 -12
 4170 0918 00       		.byte	0
 4171 0919 06       		.uleb128 0x6
 4172 091a 04       		.byte	0x4
 4173 091b 83000000 		.4byte	0x83
 4174 091f 15       		.uleb128 0x15
 4175 0920 F3000000 		.4byte	0xf3
 4176 0924 2F090000 		.4byte	0x92f
 4177 0928 16       		.uleb128 0x16
 4178 0929 EC000000 		.4byte	0xec
 4179 092d 04       		.byte	0x4
 4180 092e 00       		.byte	0
 4181 092f 17       		.uleb128 0x17
 4182 0930 B4050000 		.4byte	.LASF103
 4183 0934 01       		.byte	0x1
 4184 0935 22       		.byte	0x22
 4185 0936 1F090000 		.4byte	0x91f
 4186 093a 05       		.uleb128 0x5
 4187 093b 03       		.byte	0x3
 4188 093c 00000000 		.4byte	CySysTickCallbacks
 4189 0940 18       		.uleb128 0x18
 4190 0941 8C040000 		.4byte	.LASF104
 4191 0945 01       		.byte	0x1
 4192 0946 1B       		.byte	0x1b
 4193 0947 83000000 		.4byte	0x83
 4194 094b 05       		.uleb128 0x5
 4195 094c 03       		.byte	0x3
 4196 094d 00000000 		.4byte	cydelayFreqHz
 4197 0951 18       		.uleb128 0x18
 4198 0952 93010000 		.4byte	.LASF105
 4199 0956 01       		.byte	0x1
 4200 0957 1C       		.byte	0x1c
 4201 0958 83000000 		.4byte	0x83
 4202 095c 05       		.uleb128 0x5
 4203 095d 03       		.byte	0x3
 4204 095e 00000000 		.4byte	cydelayFreqKhz
 4205 0962 18       		.uleb128 0x18
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 130


 4206 0963 1A060000 		.4byte	.LASF106
 4207 0967 01       		.byte	0x1
 4208 0968 1D       		.byte	0x1d
 4209 0969 6B000000 		.4byte	0x6b
 4210 096d 05       		.uleb128 0x5
 4211 096e 03       		.byte	0x3
 4212 096f 00000000 		.4byte	cydelayFreqMhz
 4213 0973 18       		.uleb128 0x18
 4214 0974 18020000 		.4byte	.LASF107
 4215 0978 01       		.byte	0x1
 4216 0979 1E       		.byte	0x1e
 4217 097a 83000000 		.4byte	0x83
 4218 097e 05       		.uleb128 0x5
 4219 097f 03       		.byte	0x3
 4220 0980 00000000 		.4byte	cydelay32kMs
 4221 0984 18       		.uleb128 0x18
 4222 0985 C0000000 		.4byte	.LASF108
 4223 0989 01       		.byte	0x1
 4224 098a 36       		.byte	0x36
 4225 098b 83000000 		.4byte	0x83
 4226 098f 05       		.uleb128 0x5
 4227 0990 03       		.byte	0x3
 4228 0991 00000000 		.4byte	CySysTickInitVar
 4229 0995 15       		.uleb128 0x15
 4230 0996 A5090000 		.4byte	0x9a5
 4231 099a A5090000 		.4byte	0x9a5
 4232 099e 16       		.uleb128 0x16
 4233 099f EC000000 		.4byte	0xec
 4234 09a3 2D       		.byte	0x2d
 4235 09a4 00       		.byte	0
 4236 09a5 19       		.uleb128 0x19
 4237 09a6 6B000000 		.4byte	0x6b
 4238 09aa 18       		.uleb128 0x18
 4239 09ab 69040000 		.4byte	.LASF109
 4240 09af 01       		.byte	0x1
 4241 09b0 3B       		.byte	0x3b
 4242 09b1 BB090000 		.4byte	0x9bb
 4243 09b5 05       		.uleb128 0x5
 4244 09b6 03       		.byte	0x3
 4245 09b7 00000000 		.4byte	cyImoFreqMhz2Reg
 4246 09bb 19       		.uleb128 0x19
 4247 09bc 95090000 		.4byte	0x995
 4248 09c0 18       		.uleb128 0x18
 4249 09c1 40000000 		.4byte	.LASF110
 4250 09c5 01       		.byte	0x1
 4251 09c6 5C       		.byte	0x5c
 4252 09c7 83000000 		.4byte	0x83
 4253 09cb 05       		.uleb128 0x5
 4254 09cc 03       		.byte	0x3
 4255 09cd 00000000 		.4byte	CySysClkPumpConfig
 4256 09d1 00       		.byte	0
 4257              		.section	.debug_abbrev,"",%progbits
 4258              	.Ldebug_abbrev0:
 4259 0000 01       		.uleb128 0x1
 4260 0001 11       		.uleb128 0x11
 4261 0002 01       		.byte	0x1
 4262 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 131


 4263 0004 0E       		.uleb128 0xe
 4264 0005 13       		.uleb128 0x13
 4265 0006 0B       		.uleb128 0xb
 4266 0007 03       		.uleb128 0x3
 4267 0008 0E       		.uleb128 0xe
 4268 0009 1B       		.uleb128 0x1b
 4269 000a 0E       		.uleb128 0xe
 4270 000b 55       		.uleb128 0x55
 4271 000c 17       		.uleb128 0x17
 4272 000d 11       		.uleb128 0x11
 4273 000e 01       		.uleb128 0x1
 4274 000f 10       		.uleb128 0x10
 4275 0010 17       		.uleb128 0x17
 4276 0011 00       		.byte	0
 4277 0012 00       		.byte	0
 4278 0013 02       		.uleb128 0x2
 4279 0014 24       		.uleb128 0x24
 4280 0015 00       		.byte	0
 4281 0016 0B       		.uleb128 0xb
 4282 0017 0B       		.uleb128 0xb
 4283 0018 3E       		.uleb128 0x3e
 4284 0019 0B       		.uleb128 0xb
 4285 001a 03       		.uleb128 0x3
 4286 001b 0E       		.uleb128 0xe
 4287 001c 00       		.byte	0
 4288 001d 00       		.byte	0
 4289 001e 03       		.uleb128 0x3
 4290 001f 24       		.uleb128 0x24
 4291 0020 00       		.byte	0
 4292 0021 0B       		.uleb128 0xb
 4293 0022 0B       		.uleb128 0xb
 4294 0023 3E       		.uleb128 0x3e
 4295 0024 0B       		.uleb128 0xb
 4296 0025 03       		.uleb128 0x3
 4297 0026 08       		.uleb128 0x8
 4298 0027 00       		.byte	0
 4299 0028 00       		.byte	0
 4300 0029 04       		.uleb128 0x4
 4301 002a 16       		.uleb128 0x16
 4302 002b 00       		.byte	0
 4303 002c 03       		.uleb128 0x3
 4304 002d 0E       		.uleb128 0xe
 4305 002e 3A       		.uleb128 0x3a
 4306 002f 0B       		.uleb128 0xb
 4307 0030 3B       		.uleb128 0x3b
 4308 0031 05       		.uleb128 0x5
 4309 0032 49       		.uleb128 0x49
 4310 0033 13       		.uleb128 0x13
 4311 0034 00       		.byte	0
 4312 0035 00       		.byte	0
 4313 0036 05       		.uleb128 0x5
 4314 0037 35       		.uleb128 0x35
 4315 0038 00       		.byte	0
 4316 0039 49       		.uleb128 0x49
 4317 003a 13       		.uleb128 0x13
 4318 003b 00       		.byte	0
 4319 003c 00       		.byte	0
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 132


 4320 003d 06       		.uleb128 0x6
 4321 003e 0F       		.uleb128 0xf
 4322 003f 00       		.byte	0
 4323 0040 0B       		.uleb128 0xb
 4324 0041 0B       		.uleb128 0xb
 4325 0042 49       		.uleb128 0x49
 4326 0043 13       		.uleb128 0x13
 4327 0044 00       		.byte	0
 4328 0045 00       		.byte	0
 4329 0046 07       		.uleb128 0x7
 4330 0047 15       		.uleb128 0x15
 4331 0048 00       		.byte	0
 4332 0049 27       		.uleb128 0x27
 4333 004a 19       		.uleb128 0x19
 4334 004b 00       		.byte	0
 4335 004c 00       		.byte	0
 4336 004d 08       		.uleb128 0x8
 4337 004e 16       		.uleb128 0x16
 4338 004f 00       		.byte	0
 4339 0050 03       		.uleb128 0x3
 4340 0051 0E       		.uleb128 0xe
 4341 0052 3A       		.uleb128 0x3a
 4342 0053 0B       		.uleb128 0xb
 4343 0054 3B       		.uleb128 0x3b
 4344 0055 0B       		.uleb128 0xb
 4345 0056 49       		.uleb128 0x49
 4346 0057 13       		.uleb128 0x13
 4347 0058 00       		.byte	0
 4348 0059 00       		.byte	0
 4349 005a 09       		.uleb128 0x9
 4350 005b 2E       		.uleb128 0x2e
 4351 005c 00       		.byte	0
 4352 005d 3F       		.uleb128 0x3f
 4353 005e 19       		.uleb128 0x19
 4354 005f 03       		.uleb128 0x3
 4355 0060 0E       		.uleb128 0xe
 4356 0061 3A       		.uleb128 0x3a
 4357 0062 0B       		.uleb128 0xb
 4358 0063 3B       		.uleb128 0x3b
 4359 0064 0B       		.uleb128 0xb
 4360 0065 27       		.uleb128 0x27
 4361 0066 19       		.uleb128 0x19
 4362 0067 11       		.uleb128 0x11
 4363 0068 01       		.uleb128 0x1
 4364 0069 12       		.uleb128 0x12
 4365 006a 06       		.uleb128 0x6
 4366 006b 40       		.uleb128 0x40
 4367 006c 18       		.uleb128 0x18
 4368 006d 9742     		.uleb128 0x2117
 4369 006f 19       		.uleb128 0x19
 4370 0070 00       		.byte	0
 4371 0071 00       		.byte	0
 4372 0072 0A       		.uleb128 0xa
 4373 0073 2E       		.uleb128 0x2e
 4374 0074 01       		.byte	0x1
 4375 0075 3F       		.uleb128 0x3f
 4376 0076 19       		.uleb128 0x19
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 133


 4377 0077 03       		.uleb128 0x3
 4378 0078 0E       		.uleb128 0xe
 4379 0079 3A       		.uleb128 0x3a
 4380 007a 0B       		.uleb128 0xb
 4381 007b 3B       		.uleb128 0x3b
 4382 007c 05       		.uleb128 0x5
 4383 007d 27       		.uleb128 0x27
 4384 007e 19       		.uleb128 0x19
 4385 007f 11       		.uleb128 0x11
 4386 0080 01       		.uleb128 0x1
 4387 0081 12       		.uleb128 0x12
 4388 0082 06       		.uleb128 0x6
 4389 0083 40       		.uleb128 0x40
 4390 0084 18       		.uleb128 0x18
 4391 0085 9642     		.uleb128 0x2116
 4392 0087 19       		.uleb128 0x19
 4393 0088 01       		.uleb128 0x1
 4394 0089 13       		.uleb128 0x13
 4395 008a 00       		.byte	0
 4396 008b 00       		.byte	0
 4397 008c 0B       		.uleb128 0xb
 4398 008d 05       		.uleb128 0x5
 4399 008e 00       		.byte	0
 4400 008f 03       		.uleb128 0x3
 4401 0090 0E       		.uleb128 0xe
 4402 0091 3A       		.uleb128 0x3a
 4403 0092 0B       		.uleb128 0xb
 4404 0093 3B       		.uleb128 0x3b
 4405 0094 05       		.uleb128 0x5
 4406 0095 49       		.uleb128 0x49
 4407 0096 13       		.uleb128 0x13
 4408 0097 02       		.uleb128 0x2
 4409 0098 18       		.uleb128 0x18
 4410 0099 00       		.byte	0
 4411 009a 00       		.byte	0
 4412 009b 0C       		.uleb128 0xc
 4413 009c 34       		.uleb128 0x34
 4414 009d 00       		.byte	0
 4415 009e 03       		.uleb128 0x3
 4416 009f 0E       		.uleb128 0xe
 4417 00a0 3A       		.uleb128 0x3a
 4418 00a1 0B       		.uleb128 0xb
 4419 00a2 3B       		.uleb128 0x3b
 4420 00a3 05       		.uleb128 0x5
 4421 00a4 49       		.uleb128 0x49
 4422 00a5 13       		.uleb128 0x13
 4423 00a6 02       		.uleb128 0x2
 4424 00a7 18       		.uleb128 0x18
 4425 00a8 00       		.byte	0
 4426 00a9 00       		.byte	0
 4427 00aa 0D       		.uleb128 0xd
 4428 00ab 2E       		.uleb128 0x2e
 4429 00ac 01       		.byte	0x1
 4430 00ad 3F       		.uleb128 0x3f
 4431 00ae 19       		.uleb128 0x19
 4432 00af 03       		.uleb128 0x3
 4433 00b0 0E       		.uleb128 0xe
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 134


 4434 00b1 3A       		.uleb128 0x3a
 4435 00b2 0B       		.uleb128 0xb
 4436 00b3 3B       		.uleb128 0x3b
 4437 00b4 05       		.uleb128 0x5
 4438 00b5 27       		.uleb128 0x27
 4439 00b6 19       		.uleb128 0x19
 4440 00b7 11       		.uleb128 0x11
 4441 00b8 01       		.uleb128 0x1
 4442 00b9 12       		.uleb128 0x12
 4443 00ba 06       		.uleb128 0x6
 4444 00bb 40       		.uleb128 0x40
 4445 00bc 18       		.uleb128 0x18
 4446 00bd 9742     		.uleb128 0x2117
 4447 00bf 19       		.uleb128 0x19
 4448 00c0 01       		.uleb128 0x1
 4449 00c1 13       		.uleb128 0x13
 4450 00c2 00       		.byte	0
 4451 00c3 00       		.byte	0
 4452 00c4 0E       		.uleb128 0xe
 4453 00c5 2E       		.uleb128 0x2e
 4454 00c6 01       		.byte	0x1
 4455 00c7 3F       		.uleb128 0x3f
 4456 00c8 19       		.uleb128 0x19
 4457 00c9 03       		.uleb128 0x3
 4458 00ca 0E       		.uleb128 0xe
 4459 00cb 3A       		.uleb128 0x3a
 4460 00cc 0B       		.uleb128 0xb
 4461 00cd 3B       		.uleb128 0x3b
 4462 00ce 05       		.uleb128 0x5
 4463 00cf 27       		.uleb128 0x27
 4464 00d0 19       		.uleb128 0x19
 4465 00d1 49       		.uleb128 0x49
 4466 00d2 13       		.uleb128 0x13
 4467 00d3 11       		.uleb128 0x11
 4468 00d4 01       		.uleb128 0x1
 4469 00d5 12       		.uleb128 0x12
 4470 00d6 06       		.uleb128 0x6
 4471 00d7 40       		.uleb128 0x40
 4472 00d8 18       		.uleb128 0x18
 4473 00d9 9642     		.uleb128 0x2116
 4474 00db 19       		.uleb128 0x19
 4475 00dc 01       		.uleb128 0x1
 4476 00dd 13       		.uleb128 0x13
 4477 00de 00       		.byte	0
 4478 00df 00       		.byte	0
 4479 00e0 0F       		.uleb128 0xf
 4480 00e1 2E       		.uleb128 0x2e
 4481 00e2 00       		.byte	0
 4482 00e3 3F       		.uleb128 0x3f
 4483 00e4 19       		.uleb128 0x19
 4484 00e5 03       		.uleb128 0x3
 4485 00e6 0E       		.uleb128 0xe
 4486 00e7 3A       		.uleb128 0x3a
 4487 00e8 0B       		.uleb128 0xb
 4488 00e9 3B       		.uleb128 0x3b
 4489 00ea 05       		.uleb128 0x5
 4490 00eb 27       		.uleb128 0x27
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 135


 4491 00ec 19       		.uleb128 0x19
 4492 00ed 11       		.uleb128 0x11
 4493 00ee 01       		.uleb128 0x1
 4494 00ef 12       		.uleb128 0x12
 4495 00f0 06       		.uleb128 0x6
 4496 00f1 40       		.uleb128 0x40
 4497 00f2 18       		.uleb128 0x18
 4498 00f3 9742     		.uleb128 0x2117
 4499 00f5 19       		.uleb128 0x19
 4500 00f6 00       		.byte	0
 4501 00f7 00       		.byte	0
 4502 00f8 10       		.uleb128 0x10
 4503 00f9 2E       		.uleb128 0x2e
 4504 00fa 01       		.byte	0x1
 4505 00fb 3F       		.uleb128 0x3f
 4506 00fc 19       		.uleb128 0x19
 4507 00fd 03       		.uleb128 0x3
 4508 00fe 0E       		.uleb128 0xe
 4509 00ff 3A       		.uleb128 0x3a
 4510 0100 0B       		.uleb128 0xb
 4511 0101 3B       		.uleb128 0x3b
 4512 0102 05       		.uleb128 0x5
 4513 0103 27       		.uleb128 0x27
 4514 0104 19       		.uleb128 0x19
 4515 0105 49       		.uleb128 0x49
 4516 0106 13       		.uleb128 0x13
 4517 0107 11       		.uleb128 0x11
 4518 0108 01       		.uleb128 0x1
 4519 0109 12       		.uleb128 0x12
 4520 010a 06       		.uleb128 0x6
 4521 010b 40       		.uleb128 0x40
 4522 010c 18       		.uleb128 0x18
 4523 010d 9742     		.uleb128 0x2117
 4524 010f 19       		.uleb128 0x19
 4525 0110 01       		.uleb128 0x1
 4526 0111 13       		.uleb128 0x13
 4527 0112 00       		.byte	0
 4528 0113 00       		.byte	0
 4529 0114 11       		.uleb128 0x11
 4530 0115 2E       		.uleb128 0x2e
 4531 0116 00       		.byte	0
 4532 0117 3F       		.uleb128 0x3f
 4533 0118 19       		.uleb128 0x19
 4534 0119 03       		.uleb128 0x3
 4535 011a 0E       		.uleb128 0xe
 4536 011b 3A       		.uleb128 0x3a
 4537 011c 0B       		.uleb128 0xb
 4538 011d 3B       		.uleb128 0x3b
 4539 011e 05       		.uleb128 0x5
 4540 011f 27       		.uleb128 0x27
 4541 0120 19       		.uleb128 0x19
 4542 0121 49       		.uleb128 0x49
 4543 0122 13       		.uleb128 0x13
 4544 0123 11       		.uleb128 0x11
 4545 0124 01       		.uleb128 0x1
 4546 0125 12       		.uleb128 0x12
 4547 0126 06       		.uleb128 0x6
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 136


 4548 0127 40       		.uleb128 0x40
 4549 0128 18       		.uleb128 0x18
 4550 0129 9742     		.uleb128 0x2117
 4551 012b 19       		.uleb128 0x19
 4552 012c 00       		.byte	0
 4553 012d 00       		.byte	0
 4554 012e 12       		.uleb128 0x12
 4555 012f 2E       		.uleb128 0x2e
 4556 0130 00       		.byte	0
 4557 0131 3F       		.uleb128 0x3f
 4558 0132 19       		.uleb128 0x19
 4559 0133 03       		.uleb128 0x3
 4560 0134 0E       		.uleb128 0xe
 4561 0135 3A       		.uleb128 0x3a
 4562 0136 0B       		.uleb128 0xb
 4563 0137 3B       		.uleb128 0x3b
 4564 0138 05       		.uleb128 0x5
 4565 0139 27       		.uleb128 0x27
 4566 013a 19       		.uleb128 0x19
 4567 013b 11       		.uleb128 0x11
 4568 013c 01       		.uleb128 0x1
 4569 013d 12       		.uleb128 0x12
 4570 013e 06       		.uleb128 0x6
 4571 013f 40       		.uleb128 0x40
 4572 0140 18       		.uleb128 0x18
 4573 0141 9642     		.uleb128 0x2116
 4574 0143 19       		.uleb128 0x19
 4575 0144 00       		.byte	0
 4576 0145 00       		.byte	0
 4577 0146 13       		.uleb128 0x13
 4578 0147 34       		.uleb128 0x34
 4579 0148 00       		.byte	0
 4580 0149 03       		.uleb128 0x3
 4581 014a 08       		.uleb128 0x8
 4582 014b 3A       		.uleb128 0x3a
 4583 014c 0B       		.uleb128 0xb
 4584 014d 3B       		.uleb128 0x3b
 4585 014e 05       		.uleb128 0x5
 4586 014f 49       		.uleb128 0x49
 4587 0150 13       		.uleb128 0x13
 4588 0151 02       		.uleb128 0x2
 4589 0152 18       		.uleb128 0x18
 4590 0153 00       		.byte	0
 4591 0154 00       		.byte	0
 4592 0155 14       		.uleb128 0x14
 4593 0156 2E       		.uleb128 0x2e
 4594 0157 01       		.byte	0x1
 4595 0158 03       		.uleb128 0x3
 4596 0159 0E       		.uleb128 0xe
 4597 015a 3A       		.uleb128 0x3a
 4598 015b 0B       		.uleb128 0xb
 4599 015c 3B       		.uleb128 0x3b
 4600 015d 05       		.uleb128 0x5
 4601 015e 27       		.uleb128 0x27
 4602 015f 19       		.uleb128 0x19
 4603 0160 11       		.uleb128 0x11
 4604 0161 01       		.uleb128 0x1
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 137


 4605 0162 12       		.uleb128 0x12
 4606 0163 06       		.uleb128 0x6
 4607 0164 40       		.uleb128 0x40
 4608 0165 18       		.uleb128 0x18
 4609 0166 9642     		.uleb128 0x2116
 4610 0168 19       		.uleb128 0x19
 4611 0169 01       		.uleb128 0x1
 4612 016a 13       		.uleb128 0x13
 4613 016b 00       		.byte	0
 4614 016c 00       		.byte	0
 4615 016d 15       		.uleb128 0x15
 4616 016e 01       		.uleb128 0x1
 4617 016f 01       		.byte	0x1
 4618 0170 49       		.uleb128 0x49
 4619 0171 13       		.uleb128 0x13
 4620 0172 01       		.uleb128 0x1
 4621 0173 13       		.uleb128 0x13
 4622 0174 00       		.byte	0
 4623 0175 00       		.byte	0
 4624 0176 16       		.uleb128 0x16
 4625 0177 21       		.uleb128 0x21
 4626 0178 00       		.byte	0
 4627 0179 49       		.uleb128 0x49
 4628 017a 13       		.uleb128 0x13
 4629 017b 2F       		.uleb128 0x2f
 4630 017c 0B       		.uleb128 0xb
 4631 017d 00       		.byte	0
 4632 017e 00       		.byte	0
 4633 017f 17       		.uleb128 0x17
 4634 0180 34       		.uleb128 0x34
 4635 0181 00       		.byte	0
 4636 0182 03       		.uleb128 0x3
 4637 0183 0E       		.uleb128 0xe
 4638 0184 3A       		.uleb128 0x3a
 4639 0185 0B       		.uleb128 0xb
 4640 0186 3B       		.uleb128 0x3b
 4641 0187 0B       		.uleb128 0xb
 4642 0188 49       		.uleb128 0x49
 4643 0189 13       		.uleb128 0x13
 4644 018a 02       		.uleb128 0x2
 4645 018b 18       		.uleb128 0x18
 4646 018c 00       		.byte	0
 4647 018d 00       		.byte	0
 4648 018e 18       		.uleb128 0x18
 4649 018f 34       		.uleb128 0x34
 4650 0190 00       		.byte	0
 4651 0191 03       		.uleb128 0x3
 4652 0192 0E       		.uleb128 0xe
 4653 0193 3A       		.uleb128 0x3a
 4654 0194 0B       		.uleb128 0xb
 4655 0195 3B       		.uleb128 0x3b
 4656 0196 0B       		.uleb128 0xb
 4657 0197 49       		.uleb128 0x49
 4658 0198 13       		.uleb128 0x13
 4659 0199 3F       		.uleb128 0x3f
 4660 019a 19       		.uleb128 0x19
 4661 019b 02       		.uleb128 0x2
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 138


 4662 019c 18       		.uleb128 0x18
 4663 019d 00       		.byte	0
 4664 019e 00       		.byte	0
 4665 019f 19       		.uleb128 0x19
 4666 01a0 26       		.uleb128 0x26
 4667 01a1 00       		.byte	0
 4668 01a2 49       		.uleb128 0x49
 4669 01a3 13       		.uleb128 0x13
 4670 01a4 00       		.byte	0
 4671 01a5 00       		.byte	0
 4672 01a6 00       		.byte	0
 4673              		.section	.debug_aranges,"",%progbits
 4674 0000 AC010000 		.4byte	0x1ac
 4675 0004 0200     		.2byte	0x2
 4676 0006 00000000 		.4byte	.Ldebug_info0
 4677 000a 04       		.byte	0x4
 4678 000b 00       		.byte	0
 4679 000c 0000     		.2byte	0
 4680 000e 0000     		.2byte	0
 4681 0010 00000000 		.4byte	.LFB2
 4682 0014 1C000000 		.4byte	.LFE2-.LFB2
 4683 0018 00000000 		.4byte	.LFB3
 4684 001c 1C000000 		.4byte	.LFE3-.LFB3
 4685 0020 00000000 		.4byte	.LFB4
 4686 0024 48000000 		.4byte	.LFE4-.LFB4
 4687 0028 00000000 		.4byte	.LFB5
 4688 002c 50000000 		.4byte	.LFE5-.LFB5
 4689 0030 00000000 		.4byte	.LFB6
 4690 0034 34000000 		.4byte	.LFE6-.LFB6
 4691 0038 00000000 		.4byte	.LFB7
 4692 003c 48000000 		.4byte	.LFE7-.LFB7
 4693 0040 00000000 		.4byte	.LFB8
 4694 0044 E4010000 		.4byte	.LFE8-.LFB8
 4695 0048 00000000 		.4byte	.LFB9
 4696 004c 74000000 		.4byte	.LFE9-.LFB9
 4697 0050 00000000 		.4byte	.LFB10
 4698 0054 30000000 		.4byte	.LFE10-.LFB10
 4699 0058 00000000 		.4byte	.LFB11
 4700 005c 20000000 		.4byte	.LFE11-.LFB11
 4701 0060 00000000 		.4byte	.LFB12
 4702 0064 58000000 		.4byte	.LFE12-.LFB12
 4703 0068 00000000 		.4byte	.LFB13
 4704 006c 64000000 		.4byte	.LFE13-.LFB13
 4705 0070 00000000 		.4byte	.LFB14
 4706 0074 2C000000 		.4byte	.LFE14-.LFB14
 4707 0078 00000000 		.4byte	.LFB15
 4708 007c 18000000 		.4byte	.LFE15-.LFB15
 4709 0080 00000000 		.4byte	.LFB16
 4710 0084 14000000 		.4byte	.LFE16-.LFB16
 4711 0088 00000000 		.4byte	.LFB17
 4712 008c 30000000 		.4byte	.LFE17-.LFB17
 4713 0090 00000000 		.4byte	.LFB18
 4714 0094 24000000 		.4byte	.LFE18-.LFB18
 4715 0098 00000000 		.4byte	.LFB19
 4716 009c 1C000000 		.4byte	.LFE19-.LFB19
 4717 00a0 00000000 		.4byte	.LFB20
 4718 00a4 48000000 		.4byte	.LFE20-.LFB20
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 139


 4719 00a8 00000000 		.4byte	.LFB21
 4720 00ac 34000000 		.4byte	.LFE21-.LFB21
 4721 00b0 00000000 		.4byte	.LFB22
 4722 00b4 4C000000 		.4byte	.LFE22-.LFB22
 4723 00b8 00000000 		.4byte	.LFB23
 4724 00bc 36000000 		.4byte	.LFE23-.LFB23
 4725 00c0 00000000 		.4byte	.LFB24
 4726 00c4 A8000000 		.4byte	.LFE24-.LFB24
 4727 00c8 00000000 		.4byte	.LFB25
 4728 00cc 58000000 		.4byte	.LFE25-.LFB25
 4729 00d0 00000000 		.4byte	.LFB26
 4730 00d4 2C000000 		.4byte	.LFE26-.LFB26
 4731 00d8 00000000 		.4byte	.LFB27
 4732 00dc 30000000 		.4byte	.LFE27-.LFB27
 4733 00e0 00000000 		.4byte	.LFB28
 4734 00e4 2C000000 		.4byte	.LFE28-.LFB28
 4735 00e8 00000000 		.4byte	.LFB29
 4736 00ec 2C000000 		.4byte	.LFE29-.LFB29
 4737 00f0 00000000 		.4byte	.LFB30
 4738 00f4 2C000000 		.4byte	.LFE30-.LFB30
 4739 00f8 00000000 		.4byte	.LFB31
 4740 00fc 16000000 		.4byte	.LFE31-.LFB31
 4741 0100 00000000 		.4byte	.LFB32
 4742 0104 24000000 		.4byte	.LFE32-.LFB32
 4743 0108 00000000 		.4byte	.LFB33
 4744 010c 4C000000 		.4byte	.LFE33-.LFB33
 4745 0110 00000000 		.4byte	.LFB34
 4746 0114 28000000 		.4byte	.LFE34-.LFB34
 4747 0118 00000000 		.4byte	.LFB35
 4748 011c 84000000 		.4byte	.LFE35-.LFB35
 4749 0120 00000000 		.4byte	.LFB36
 4750 0124 24000000 		.4byte	.LFE36-.LFB36
 4751 0128 00000000 		.4byte	.LFB37
 4752 012c 60000000 		.4byte	.LFE37-.LFB37
 4753 0130 00000000 		.4byte	.LFB38
 4754 0134 20000000 		.4byte	.LFE38-.LFB38
 4755 0138 00000000 		.4byte	.LFB39
 4756 013c 1C000000 		.4byte	.LFE39-.LFB39
 4757 0140 00000000 		.4byte	.LFB40
 4758 0144 1C000000 		.4byte	.LFE40-.LFB40
 4759 0148 00000000 		.4byte	.LFB41
 4760 014c 1C000000 		.4byte	.LFE41-.LFB41
 4761 0150 00000000 		.4byte	.LFB42
 4762 0154 20000000 		.4byte	.LFE42-.LFB42
 4763 0158 00000000 		.4byte	.LFB43
 4764 015c 18000000 		.4byte	.LFE43-.LFB43
 4765 0160 00000000 		.4byte	.LFB44
 4766 0164 18000000 		.4byte	.LFE44-.LFB44
 4767 0168 00000000 		.4byte	.LFB45
 4768 016c 34000000 		.4byte	.LFE45-.LFB45
 4769 0170 00000000 		.4byte	.LFB46
 4770 0174 18000000 		.4byte	.LFE46-.LFB46
 4771 0178 00000000 		.4byte	.LFB47
 4772 017c 18000000 		.4byte	.LFE47-.LFB47
 4773 0180 00000000 		.4byte	.LFB48
 4774 0184 14000000 		.4byte	.LFE48-.LFB48
 4775 0188 00000000 		.4byte	.LFB49
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 140


 4776 018c 2C000000 		.4byte	.LFE49-.LFB49
 4777 0190 00000000 		.4byte	.LFB50
 4778 0194 1C000000 		.4byte	.LFE50-.LFB50
 4779 0198 00000000 		.4byte	.LFB51
 4780 019c 44000000 		.4byte	.LFE51-.LFB51
 4781 01a0 00000000 		.4byte	.LFB52
 4782 01a4 C0000000 		.4byte	.LFE52-.LFB52
 4783 01a8 00000000 		.4byte	0
 4784 01ac 00000000 		.4byte	0
 4785              		.section	.debug_ranges,"",%progbits
 4786              	.Ldebug_ranges0:
 4787 0000 00000000 		.4byte	.LFB2
 4788 0004 1C000000 		.4byte	.LFE2
 4789 0008 00000000 		.4byte	.LFB3
 4790 000c 1C000000 		.4byte	.LFE3
 4791 0010 00000000 		.4byte	.LFB4
 4792 0014 48000000 		.4byte	.LFE4
 4793 0018 00000000 		.4byte	.LFB5
 4794 001c 50000000 		.4byte	.LFE5
 4795 0020 00000000 		.4byte	.LFB6
 4796 0024 34000000 		.4byte	.LFE6
 4797 0028 00000000 		.4byte	.LFB7
 4798 002c 48000000 		.4byte	.LFE7
 4799 0030 00000000 		.4byte	.LFB8
 4800 0034 E4010000 		.4byte	.LFE8
 4801 0038 00000000 		.4byte	.LFB9
 4802 003c 74000000 		.4byte	.LFE9
 4803 0040 00000000 		.4byte	.LFB10
 4804 0044 30000000 		.4byte	.LFE10
 4805 0048 00000000 		.4byte	.LFB11
 4806 004c 20000000 		.4byte	.LFE11
 4807 0050 00000000 		.4byte	.LFB12
 4808 0054 58000000 		.4byte	.LFE12
 4809 0058 00000000 		.4byte	.LFB13
 4810 005c 64000000 		.4byte	.LFE13
 4811 0060 00000000 		.4byte	.LFB14
 4812 0064 2C000000 		.4byte	.LFE14
 4813 0068 00000000 		.4byte	.LFB15
 4814 006c 18000000 		.4byte	.LFE15
 4815 0070 00000000 		.4byte	.LFB16
 4816 0074 14000000 		.4byte	.LFE16
 4817 0078 00000000 		.4byte	.LFB17
 4818 007c 30000000 		.4byte	.LFE17
 4819 0080 00000000 		.4byte	.LFB18
 4820 0084 24000000 		.4byte	.LFE18
 4821 0088 00000000 		.4byte	.LFB19
 4822 008c 1C000000 		.4byte	.LFE19
 4823 0090 00000000 		.4byte	.LFB20
 4824 0094 48000000 		.4byte	.LFE20
 4825 0098 00000000 		.4byte	.LFB21
 4826 009c 34000000 		.4byte	.LFE21
 4827 00a0 00000000 		.4byte	.LFB22
 4828 00a4 4C000000 		.4byte	.LFE22
 4829 00a8 00000000 		.4byte	.LFB23
 4830 00ac 36000000 		.4byte	.LFE23
 4831 00b0 00000000 		.4byte	.LFB24
 4832 00b4 A8000000 		.4byte	.LFE24
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 141


 4833 00b8 00000000 		.4byte	.LFB25
 4834 00bc 58000000 		.4byte	.LFE25
 4835 00c0 00000000 		.4byte	.LFB26
 4836 00c4 2C000000 		.4byte	.LFE26
 4837 00c8 00000000 		.4byte	.LFB27
 4838 00cc 30000000 		.4byte	.LFE27
 4839 00d0 00000000 		.4byte	.LFB28
 4840 00d4 2C000000 		.4byte	.LFE28
 4841 00d8 00000000 		.4byte	.LFB29
 4842 00dc 2C000000 		.4byte	.LFE29
 4843 00e0 00000000 		.4byte	.LFB30
 4844 00e4 2C000000 		.4byte	.LFE30
 4845 00e8 00000000 		.4byte	.LFB31
 4846 00ec 16000000 		.4byte	.LFE31
 4847 00f0 00000000 		.4byte	.LFB32
 4848 00f4 24000000 		.4byte	.LFE32
 4849 00f8 00000000 		.4byte	.LFB33
 4850 00fc 4C000000 		.4byte	.LFE33
 4851 0100 00000000 		.4byte	.LFB34
 4852 0104 28000000 		.4byte	.LFE34
 4853 0108 00000000 		.4byte	.LFB35
 4854 010c 84000000 		.4byte	.LFE35
 4855 0110 00000000 		.4byte	.LFB36
 4856 0114 24000000 		.4byte	.LFE36
 4857 0118 00000000 		.4byte	.LFB37
 4858 011c 60000000 		.4byte	.LFE37
 4859 0120 00000000 		.4byte	.LFB38
 4860 0124 20000000 		.4byte	.LFE38
 4861 0128 00000000 		.4byte	.LFB39
 4862 012c 1C000000 		.4byte	.LFE39
 4863 0130 00000000 		.4byte	.LFB40
 4864 0134 1C000000 		.4byte	.LFE40
 4865 0138 00000000 		.4byte	.LFB41
 4866 013c 1C000000 		.4byte	.LFE41
 4867 0140 00000000 		.4byte	.LFB42
 4868 0144 20000000 		.4byte	.LFE42
 4869 0148 00000000 		.4byte	.LFB43
 4870 014c 18000000 		.4byte	.LFE43
 4871 0150 00000000 		.4byte	.LFB44
 4872 0154 18000000 		.4byte	.LFE44
 4873 0158 00000000 		.4byte	.LFB45
 4874 015c 34000000 		.4byte	.LFE45
 4875 0160 00000000 		.4byte	.LFB46
 4876 0164 18000000 		.4byte	.LFE46
 4877 0168 00000000 		.4byte	.LFB47
 4878 016c 18000000 		.4byte	.LFE47
 4879 0170 00000000 		.4byte	.LFB48
 4880 0174 14000000 		.4byte	.LFE48
 4881 0178 00000000 		.4byte	.LFB49
 4882 017c 2C000000 		.4byte	.LFE49
 4883 0180 00000000 		.4byte	.LFB50
 4884 0184 1C000000 		.4byte	.LFE50
 4885 0188 00000000 		.4byte	.LFB51
 4886 018c 44000000 		.4byte	.LFE51
 4887 0190 00000000 		.4byte	.LFB52
 4888 0194 C0000000 		.4byte	.LFE52
 4889 0198 00000000 		.4byte	0
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 142


 4890 019c 00000000 		.4byte	0
 4891              		.section	.debug_line,"",%progbits
 4892              	.Ldebug_line0:
 4893 0000 10050000 		.section	.debug_str,"MS",%progbits,1
 4893      02004D00 
 4893      00000201 
 4893      FB0E0D00 
 4893      01010101 
 4894              	.LASF61:
 4895 0000 72616D56 		.ascii	"ramVectorTable\000"
 4895      6563746F 
 4895      72546162 
 4895      6C6500
 4896              	.LASF35:
 4897 000f 62675472 		.ascii	"bgTrim4\000"
 4897      696D3400 
 4898              	.LASF10:
 4899 0017 75696E74 		.ascii	"uint16\000"
 4899      313600
 4900              	.LASF54:
 4901 001e 696E7453 		.ascii	"intState\000"
 4901      74617465 
 4901      00
 4902              	.LASF26:
 4903 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4903      73436C6B 
 4903      57726974 
 4903      65486663 
 4903      6C6B4469 
 4904              	.LASF110:
 4905 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 4905      73436C6B 
 4905      50756D70 
 4905      436F6E66 
 4905      696700
 4906              	.LASF60:
 4907 0053 6F6C6449 		.ascii	"oldIsr\000"
 4907      737200
 4908              	.LASF99:
 4909 005a 72657456 		.ascii	"retVal\000"
 4909      616C00
 4910              	.LASF53:
 4911 0061 43794469 		.ascii	"CyDisableInts\000"
 4911      7361626C 
 4911      65496E74 
 4911      7300
 4912              	.LASF38:
 4913 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 4913      656E7449 
 4913      6D6F5472 
 4913      696D3256 
 4913      616C7565 
 4914              	.LASF7:
 4915 0084 6C6F6E67 		.ascii	"long long unsigned int\000"
 4915      206C6F6E 
 4915      6720756E 
 4915      7369676E 
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 143


 4915      65642069 
 4916              	.LASF113:
 4917 009b 453A5C4D 		.ascii	"E:\\MyProjects\\WWV1_0_0\\WW_V1_1.cydsn\000"
 4917      7950726F 
 4917      6A656374 
 4917      735C5757 
 4917      56315F30 
 4918              	.LASF108:
 4919 00c0 43795379 		.ascii	"CySysTickInitVar\000"
 4919      73546963 
 4919      6B496E69 
 4919      74566172 
 4919      00
 4920              	.LASF55:
 4921 00d1 4379456E 		.ascii	"CyEnableInts\000"
 4921      61626C65 
 4921      496E7473 
 4921      00
 4922              	.LASF76:
 4923 00de 4379536F 		.ascii	"CySoftwareReset\000"
 4923      66747761 
 4923      72655265 
 4923      73657400 
 4924              	.LASF86:
 4925 00ee 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4925      73546963 
 4925      6B456E61 
 4925      626C6549 
 4925      6E746572 
 4926              	.LASF71:
 4927 0107 4379496E 		.ascii	"CyIntGetState\000"
 4927      74476574 
 4927      53746174 
 4927      6500
 4928              	.LASF6:
 4929 0115 6C6F6E67 		.ascii	"long long int\000"
 4929      206C6F6E 
 4929      6720696E 
 4929      7400
 4930              	.LASF0:
 4931 0123 7369676E 		.ascii	"signed char\000"
 4931      65642063 
 4931      68617200 
 4932              	.LASF34:
 4933 012f 66726571 		.ascii	"freq\000"
 4933      00
 4934              	.LASF81:
 4935 0134 43794465 		.ascii	"CyDelayFreq\000"
 4935      6C617946 
 4935      72657100 
 4936              	.LASF24:
 4937 0140 696E7465 		.ascii	"interruptState\000"
 4937      72727570 
 4937      74537461 
 4937      746500
 4938              	.LASF90:
 4939 014f 43795379 		.ascii	"CySysTickGetReload\000"
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 144


 4939      73546963 
 4939      6B476574 
 4939      52656C6F 
 4939      616400
 4940              	.LASF4:
 4941 0162 6C6F6E67 		.ascii	"long int\000"
 4941      20696E74 
 4941      00
 4942              	.LASF72:
 4943 016b 4379496E 		.ascii	"CyIntDisable\000"
 4943      74446973 
 4943      61626C65 
 4943      00
 4944              	.LASF100:
 4945 0178 43795379 		.ascii	"CySysTickGetCallback\000"
 4945      73546963 
 4945      6B476574 
 4945      43616C6C 
 4945      6261636B 
 4946              	.LASF9:
 4947 018d 75696E74 		.ascii	"uint8\000"
 4947      3800
 4948              	.LASF105:
 4949 0193 63796465 		.ascii	"cydelayFreqKhz\000"
 4949      6C617946 
 4949      7265714B 
 4949      687A00
 4950              	.LASF29:
 4951 01a2 656E6162 		.ascii	"enable\000"
 4951      6C6500
 4952              	.LASF13:
 4953 01a9 646F7562 		.ascii	"double\000"
 4953      6C6500
 4954              	.LASF67:
 4955 01b0 73686966 		.ascii	"shift\000"
 4955      7400
 4956              	.LASF50:
 4957 01b6 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4957      734C7664 
 4957      436C6561 
 4957      72496E74 
 4957      65727275 
 4958              	.LASF11:
 4959 01cd 75696E74 		.ascii	"uint32\000"
 4959      333200
 4960              	.LASF44:
 4961 01d4 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 4961      73436C6B 
 4961      45636F52 
 4961      65616453 
 4961      74617475 
 4962              	.LASF56:
 4963 01ea 6D61736B 		.ascii	"mask\000"
 4963      00
 4964              	.LASF39:
 4965 01ef 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4965      73436C6B 
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 145


 4965      47657453 
 4965      7973636C 
 4965      6B536F75 
 4966              	.LASF69:
 4967 0207 4379496E 		.ascii	"CyIntGetPriority\000"
 4967      74476574 
 4967      5072696F 
 4967      72697479 
 4967      00
 4968              	.LASF107:
 4969 0218 63796465 		.ascii	"cydelay32kMs\000"
 4969      6C617933 
 4969      326B4D73 
 4969      00
 4970              	.LASF83:
 4971 0225 43795379 		.ascii	"CySysTickInit\000"
 4971      73546963 
 4971      6B496E69 
 4971      7400
 4972              	.LASF68:
 4973 0233 76616C75 		.ascii	"value\000"
 4973      6500
 4974              	.LASF93:
 4975 0239 636C6F63 		.ascii	"clockSource\000"
 4975      6B536F75 
 4975      72636500 
 4976              	.LASF101:
 4977 0245 43794765 		.ascii	"CyGetUniqueId\000"
 4977      74556E69 
 4977      71756549 
 4977      6400
 4978              	.LASF95:
 4979 0253 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4979      73546963 
 4979      6B476574 
 4979      436F756E 
 4979      74466C61 
 4980              	.LASF8:
 4981 0269 756E7369 		.ascii	"unsigned int\000"
 4981      676E6564 
 4981      20696E74 
 4981      00
 4982              	.LASF96:
 4983 0276 43795379 		.ascii	"CySysTickClear\000"
 4983      73546963 
 4983      6B436C65 
 4983      617200
 4984              	.LASF5:
 4985 0285 6C6F6E67 		.ascii	"long unsigned int\000"
 4985      20756E73 
 4985      69676E65 
 4985      6420696E 
 4985      7400
 4986              	.LASF89:
 4987 0297 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4987      734C7664 
 4987      47657449 
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 146


 4987      6E746572 
 4987      72757074 
 4988              	.LASF23:
 4989 02b2 43795379 		.ascii	"CySysClkImoStop\000"
 4989      73436C6B 
 4989      496D6F53 
 4989      746F7000 
 4990              	.LASF73:
 4991 02c2 4379496E 		.ascii	"CyIntSetPending\000"
 4991      74536574 
 4991      50656E64 
 4991      696E6700 
 4992              	.LASF51:
 4993 02d2 43795379 		.ascii	"CySysGetResetReason\000"
 4993      73476574 
 4993      52657365 
 4993      74526561 
 4993      736F6E00 
 4994              	.LASF3:
 4995 02e6 73686F72 		.ascii	"short unsigned int\000"
 4995      7420756E 
 4995      7369676E 
 4995      65642069 
 4995      6E7400
 4996              	.LASF92:
 4997 02f9 43795379 		.ascii	"CySysTickSetClockSource\000"
 4997      73546963 
 4997      6B536574 
 4997      436C6F63 
 4997      6B536F75 
 4998              	.LASF63:
 4999 0311 4379496E 		.ascii	"CyIntSetVector\000"
 4999      74536574 
 4999      56656374 
 4999      6F7200
 5000              	.LASF58:
 5001 0320 6E756D62 		.ascii	"number\000"
 5001      657200
 5002              	.LASF66:
 5003 0327 7072696F 		.ascii	"priority\000"
 5003      72697479 
 5003      00
 5004              	.LASF33:
 5005 0330 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5005      73436C6B 
 5005      57726974 
 5005      65496D6F 
 5005      46726571 
 5006              	.LASF111:
 5007 0345 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5007      43313120 
 5007      352E342E 
 5007      31203230 
 5007      31363036 
 5008 0378 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5008      20726576 
 5008      6973696F 
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 147


 5008      6E203233 
 5008      37373135 
 5009 03ab 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5009      66756E63 
 5009      74696F6E 
 5009      2D736563 
 5009      74696F6E 
 5010              	.LASF57:
 5011 03d3 4379496E 		.ascii	"CyIntSetSysVector\000"
 5011      74536574 
 5011      53797356 
 5011      6563746F 
 5011      7200
 5012              	.LASF27:
 5013 03e5 43795379 		.ascii	"CySysEnablePumpClock\000"
 5013      73456E61 
 5013      626C6550 
 5013      756D7043 
 5013      6C6F636B 
 5014              	.LASF17:
 5015 03fa 72656733 		.ascii	"reg32\000"
 5015      3200
 5016              	.LASF82:
 5017 0400 43795379 		.ascii	"CySysTickStart\000"
 5017      73546963 
 5017      6B537461 
 5017      727400
 5018              	.LASF42:
 5019 040f 72657475 		.ascii	"returnStatus\000"
 5019      726E5374 
 5019      61747573 
 5019      00
 5020              	.LASF20:
 5021 041c 73697A65 		.ascii	"sizetype\000"
 5021      74797065 
 5021      00
 5022              	.LASF74:
 5023 0425 4379496E 		.ascii	"CyIntClearPending\000"
 5023      74436C65 
 5023      61725065 
 5023      6E64696E 
 5023      6700
 5024              	.LASF19:
 5025 0437 6C6F6E67 		.ascii	"long double\000"
 5025      20646F75 
 5025      626C6500 
 5026              	.LASF59:
 5027 0443 61646472 		.ascii	"address\000"
 5027      65737300 
 5028              	.LASF36:
 5029 044b 62675472 		.ascii	"bgTrim5\000"
 5029      696D3500 
 5030              	.LASF30:
 5031 0453 73797363 		.ascii	"sysclkSource\000"
 5031      6C6B536F 
 5031      75726365 
 5031      00
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 148


 5032              	.LASF98:
 5033 0460 66756E63 		.ascii	"function\000"
 5033      74696F6E 
 5033      00
 5034              	.LASF109:
 5035 0469 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5035      6F467265 
 5035      714D687A 
 5035      32526567 
 5035      00
 5036              	.LASF91:
 5037 047a 43795379 		.ascii	"CySysTickGetValue\000"
 5037      73546963 
 5037      6B476574 
 5037      56616C75 
 5037      6500
 5038              	.LASF104:
 5039 048c 63796465 		.ascii	"cydelayFreqHz\000"
 5039      6C617946 
 5039      72657148 
 5039      7A00
 5040              	.LASF65:
 5041 049a 4379496E 		.ascii	"CyIntSetPriority\000"
 5041      74536574 
 5041      5072696F 
 5041      72697479 
 5041      00
 5042              	.LASF12:
 5043 04ab 666C6F61 		.ascii	"float\000"
 5043      7400
 5044              	.LASF47:
 5045 04b1 43795379 		.ascii	"CySysLvdEnable\000"
 5045      734C7664 
 5045      456E6162 
 5045      6C6500
 5046              	.LASF21:
 5047 04c0 63795379 		.ascii	"cySysTickCallback\000"
 5047      73546963 
 5047      6B43616C 
 5047      6C626163 
 5047      6B00
 5048              	.LASF64:
 5049 04d2 4379496E 		.ascii	"CyIntGetVector\000"
 5049      74476574 
 5049      56656374 
 5049      6F7200
 5050              	.LASF78:
 5051 04e1 6D696C6C 		.ascii	"milliseconds\000"
 5051      69736563 
 5051      6F6E6473 
 5051      00
 5052              	.LASF16:
 5053 04ee 72656738 		.ascii	"reg8\000"
 5053      00
 5054              	.LASF48:
 5055 04f3 74687265 		.ascii	"threshold\000"
 5055      73686F6C 
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 149


 5055      6400
 5056              	.LASF75:
 5057 04fd 43794861 		.ascii	"CyHalt\000"
 5057      6C7400
 5058              	.LASF1:
 5059 0504 756E7369 		.ascii	"unsigned char\000"
 5059      676E6564 
 5059      20636861 
 5059      7200
 5060              	.LASF2:
 5061 0512 73686F72 		.ascii	"short int\000"
 5061      7420696E 
 5061      7400
 5062              	.LASF70:
 5063 051c 4379496E 		.ascii	"CyIntEnable\000"
 5063      74456E61 
 5063      626C6500 
 5064              	.LASF62:
 5065 0528 4379496E 		.ascii	"CyIntGetSysVector\000"
 5065      74476574 
 5065      53797356 
 5065      6563746F 
 5065      7200
 5066              	.LASF28:
 5067 053a 636C6B53 		.ascii	"clkSelect\000"
 5067      656C6563 
 5067      7400
 5068              	.LASF40:
 5069 0544 43795379 		.ascii	"CySysClkEcoStart\000"
 5069      73436C6B 
 5069      45636F53 
 5069      74617274 
 5069      00
 5070              	.LASF79:
 5071 0555 43794465 		.ascii	"CyDelayUs\000"
 5071      6C617955 
 5071      7300
 5072              	.LASF52:
 5073 055f 72656173 		.ascii	"reason\000"
 5073      6F6E00
 5074              	.LASF14:
 5075 0566 63686172 		.ascii	"char\000"
 5075      00
 5076              	.LASF18:
 5077 056b 63796973 		.ascii	"cyisraddress\000"
 5077      72616464 
 5077      72657373 
 5077      00
 5078              	.LASF84:
 5079 0578 43795379 		.ascii	"CySysTickEnable\000"
 5079      73546963 
 5079      6B456E61 
 5079      626C6500 
 5080              	.LASF31:
 5081 0588 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5081      73436C6B 
 5081      57726974 
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 150


 5081      65537973 
 5081      636C6B44 
 5082              	.LASF97:
 5083 059f 43795379 		.ascii	"CySysTickSetCallback\000"
 5083      73546963 
 5083      6B536574 
 5083      43616C6C 
 5083      6261636B 
 5084              	.LASF103:
 5085 05b4 43795379 		.ascii	"CySysTickCallbacks\000"
 5085      73546963 
 5085      6B43616C 
 5085      6C626163 
 5085      6B7300
 5086              	.LASF102:
 5087 05c7 756E6971 		.ascii	"uniqueId\000"
 5087      75654964 
 5087      00
 5088              	.LASF77:
 5089 05d0 43794465 		.ascii	"CyDelay\000"
 5089      6C617900 
 5090              	.LASF94:
 5091 05d8 43795379 		.ascii	"CySysTickGetClockSource\000"
 5091      73546963 
 5091      6B476574 
 5091      436C6F63 
 5091      6B536F75 
 5092              	.LASF87:
 5093 05f0 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5093      73546963 
 5093      6B446973 
 5093      61626C65 
 5093      496E7465 
 5094              	.LASF49:
 5095 060a 43795379 		.ascii	"CySysLvdDisable\000"
 5095      734C7664 
 5095      44697361 
 5095      626C6500 
 5096              	.LASF106:
 5097 061a 63796465 		.ascii	"cydelayFreqMhz\000"
 5097      6C617946 
 5097      7265714D 
 5097      687A00
 5098              	.LASF43:
 5099 0629 43795379 		.ascii	"CySysClkEcoStop\000"
 5099      73436C6B 
 5099      45636F53 
 5099      746F7000 
 5100              	.LASF85:
 5101 0639 43795379 		.ascii	"CySysTickStop\000"
 5101      73546963 
 5101      6B53746F 
 5101      7000
 5102              	.LASF41:
 5103 0647 74696D65 		.ascii	"timeoutUs\000"
 5103      6F757455 
 5103      7300
ARM GAS  C:\Users\YEHUDA~1\AppData\Local\Temp\ccVZcXan.s 			page 151


 5104              	.LASF32:
 5105 0651 64697669 		.ascii	"divider\000"
 5105      64657200 
 5106              	.LASF46:
 5107 0659 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5107      73436C6B 
 5107      57726974 
 5107      6545636F 
 5107      44697600 
 5108              	.LASF15:
 5109 066d 63797374 		.ascii	"cystatus\000"
 5109      61747573 
 5109      00
 5110              	.LASF22:
 5111 0676 43795379 		.ascii	"CySysClkImoStart\000"
 5111      73436C6B 
 5111      496D6F53 
 5111      74617274 
 5111      00
 5112              	.LASF37:
 5113 0687 6E657749 		.ascii	"newImoTrim2Value\000"
 5113      6D6F5472 
 5113      696D3256 
 5113      616C7565 
 5113      00
 5114              	.LASF112:
 5115 0698 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5115      72617465 
 5115      645F536F 
 5115      75726365 
 5115      5C50536F 
 5116              	.LASF80:
 5117 06b7 6D696372 		.ascii	"microseconds\000"
 5117      6F736563 
 5117      6F6E6473 
 5117      00
 5118              	.LASF25:
 5119 06c4 746D7052 		.ascii	"tmpReg\000"
 5119      656700
 5120              	.LASF88:
 5121 06cb 43795379 		.ascii	"CySysTickSetReload\000"
 5121      73546963 
 5121      6B536574 
 5121      52656C6F 
 5121      616400
 5122              	.LASF114:
 5123 06de 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5123      73546963 
 5123      6B536572 
 5123      76696365 
 5123      43616C6C 
 5124              	.LASF45:
 5125 06f8 72657475 		.ascii	"returnValue\000"
 5125      726E5661 
 5125      6C756500 
 5126              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
